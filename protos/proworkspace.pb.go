// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: proworkspace.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProPresenterWorkspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProScreens               []*ProPresenterScreen       `protobuf:"bytes,1,rep,name=pro_screens,json=proScreens,proto3" json:"pro_screens,omitempty"`
	AudienceLooks            []*ProAudienceLook          `protobuf:"bytes,2,rep,name=audience_looks,json=audienceLooks,proto3" json:"audience_looks,omitempty"`
	LiveAudienceLook         *ProAudienceLook            `protobuf:"bytes,3,opt,name=live_audience_look,json=liveAudienceLook,proto3" json:"live_audience_look,omitempty"`
	Masks                    []*ProMask                  `protobuf:"bytes,4,rep,name=masks,proto3" json:"masks,omitempty"`
	VideoInputs              []*VideoInput               `protobuf:"bytes,5,rep,name=videoInputs,proto3" json:"videoInputs,omitempty"`
	StageLayoutMappings      []*Stage_ScreenAssignment   `protobuf:"bytes,6,rep,name=stage_layout_mappings,json=stageLayoutMappings,proto3" json:"stage_layout_mappings,omitempty"`
	AudioSettings            *Audio_SettingsDocument     `protobuf:"bytes,7,opt,name=audio_settings,json=audioSettings,proto3" json:"audio_settings,omitempty"`
	SelectedLibraryName      string                      `protobuf:"bytes,8,opt,name=selected_library_name,json=selectedLibraryName,proto3" json:"selected_library_name,omitempty"`
	RecordSettings           *Recording_SettingsDocument `protobuf:"bytes,9,opt,name=record_settings,json=recordSettings,proto3" json:"record_settings,omitempty"`
	DigitalAudioSetup        *DigitalAudio_Setup         `protobuf:"bytes,10,opt,name=digital_audio_setup,json=digitalAudioSetup,proto3" json:"digital_audio_setup,omitempty"`
	AudioInputs              []*AudioInput               `protobuf:"bytes,11,rep,name=audio_inputs,json=audioInputs,proto3" json:"audio_inputs,omitempty"`
	AudioInputTransitionTime float64                     `protobuf:"fixed64,12,opt,name=audio_input_transition_time,json=audioInputTransitionTime,proto3" json:"audio_input_transition_time,omitempty"`
}

func (x *ProPresenterWorkspace) Reset() {
	*x = ProPresenterWorkspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proworkspace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProPresenterWorkspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProPresenterWorkspace) ProtoMessage() {}

func (x *ProPresenterWorkspace) ProtoReflect() protoreflect.Message {
	mi := &file_proworkspace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProPresenterWorkspace.ProtoReflect.Descriptor instead.
func (*ProPresenterWorkspace) Descriptor() ([]byte, []int) {
	return file_proworkspace_proto_rawDescGZIP(), []int{0}
}

func (x *ProPresenterWorkspace) GetProScreens() []*ProPresenterScreen {
	if x != nil {
		return x.ProScreens
	}
	return nil
}

func (x *ProPresenterWorkspace) GetAudienceLooks() []*ProAudienceLook {
	if x != nil {
		return x.AudienceLooks
	}
	return nil
}

func (x *ProPresenterWorkspace) GetLiveAudienceLook() *ProAudienceLook {
	if x != nil {
		return x.LiveAudienceLook
	}
	return nil
}

func (x *ProPresenterWorkspace) GetMasks() []*ProMask {
	if x != nil {
		return x.Masks
	}
	return nil
}

func (x *ProPresenterWorkspace) GetVideoInputs() []*VideoInput {
	if x != nil {
		return x.VideoInputs
	}
	return nil
}

func (x *ProPresenterWorkspace) GetStageLayoutMappings() []*Stage_ScreenAssignment {
	if x != nil {
		return x.StageLayoutMappings
	}
	return nil
}

func (x *ProPresenterWorkspace) GetAudioSettings() *Audio_SettingsDocument {
	if x != nil {
		return x.AudioSettings
	}
	return nil
}

func (x *ProPresenterWorkspace) GetSelectedLibraryName() string {
	if x != nil {
		return x.SelectedLibraryName
	}
	return ""
}

func (x *ProPresenterWorkspace) GetRecordSettings() *Recording_SettingsDocument {
	if x != nil {
		return x.RecordSettings
	}
	return nil
}

func (x *ProPresenterWorkspace) GetDigitalAudioSetup() *DigitalAudio_Setup {
	if x != nil {
		return x.DigitalAudioSetup
	}
	return nil
}

func (x *ProPresenterWorkspace) GetAudioInputs() []*AudioInput {
	if x != nil {
		return x.AudioInputs
	}
	return nil
}

func (x *ProPresenterWorkspace) GetAudioInputTransitionTime() float64 {
	if x != nil {
		return x.AudioInputTransitionTime
	}
	return 0
}

var File_proworkspace_proto protoreflect.FileDescriptor

var file_proworkspace_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0f, 0x70,
	0x72, 0x6f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x70, 0x72, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x72, 0x6f, 0x4d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa0, 0x06, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x41, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x52, 0x0d, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x46, 0x0a, 0x12, 0x6c, 0x69, 0x76,
	0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x50, 0x72, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x52,
	0x10, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x6f,
	0x6b, 0x12, 0x26, 0x0a, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x53, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x13, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x76, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x4b, 0x0a, 0x13, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x11, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x36, 0x0a, 0x0c,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proworkspace_proto_rawDescOnce sync.Once
	file_proworkspace_proto_rawDescData = file_proworkspace_proto_rawDesc
)

func file_proworkspace_proto_rawDescGZIP() []byte {
	file_proworkspace_proto_rawDescOnce.Do(func() {
		file_proworkspace_proto_rawDescData = protoimpl.X.CompressGZIP(file_proworkspace_proto_rawDescData)
	})
	return file_proworkspace_proto_rawDescData
}

var file_proworkspace_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proworkspace_proto_goTypes = []interface{}{
	(*ProPresenterWorkspace)(nil),      // 0: rv.data.ProPresenterWorkspace
	(*ProPresenterScreen)(nil),         // 1: rv.data.ProPresenterScreen
	(*ProAudienceLook)(nil),            // 2: rv.data.ProAudienceLook
	(*ProMask)(nil),                    // 3: rv.data.ProMask
	(*VideoInput)(nil),                 // 4: rv.data.VideoInput
	(*Stage_ScreenAssignment)(nil),     // 5: rv.data.Stage.ScreenAssignment
	(*Audio_SettingsDocument)(nil),     // 6: rv.data.Audio.SettingsDocument
	(*Recording_SettingsDocument)(nil), // 7: rv.data.Recording.SettingsDocument
	(*DigitalAudio_Setup)(nil),         // 8: rv.data.DigitalAudio.Setup
	(*AudioInput)(nil),                 // 9: rv.data.AudioInput
}
var file_proworkspace_proto_depIdxs = []int32{
	1,  // 0: rv.data.ProPresenterWorkspace.pro_screens:type_name -> rv.data.ProPresenterScreen
	2,  // 1: rv.data.ProPresenterWorkspace.audience_looks:type_name -> rv.data.ProAudienceLook
	2,  // 2: rv.data.ProPresenterWorkspace.live_audience_look:type_name -> rv.data.ProAudienceLook
	3,  // 3: rv.data.ProPresenterWorkspace.masks:type_name -> rv.data.ProMask
	4,  // 4: rv.data.ProPresenterWorkspace.videoInputs:type_name -> rv.data.VideoInput
	5,  // 5: rv.data.ProPresenterWorkspace.stage_layout_mappings:type_name -> rv.data.Stage.ScreenAssignment
	6,  // 6: rv.data.ProPresenterWorkspace.audio_settings:type_name -> rv.data.Audio.SettingsDocument
	7,  // 7: rv.data.ProPresenterWorkspace.record_settings:type_name -> rv.data.Recording.SettingsDocument
	8,  // 8: rv.data.ProPresenterWorkspace.digital_audio_setup:type_name -> rv.data.DigitalAudio.Setup
	9,  // 9: rv.data.ProPresenterWorkspace.audio_inputs:type_name -> rv.data.AudioInput
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proworkspace_proto_init() }
func file_proworkspace_proto_init() {
	if File_proworkspace_proto != nil {
		return
	}
	file_proscreen_proto_init()
	file_proAudienceLook_proto_init()
	file_proMask_proto_init()
	file_input_proto_init()
	file_audio_proto_init()
	file_digitalAudio_proto_init()
	file_stage_proto_init()
	file_recording_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proworkspace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProPresenterWorkspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proworkspace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proworkspace_proto_goTypes,
		DependencyIndexes: file_proworkspace_proto_depIdxs,
		MessageInfos:      file_proworkspace_proto_msgTypes,
	}.Build()
	File_proworkspace_proto = out.File
	file_proworkspace_proto_rawDesc = nil
	file_proworkspace_proto_goTypes = nil
	file_proworkspace_proto_depIdxs = nil
}
