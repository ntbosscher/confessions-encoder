// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: testPattern.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestPattern_Type int32

const (
	TestPattern_TYPE_UNKNOWN      TestPattern_Type = 0
	TestPattern_TYPE_BLEND_GRID   TestPattern_Type = 1
	TestPattern_TYPE_COLOR_BARS   TestPattern_Type = 2
	TestPattern_TYPE_FOCUS        TestPattern_Type = 3
	TestPattern_TYPE_GRAY_SCALE   TestPattern_Type = 4
	TestPattern_TYPE_BLACK_COLOR  TestPattern_Type = 5
	TestPattern_TYPE_WHITE_COLOR  TestPattern_Type = 6
	TestPattern_TYPE_CUSTOM_COLOR TestPattern_Type = 7
)

// Enum value maps for TestPattern_Type.
var (
	TestPattern_Type_name = map[int32]string{
		0: "TYPE_UNKNOWN",
		1: "TYPE_BLEND_GRID",
		2: "TYPE_COLOR_BARS",
		3: "TYPE_FOCUS",
		4: "TYPE_GRAY_SCALE",
		5: "TYPE_BLACK_COLOR",
		6: "TYPE_WHITE_COLOR",
		7: "TYPE_CUSTOM_COLOR",
	}
	TestPattern_Type_value = map[string]int32{
		"TYPE_UNKNOWN":      0,
		"TYPE_BLEND_GRID":   1,
		"TYPE_COLOR_BARS":   2,
		"TYPE_FOCUS":        3,
		"TYPE_GRAY_SCALE":   4,
		"TYPE_BLACK_COLOR":  5,
		"TYPE_WHITE_COLOR":  6,
		"TYPE_CUSTOM_COLOR": 7,
	}
)

func (x TestPattern_Type) Enum() *TestPattern_Type {
	p := new(TestPattern_Type)
	*p = x
	return p
}

func (x TestPattern_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestPattern_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_testPattern_proto_enumTypes[0].Descriptor()
}

func (TestPattern_Type) Type() protoreflect.EnumType {
	return &file_testPattern_proto_enumTypes[0]
}

func (x TestPattern_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestPattern_Type.Descriptor instead.
func (TestPattern_Type) EnumDescriptor() ([]byte, []int) {
	return file_testPattern_proto_rawDescGZIP(), []int{0, 0}
}

type TestPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type TestPattern_Type `protobuf:"varint,1,opt,name=type,proto3,enum=rv.data.TestPattern_Type" json:"type,omitempty"`
	// Types that are assignable to PatternProperties:
	//	*TestPattern_BlendGrid_
	//	*TestPattern_CustomColor_
	//	*TestPattern_Intensity
	PatternProperties isTestPattern_PatternProperties `protobuf_oneof:"PatternProperties"`
}

func (x *TestPattern) Reset() {
	*x = TestPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testPattern_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPattern) ProtoMessage() {}

func (x *TestPattern) ProtoReflect() protoreflect.Message {
	mi := &file_testPattern_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPattern.ProtoReflect.Descriptor instead.
func (*TestPattern) Descriptor() ([]byte, []int) {
	return file_testPattern_proto_rawDescGZIP(), []int{0}
}

func (x *TestPattern) GetType() TestPattern_Type {
	if x != nil {
		return x.Type
	}
	return TestPattern_TYPE_UNKNOWN
}

func (m *TestPattern) GetPatternProperties() isTestPattern_PatternProperties {
	if m != nil {
		return m.PatternProperties
	}
	return nil
}

func (x *TestPattern) GetBlendGrid() *TestPattern_BlendGrid {
	if x, ok := x.GetPatternProperties().(*TestPattern_BlendGrid_); ok {
		return x.BlendGrid
	}
	return nil
}

func (x *TestPattern) GetCustomColor() *TestPattern_CustomColor {
	if x, ok := x.GetPatternProperties().(*TestPattern_CustomColor_); ok {
		return x.CustomColor
	}
	return nil
}

func (x *TestPattern) GetIntensity() *TestPattern_IntensityColor {
	if x, ok := x.GetPatternProperties().(*TestPattern_Intensity); ok {
		return x.Intensity
	}
	return nil
}

type isTestPattern_PatternProperties interface {
	isTestPattern_PatternProperties()
}

type TestPattern_BlendGrid_ struct {
	BlendGrid *TestPattern_BlendGrid `protobuf:"bytes,2,opt,name=blend_grid,json=blendGrid,proto3,oneof"`
}

type TestPattern_CustomColor_ struct {
	CustomColor *TestPattern_CustomColor `protobuf:"bytes,3,opt,name=custom_color,json=customColor,proto3,oneof"`
}

type TestPattern_Intensity struct {
	Intensity *TestPattern_IntensityColor `protobuf:"bytes,4,opt,name=intensity,proto3,oneof"`
}

func (*TestPattern_BlendGrid_) isTestPattern_PatternProperties() {}

func (*TestPattern_CustomColor_) isTestPattern_PatternProperties() {}

func (*TestPattern_Intensity) isTestPattern_PatternProperties() {}

type TestPattern_BlendGrid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawGrid     bool    `protobuf:"varint,1,opt,name=draw_grid,json=drawGrid,proto3" json:"draw_grid,omitempty"`
	DrawCircles  bool    `protobuf:"varint,2,opt,name=draw_circles,json=drawCircles,proto3" json:"draw_circles,omitempty"`
	DrawLines    bool    `protobuf:"varint,3,opt,name=draw_lines,json=drawLines,proto3" json:"draw_lines,omitempty"`
	InvertColors bool    `protobuf:"varint,4,opt,name=invert_colors,json=invertColors,proto3" json:"invert_colors,omitempty"`
	GridSpacing  float64 `protobuf:"fixed64,5,opt,name=grid_spacing,json=gridSpacing,proto3" json:"grid_spacing,omitempty"`
}

func (x *TestPattern_BlendGrid) Reset() {
	*x = TestPattern_BlendGrid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testPattern_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPattern_BlendGrid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPattern_BlendGrid) ProtoMessage() {}

func (x *TestPattern_BlendGrid) ProtoReflect() protoreflect.Message {
	mi := &file_testPattern_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPattern_BlendGrid.ProtoReflect.Descriptor instead.
func (*TestPattern_BlendGrid) Descriptor() ([]byte, []int) {
	return file_testPattern_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TestPattern_BlendGrid) GetDrawGrid() bool {
	if x != nil {
		return x.DrawGrid
	}
	return false
}

func (x *TestPattern_BlendGrid) GetDrawCircles() bool {
	if x != nil {
		return x.DrawCircles
	}
	return false
}

func (x *TestPattern_BlendGrid) GetDrawLines() bool {
	if x != nil {
		return x.DrawLines
	}
	return false
}

func (x *TestPattern_BlendGrid) GetInvertColors() bool {
	if x != nil {
		return x.InvertColors
	}
	return false
}

func (x *TestPattern_BlendGrid) GetGridSpacing() float64 {
	if x != nil {
		return x.GridSpacing
	}
	return 0
}

type TestPattern_CustomColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color *Color `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *TestPattern_CustomColor) Reset() {
	*x = TestPattern_CustomColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testPattern_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPattern_CustomColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPattern_CustomColor) ProtoMessage() {}

func (x *TestPattern_CustomColor) ProtoReflect() protoreflect.Message {
	mi := &file_testPattern_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPattern_CustomColor.ProtoReflect.Descriptor instead.
func (*TestPattern_CustomColor) Descriptor() ([]byte, []int) {
	return file_testPattern_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TestPattern_CustomColor) GetColor() *Color {
	if x != nil {
		return x.Color
	}
	return nil
}

type TestPattern_IntensityColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intensity float64 `protobuf:"fixed64,1,opt,name=intensity,proto3" json:"intensity,omitempty"`
}

func (x *TestPattern_IntensityColor) Reset() {
	*x = TestPattern_IntensityColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testPattern_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPattern_IntensityColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPattern_IntensityColor) ProtoMessage() {}

func (x *TestPattern_IntensityColor) ProtoReflect() protoreflect.Message {
	mi := &file_testPattern_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPattern_IntensityColor.ProtoReflect.Descriptor instead.
func (*TestPattern_IntensityColor) Descriptor() ([]byte, []int) {
	return file_testPattern_proto_rawDescGZIP(), []int{0, 2}
}

func (x *TestPattern_IntensityColor) GetIntensity() float64 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

var File_testPattern_proto protoreflect.FileDescriptor

var file_testPattern_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x10, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5,
	0x05, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x2d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a,
	0x0a, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x69,
	0x64, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x69, 0x64, 0x12, 0x45,
	0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x1a, 0xb2, 0x01, 0x0a, 0x09, 0x42,
	0x6c, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x67, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x72, 0x61,
	0x77, 0x47, 0x72, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x63, 0x69,
	0x72, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x72, 0x61,
	0x77, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x72,
	0x61, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x67, 0x72, 0x69, 0x64, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x67, 0x72, 0x69, 0x64, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x1a,
	0x33, 0x0a, 0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x2e, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x22, 0xaa, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x47, 0x52,
	0x49, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4c,
	0x4f, 0x52, 0x5f, 0x42, 0x41, 0x52, 0x53, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x46, 0x4f, 0x43, 0x55, 0x53, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x5f, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x4f, 0x4c,
	0x4f, 0x52, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x48, 0x49,
	0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x10,
	0x07, 0x42, 0x13, 0x0a, 0x11, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testPattern_proto_rawDescOnce sync.Once
	file_testPattern_proto_rawDescData = file_testPattern_proto_rawDesc
)

func file_testPattern_proto_rawDescGZIP() []byte {
	file_testPattern_proto_rawDescOnce.Do(func() {
		file_testPattern_proto_rawDescData = protoimpl.X.CompressGZIP(file_testPattern_proto_rawDescData)
	})
	return file_testPattern_proto_rawDescData
}

var file_testPattern_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_testPattern_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_testPattern_proto_goTypes = []interface{}{
	(TestPattern_Type)(0),              // 0: rv.data.TestPattern.Type
	(*TestPattern)(nil),                // 1: rv.data.TestPattern
	(*TestPattern_BlendGrid)(nil),      // 2: rv.data.TestPattern.BlendGrid
	(*TestPattern_CustomColor)(nil),    // 3: rv.data.TestPattern.CustomColor
	(*TestPattern_IntensityColor)(nil), // 4: rv.data.TestPattern.IntensityColor
	(*Color)(nil),                      // 5: rv.data.Color
}
var file_testPattern_proto_depIdxs = []int32{
	0, // 0: rv.data.TestPattern.type:type_name -> rv.data.TestPattern.Type
	2, // 1: rv.data.TestPattern.blend_grid:type_name -> rv.data.TestPattern.BlendGrid
	3, // 2: rv.data.TestPattern.custom_color:type_name -> rv.data.TestPattern.CustomColor
	4, // 3: rv.data.TestPattern.intensity:type_name -> rv.data.TestPattern.IntensityColor
	5, // 4: rv.data.TestPattern.CustomColor.color:type_name -> rv.data.Color
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_testPattern_proto_init() }
func file_testPattern_proto_init() {
	if File_testPattern_proto != nil {
		return
	}
	file_basicTypes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_testPattern_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testPattern_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPattern_BlendGrid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testPattern_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPattern_CustomColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testPattern_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPattern_IntensityColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_testPattern_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TestPattern_BlendGrid_)(nil),
		(*TestPattern_CustomColor_)(nil),
		(*TestPattern_Intensity)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testPattern_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testPattern_proto_goTypes,
		DependencyIndexes: file_testPattern_proto_depIdxs,
		EnumInfos:         file_testPattern_proto_enumTypes,
		MessageInfos:      file_testPattern_proto_msgTypes,
	}.Build()
	File_testPattern_proto = out.File
	file_testPattern_proto_rawDesc = nil
	file_testPattern_proto_goTypes = nil
	file_testPattern_proto_depIdxs = nil
}
