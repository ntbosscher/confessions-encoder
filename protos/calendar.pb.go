// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: calendar.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Calendar_Event_DayOfWeek int32

const (
	Calendar_Event_DAY_OF_WEEK_UNKNOWN   Calendar_Event_DayOfWeek = 0
	Calendar_Event_DAY_OF_WEEK_SUNDAY    Calendar_Event_DayOfWeek = 1
	Calendar_Event_DAY_OF_WEEK_MONDAY    Calendar_Event_DayOfWeek = 2
	Calendar_Event_DAY_OF_WEEK_TUESDAY   Calendar_Event_DayOfWeek = 3
	Calendar_Event_DAY_OF_WEEK_WEDNESDAY Calendar_Event_DayOfWeek = 4
	Calendar_Event_DAY_OF_WEEK_THURSDAY  Calendar_Event_DayOfWeek = 5
	Calendar_Event_DAY_OF_WEEK_FRIDAY    Calendar_Event_DayOfWeek = 6
	Calendar_Event_DAY_OF_WEEK_SATURDAY  Calendar_Event_DayOfWeek = 7
)

// Enum value maps for Calendar_Event_DayOfWeek.
var (
	Calendar_Event_DayOfWeek_name = map[int32]string{
		0: "DAY_OF_WEEK_UNKNOWN",
		1: "DAY_OF_WEEK_SUNDAY",
		2: "DAY_OF_WEEK_MONDAY",
		3: "DAY_OF_WEEK_TUESDAY",
		4: "DAY_OF_WEEK_WEDNESDAY",
		5: "DAY_OF_WEEK_THURSDAY",
		6: "DAY_OF_WEEK_FRIDAY",
		7: "DAY_OF_WEEK_SATURDAY",
	}
	Calendar_Event_DayOfWeek_value = map[string]int32{
		"DAY_OF_WEEK_UNKNOWN":   0,
		"DAY_OF_WEEK_SUNDAY":    1,
		"DAY_OF_WEEK_MONDAY":    2,
		"DAY_OF_WEEK_TUESDAY":   3,
		"DAY_OF_WEEK_WEDNESDAY": 4,
		"DAY_OF_WEEK_THURSDAY":  5,
		"DAY_OF_WEEK_FRIDAY":    6,
		"DAY_OF_WEEK_SATURDAY":  7,
	}
)

func (x Calendar_Event_DayOfWeek) Enum() *Calendar_Event_DayOfWeek {
	p := new(Calendar_Event_DayOfWeek)
	*p = x
	return p
}

func (x Calendar_Event_DayOfWeek) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Calendar_Event_DayOfWeek) Descriptor() protoreflect.EnumDescriptor {
	return file_calendar_proto_enumTypes[0].Descriptor()
}

func (Calendar_Event_DayOfWeek) Type() protoreflect.EnumType {
	return &file_calendar_proto_enumTypes[0]
}

func (x Calendar_Event_DayOfWeek) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Calendar_Event_DayOfWeek.Descriptor instead.
func (Calendar_Event_DayOfWeek) EnumDescriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{0, 0, 0}
}

type Calendar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Calendar_Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Active bool              `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *Calendar) Reset() {
	*x = Calendar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Calendar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calendar) ProtoMessage() {}

func (x *Calendar) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calendar.ProtoReflect.Descriptor instead.
func (*Calendar) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{0}
}

func (x *Calendar) GetEvents() []*Calendar_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Calendar) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type Calendar_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                    *UUID                      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                    string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description             string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Date                    *Timestamp                 `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	RecurrenceDays          []Calendar_Event_DayOfWeek `protobuf:"varint,5,rep,packed,name=recurrence_days,json=recurrenceDays,proto3,enum=rv.data.Calendar_Event_DayOfWeek" json:"recurrence_days,omitempty"`
	RecurrenceLimitDate     *Timestamp                 `protobuf:"bytes,6,opt,name=recurrence_limit_date,json=recurrenceLimitDate,proto3" json:"recurrence_limit_date,omitempty"`
	RecurrenceExcludedDates []*Timestamp               `protobuf:"bytes,7,rep,name=recurrence_excluded_dates,json=recurrenceExcludedDates,proto3" json:"recurrence_excluded_dates,omitempty"`
	Action                  *Calendar_Event_Action     `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *Calendar_Event) Reset() {
	*x = Calendar_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Calendar_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calendar_Event) ProtoMessage() {}

func (x *Calendar_Event) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calendar_Event.ProtoReflect.Descriptor instead.
func (*Calendar_Event) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Calendar_Event) GetUuid() *UUID {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Calendar_Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Calendar_Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Calendar_Event) GetDate() *Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Calendar_Event) GetRecurrenceDays() []Calendar_Event_DayOfWeek {
	if x != nil {
		return x.RecurrenceDays
	}
	return nil
}

func (x *Calendar_Event) GetRecurrenceLimitDate() *Timestamp {
	if x != nil {
		return x.RecurrenceLimitDate
	}
	return nil
}

func (x *Calendar_Event) GetRecurrenceExcludedDates() []*Timestamp {
	if x != nil {
		return x.RecurrenceExcludedDates
	}
	return nil
}

func (x *Calendar_Event) GetAction() *Calendar_Event_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type Calendar_Event_Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Uuid *UUID  `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to ActionType:
	//	*Calendar_Event_Action_Playlist_
	//	*Calendar_Event_Action_Macro_
	ActionType isCalendar_Event_Action_ActionType `protobuf_oneof:"ActionType"`
}

func (x *Calendar_Event_Action) Reset() {
	*x = Calendar_Event_Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Calendar_Event_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calendar_Event_Action) ProtoMessage() {}

func (x *Calendar_Event_Action) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calendar_Event_Action.ProtoReflect.Descriptor instead.
func (*Calendar_Event_Action) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Calendar_Event_Action) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Calendar_Event_Action) GetUuid() *UUID {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (m *Calendar_Event_Action) GetActionType() isCalendar_Event_Action_ActionType {
	if m != nil {
		return m.ActionType
	}
	return nil
}

func (x *Calendar_Event_Action) GetPlaylist() *Calendar_Event_Action_Playlist {
	if x, ok := x.GetActionType().(*Calendar_Event_Action_Playlist_); ok {
		return x.Playlist
	}
	return nil
}

func (x *Calendar_Event_Action) GetMacro() *Calendar_Event_Action_Macro {
	if x, ok := x.GetActionType().(*Calendar_Event_Action_Macro_); ok {
		return x.Macro
	}
	return nil
}

type isCalendar_Event_Action_ActionType interface {
	isCalendar_Event_Action_ActionType()
}

type Calendar_Event_Action_Playlist_ struct {
	Playlist *Calendar_Event_Action_Playlist `protobuf:"bytes,3,opt,name=playlist,proto3,oneof"`
}

type Calendar_Event_Action_Macro_ struct {
	Macro *Calendar_Event_Action_Macro `protobuf:"bytes,4,opt,name=macro,proto3,oneof"`
}

func (*Calendar_Event_Action_Playlist_) isCalendar_Event_Action_ActionType() {}

func (*Calendar_Event_Action_Macro_) isCalendar_Event_Action_ActionType() {}

type Calendar_Event_Action_Playlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistUuid     *UUID `protobuf:"bytes,1,opt,name=playlist_uuid,json=playlistUuid,proto3" json:"playlist_uuid,omitempty"`
	PlaylistItemUuid *UUID `protobuf:"bytes,2,opt,name=playlist_item_uuid,json=playlistItemUuid,proto3" json:"playlist_item_uuid,omitempty"`
}

func (x *Calendar_Event_Action_Playlist) Reset() {
	*x = Calendar_Event_Action_Playlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Calendar_Event_Action_Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calendar_Event_Action_Playlist) ProtoMessage() {}

func (x *Calendar_Event_Action_Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calendar_Event_Action_Playlist.ProtoReflect.Descriptor instead.
func (*Calendar_Event_Action_Playlist) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *Calendar_Event_Action_Playlist) GetPlaylistUuid() *UUID {
	if x != nil {
		return x.PlaylistUuid
	}
	return nil
}

func (x *Calendar_Event_Action_Playlist) GetPlaylistItemUuid() *UUID {
	if x != nil {
		return x.PlaylistItemUuid
	}
	return nil
}

type Calendar_Event_Action_Macro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identification *CollectionElementType `protobuf:"bytes,1,opt,name=identification,proto3" json:"identification,omitempty"`
}

func (x *Calendar_Event_Action_Macro) Reset() {
	*x = Calendar_Event_Action_Macro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Calendar_Event_Action_Macro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calendar_Event_Action_Macro) ProtoMessage() {}

func (x *Calendar_Event_Action_Macro) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calendar_Event_Action_Macro.ProtoReflect.Descriptor instead.
func (*Calendar_Event_Action_Macro) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

func (x *Calendar_Event_Action_Macro) GetIdentification() *CollectionElementType {
	if x != nil {
		return x.Identification
	}
	return nil
}

var File_calendar_proto protoreflect.FileDescriptor

var file_calendar_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x08, 0x0a,
	0x08, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x76, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x1a, 0x9e, 0x08, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x46, 0x0a, 0x15, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x72, 0x65,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x4e, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x17, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa0, 0x03, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x61, 0x63, 0x72, 0x6f,
	0x1a, 0x7b, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x3b, 0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x10, 0x70, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x1a, 0x4f, 0x0a,
	0x05, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x46, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c,
	0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd4, 0x01, 0x0a,
	0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x41,
	0x59, 0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x59, 0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x45,
	0x45, 0x4b, 0x5f, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44,
	0x41, 0x59, 0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x4d, 0x4f, 0x4e, 0x44, 0x41,
	0x59, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x41, 0x59, 0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x45,
	0x45, 0x4b, 0x5f, 0x54, 0x55, 0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15,
	0x44, 0x41, 0x59, 0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x57, 0x45, 0x44, 0x4e,
	0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x41, 0x59, 0x5f, 0x4f,
	0x46, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x54, 0x48, 0x55, 0x52, 0x53, 0x44, 0x41, 0x59, 0x10,
	0x05, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x59, 0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x45, 0x45, 0x4b,
	0x5f, 0x46, 0x52, 0x49, 0x44, 0x41, 0x59, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x41, 0x59,
	0x5f, 0x4f, 0x46, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x53, 0x41, 0x54, 0x55, 0x52, 0x44, 0x41,
	0x59, 0x10, 0x07, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calendar_proto_rawDescOnce sync.Once
	file_calendar_proto_rawDescData = file_calendar_proto_rawDesc
)

func file_calendar_proto_rawDescGZIP() []byte {
	file_calendar_proto_rawDescOnce.Do(func() {
		file_calendar_proto_rawDescData = protoimpl.X.CompressGZIP(file_calendar_proto_rawDescData)
	})
	return file_calendar_proto_rawDescData
}

var file_calendar_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_calendar_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_calendar_proto_goTypes = []interface{}{
	(Calendar_Event_DayOfWeek)(0),          // 0: rv.data.Calendar.Event.DayOfWeek
	(*Calendar)(nil),                       // 1: rv.data.Calendar
	(*Calendar_Event)(nil),                 // 2: rv.data.Calendar.Event
	(*Calendar_Event_Action)(nil),          // 3: rv.data.Calendar.Event.Action
	(*Calendar_Event_Action_Playlist)(nil), // 4: rv.data.Calendar.Event.Action.Playlist
	(*Calendar_Event_Action_Macro)(nil),    // 5: rv.data.Calendar.Event.Action.Macro
	(*UUID)(nil),                           // 6: rv.data.UUID
	(*Timestamp)(nil),                      // 7: rv.data.Timestamp
	(*CollectionElementType)(nil),          // 8: rv.data.CollectionElementType
}
var file_calendar_proto_depIdxs = []int32{
	2,  // 0: rv.data.Calendar.events:type_name -> rv.data.Calendar.Event
	6,  // 1: rv.data.Calendar.Event.uuid:type_name -> rv.data.UUID
	7,  // 2: rv.data.Calendar.Event.date:type_name -> rv.data.Timestamp
	0,  // 3: rv.data.Calendar.Event.recurrence_days:type_name -> rv.data.Calendar.Event.DayOfWeek
	7,  // 4: rv.data.Calendar.Event.recurrence_limit_date:type_name -> rv.data.Timestamp
	7,  // 5: rv.data.Calendar.Event.recurrence_excluded_dates:type_name -> rv.data.Timestamp
	3,  // 6: rv.data.Calendar.Event.action:type_name -> rv.data.Calendar.Event.Action
	6,  // 7: rv.data.Calendar.Event.Action.uuid:type_name -> rv.data.UUID
	4,  // 8: rv.data.Calendar.Event.Action.playlist:type_name -> rv.data.Calendar.Event.Action.Playlist
	5,  // 9: rv.data.Calendar.Event.Action.macro:type_name -> rv.data.Calendar.Event.Action.Macro
	6,  // 10: rv.data.Calendar.Event.Action.Playlist.playlist_uuid:type_name -> rv.data.UUID
	6,  // 11: rv.data.Calendar.Event.Action.Playlist.playlist_item_uuid:type_name -> rv.data.UUID
	8,  // 12: rv.data.Calendar.Event.Action.Macro.identification:type_name -> rv.data.CollectionElementType
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_calendar_proto_init() }
func file_calendar_proto_init() {
	if File_calendar_proto != nil {
		return
	}
	file_basicTypes_proto_init()
	file_timestamp_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_calendar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Calendar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Calendar_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Calendar_Event_Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Calendar_Event_Action_Playlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Calendar_Event_Action_Macro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_calendar_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Calendar_Event_Action_Playlist_)(nil),
		(*Calendar_Event_Action_Macro_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calendar_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_calendar_proto_goTypes,
		DependencyIndexes: file_calendar_proto_depIdxs,
		EnumInfos:         file_calendar_proto_enumTypes,
		MessageInfos:      file_calendar_proto_msgTypes,
	}.Build()
	File_calendar_proto = out.File
	file_calendar_proto_rawDesc = nil
	file_calendar_proto_goTypes = nil
	file_calendar_proto_depIdxs = nil
}
