// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: basicTypes.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type URL_Platform int32

const (
	URL_PLATFORM_UNKNOWN URL_Platform = 0
	URL_PLATFORM_MACOS   URL_Platform = 1
	URL_PLATFORM_WIN32   URL_Platform = 2
	URL_PLATFORM_WEB     URL_Platform = 3
)

// Enum value maps for URL_Platform.
var (
	URL_Platform_name = map[int32]string{
		0: "PLATFORM_UNKNOWN",
		1: "PLATFORM_MACOS",
		2: "PLATFORM_WIN32",
		3: "PLATFORM_WEB",
	}
	URL_Platform_value = map[string]int32{
		"PLATFORM_UNKNOWN": 0,
		"PLATFORM_MACOS":   1,
		"PLATFORM_WIN32":   2,
		"PLATFORM_WEB":     3,
	}
)

func (x URL_Platform) Enum() *URL_Platform {
	p := new(URL_Platform)
	*p = x
	return p
}

func (x URL_Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URL_Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_basicTypes_proto_enumTypes[0].Descriptor()
}

func (URL_Platform) Type() protoreflect.EnumType {
	return &file_basicTypes_proto_enumTypes[0]
}

func (x URL_Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URL_Platform.Descriptor instead.
func (URL_Platform) EnumDescriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{0, 0}
}

type URL_LocalRelativePath_Root int32

const (
	URL_LocalRelativePath_ROOT_UNKNOWN          URL_LocalRelativePath_Root = 0
	URL_LocalRelativePath_ROOT_BOOT_VOLUME      URL_LocalRelativePath_Root = 1
	URL_LocalRelativePath_ROOT_USER_HOME        URL_LocalRelativePath_Root = 2
	URL_LocalRelativePath_ROOT_USER_DOCUMENTS   URL_LocalRelativePath_Root = 3
	URL_LocalRelativePath_ROOT_USER_DOWNLOADS   URL_LocalRelativePath_Root = 4
	URL_LocalRelativePath_ROOT_USER_MUSIC       URL_LocalRelativePath_Root = 5
	URL_LocalRelativePath_ROOT_USER_PICTURES    URL_LocalRelativePath_Root = 6
	URL_LocalRelativePath_ROOT_USER_VIDEOS      URL_LocalRelativePath_Root = 7
	URL_LocalRelativePath_ROOT_USER_DESKTOP     URL_LocalRelativePath_Root = 11
	URL_LocalRelativePath_ROOT_USER_APP_SUPPORT URL_LocalRelativePath_Root = 8
	URL_LocalRelativePath_ROOT_SHARED           URL_LocalRelativePath_Root = 9
	URL_LocalRelativePath_ROOT_SHOW             URL_LocalRelativePath_Root = 10
	URL_LocalRelativePath_ROOT_CURRENT_RESOURCE URL_LocalRelativePath_Root = 12
)

// Enum value maps for URL_LocalRelativePath_Root.
var (
	URL_LocalRelativePath_Root_name = map[int32]string{
		0:  "ROOT_UNKNOWN",
		1:  "ROOT_BOOT_VOLUME",
		2:  "ROOT_USER_HOME",
		3:  "ROOT_USER_DOCUMENTS",
		4:  "ROOT_USER_DOWNLOADS",
		5:  "ROOT_USER_MUSIC",
		6:  "ROOT_USER_PICTURES",
		7:  "ROOT_USER_VIDEOS",
		11: "ROOT_USER_DESKTOP",
		8:  "ROOT_USER_APP_SUPPORT",
		9:  "ROOT_SHARED",
		10: "ROOT_SHOW",
		12: "ROOT_CURRENT_RESOURCE",
	}
	URL_LocalRelativePath_Root_value = map[string]int32{
		"ROOT_UNKNOWN":          0,
		"ROOT_BOOT_VOLUME":      1,
		"ROOT_USER_HOME":        2,
		"ROOT_USER_DOCUMENTS":   3,
		"ROOT_USER_DOWNLOADS":   4,
		"ROOT_USER_MUSIC":       5,
		"ROOT_USER_PICTURES":    6,
		"ROOT_USER_VIDEOS":      7,
		"ROOT_USER_DESKTOP":     11,
		"ROOT_USER_APP_SUPPORT": 8,
		"ROOT_SHARED":           9,
		"ROOT_SHOW":             10,
		"ROOT_CURRENT_RESOURCE": 12,
	}
)

func (x URL_LocalRelativePath_Root) Enum() *URL_LocalRelativePath_Root {
	p := new(URL_LocalRelativePath_Root)
	*p = x
	return p
}

func (x URL_LocalRelativePath_Root) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URL_LocalRelativePath_Root) Descriptor() protoreflect.EnumDescriptor {
	return file_basicTypes_proto_enumTypes[1].Descriptor()
}

func (URL_LocalRelativePath_Root) Type() protoreflect.EnumType {
	return &file_basicTypes_proto_enumTypes[1]
}

func (x URL_LocalRelativePath_Root) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URL_LocalRelativePath_Root.Descriptor instead.
func (URL_LocalRelativePath_Root) EnumDescriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{0, 0, 0}
}

type ApplicationInfo_Platform int32

const (
	ApplicationInfo_PLATFORM_UNDEFINED ApplicationInfo_Platform = 0
	ApplicationInfo_PLATFORM_MACOS     ApplicationInfo_Platform = 1
	ApplicationInfo_PLATFORM_WINDOWS   ApplicationInfo_Platform = 2
)

// Enum value maps for ApplicationInfo_Platform.
var (
	ApplicationInfo_Platform_name = map[int32]string{
		0: "PLATFORM_UNDEFINED",
		1: "PLATFORM_MACOS",
		2: "PLATFORM_WINDOWS",
	}
	ApplicationInfo_Platform_value = map[string]int32{
		"PLATFORM_UNDEFINED": 0,
		"PLATFORM_MACOS":     1,
		"PLATFORM_WINDOWS":   2,
	}
)

func (x ApplicationInfo_Platform) Enum() *ApplicationInfo_Platform {
	p := new(ApplicationInfo_Platform)
	*p = x
	return p
}

func (x ApplicationInfo_Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationInfo_Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_basicTypes_proto_enumTypes[2].Descriptor()
}

func (ApplicationInfo_Platform) Type() protoreflect.EnumType {
	return &file_basicTypes_proto_enumTypes[2]
}

func (x ApplicationInfo_Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationInfo_Platform.Descriptor instead.
func (ApplicationInfo_Platform) EnumDescriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{6, 0}
}

type ApplicationInfo_Application int32

const (
	ApplicationInfo_APPLICATION_UNDEFINED      ApplicationInfo_Application = 0
	ApplicationInfo_APPLICATION_PROPRESENTER   ApplicationInfo_Application = 1
	ApplicationInfo_APPLICATION_PVP            ApplicationInfo_Application = 2
	ApplicationInfo_APPLICATION_PROVIDEOSERVER ApplicationInfo_Application = 3
	ApplicationInfo_APPLICATION_SCOREBOARD     ApplicationInfo_Application = 4
)

// Enum value maps for ApplicationInfo_Application.
var (
	ApplicationInfo_Application_name = map[int32]string{
		0: "APPLICATION_UNDEFINED",
		1: "APPLICATION_PROPRESENTER",
		2: "APPLICATION_PVP",
		3: "APPLICATION_PROVIDEOSERVER",
		4: "APPLICATION_SCOREBOARD",
	}
	ApplicationInfo_Application_value = map[string]int32{
		"APPLICATION_UNDEFINED":      0,
		"APPLICATION_PROPRESENTER":   1,
		"APPLICATION_PVP":            2,
		"APPLICATION_PROVIDEOSERVER": 3,
		"APPLICATION_SCOREBOARD":     4,
	}
)

func (x ApplicationInfo_Application) Enum() *ApplicationInfo_Application {
	p := new(ApplicationInfo_Application)
	*p = x
	return p
}

func (x ApplicationInfo_Application) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationInfo_Application) Descriptor() protoreflect.EnumDescriptor {
	return file_basicTypes_proto_enumTypes[3].Descriptor()
}

func (ApplicationInfo_Application) Type() protoreflect.EnumType {
	return &file_basicTypes_proto_enumTypes[3]
}

func (x ApplicationInfo_Application) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationInfo_Application.Descriptor instead.
func (ApplicationInfo_Application) EnumDescriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{6, 1}
}

type MusicKeyScale_MusicKey int32

const (
	MusicKeyScale_MUSIC_KEY_A_FLAT  MusicKeyScale_MusicKey = 0
	MusicKeyScale_MUSIC_KEY_A       MusicKeyScale_MusicKey = 1
	MusicKeyScale_MUSIC_KEY_A_SHARP MusicKeyScale_MusicKey = 2
	MusicKeyScale_MUSIC_KEY_B_FLAT  MusicKeyScale_MusicKey = 3
	MusicKeyScale_MUSIC_KEY_B       MusicKeyScale_MusicKey = 4
	MusicKeyScale_MUSIC_KEY_B_SHARP MusicKeyScale_MusicKey = 5
	MusicKeyScale_MUSIC_KEY_C_FLAT  MusicKeyScale_MusicKey = 6
	MusicKeyScale_MUSIC_KEY_C       MusicKeyScale_MusicKey = 7
	MusicKeyScale_MUSIC_KEY_C_SHARP MusicKeyScale_MusicKey = 8
	MusicKeyScale_MUSIC_KEY_D_FLAT  MusicKeyScale_MusicKey = 9
	MusicKeyScale_MUSIC_KEY_D       MusicKeyScale_MusicKey = 10
	MusicKeyScale_MUSIC_KEY_D_SHARP MusicKeyScale_MusicKey = 11
	MusicKeyScale_MUSIC_KEY_E_FLAT  MusicKeyScale_MusicKey = 12
	MusicKeyScale_MUSIC_KEY_E       MusicKeyScale_MusicKey = 13
	MusicKeyScale_MUSIC_KEY_E_SHARP MusicKeyScale_MusicKey = 14
	MusicKeyScale_MUSIC_KEY_F_FLAT  MusicKeyScale_MusicKey = 15
	MusicKeyScale_MUSIC_KEY_F       MusicKeyScale_MusicKey = 16
	MusicKeyScale_MUSIC_KEY_F_SHARP MusicKeyScale_MusicKey = 17
	MusicKeyScale_MUSIC_KEY_G_FLAT  MusicKeyScale_MusicKey = 18
	MusicKeyScale_MUSIC_KEY_G       MusicKeyScale_MusicKey = 19
	MusicKeyScale_MUSIC_KEY_G_SHARP MusicKeyScale_MusicKey = 20
)

// Enum value maps for MusicKeyScale_MusicKey.
var (
	MusicKeyScale_MusicKey_name = map[int32]string{
		0:  "MUSIC_KEY_A_FLAT",
		1:  "MUSIC_KEY_A",
		2:  "MUSIC_KEY_A_SHARP",
		3:  "MUSIC_KEY_B_FLAT",
		4:  "MUSIC_KEY_B",
		5:  "MUSIC_KEY_B_SHARP",
		6:  "MUSIC_KEY_C_FLAT",
		7:  "MUSIC_KEY_C",
		8:  "MUSIC_KEY_C_SHARP",
		9:  "MUSIC_KEY_D_FLAT",
		10: "MUSIC_KEY_D",
		11: "MUSIC_KEY_D_SHARP",
		12: "MUSIC_KEY_E_FLAT",
		13: "MUSIC_KEY_E",
		14: "MUSIC_KEY_E_SHARP",
		15: "MUSIC_KEY_F_FLAT",
		16: "MUSIC_KEY_F",
		17: "MUSIC_KEY_F_SHARP",
		18: "MUSIC_KEY_G_FLAT",
		19: "MUSIC_KEY_G",
		20: "MUSIC_KEY_G_SHARP",
	}
	MusicKeyScale_MusicKey_value = map[string]int32{
		"MUSIC_KEY_A_FLAT":  0,
		"MUSIC_KEY_A":       1,
		"MUSIC_KEY_A_SHARP": 2,
		"MUSIC_KEY_B_FLAT":  3,
		"MUSIC_KEY_B":       4,
		"MUSIC_KEY_B_SHARP": 5,
		"MUSIC_KEY_C_FLAT":  6,
		"MUSIC_KEY_C":       7,
		"MUSIC_KEY_C_SHARP": 8,
		"MUSIC_KEY_D_FLAT":  9,
		"MUSIC_KEY_D":       10,
		"MUSIC_KEY_D_SHARP": 11,
		"MUSIC_KEY_E_FLAT":  12,
		"MUSIC_KEY_E":       13,
		"MUSIC_KEY_E_SHARP": 14,
		"MUSIC_KEY_F_FLAT":  15,
		"MUSIC_KEY_F":       16,
		"MUSIC_KEY_F_SHARP": 17,
		"MUSIC_KEY_G_FLAT":  18,
		"MUSIC_KEY_G":       19,
		"MUSIC_KEY_G_SHARP": 20,
	}
)

func (x MusicKeyScale_MusicKey) Enum() *MusicKeyScale_MusicKey {
	p := new(MusicKeyScale_MusicKey)
	*p = x
	return p
}

func (x MusicKeyScale_MusicKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MusicKeyScale_MusicKey) Descriptor() protoreflect.EnumDescriptor {
	return file_basicTypes_proto_enumTypes[4].Descriptor()
}

func (MusicKeyScale_MusicKey) Type() protoreflect.EnumType {
	return &file_basicTypes_proto_enumTypes[4]
}

func (x MusicKeyScale_MusicKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MusicKeyScale_MusicKey.Descriptor instead.
func (MusicKeyScale_MusicKey) EnumDescriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{8, 0}
}

type MusicKeyScale_MusicScale int32

const (
	MusicKeyScale_MUSIC_SCALE_MAJOR MusicKeyScale_MusicScale = 0
	MusicKeyScale_MUSIC_SCALE_MINOR MusicKeyScale_MusicScale = 1
)

// Enum value maps for MusicKeyScale_MusicScale.
var (
	MusicKeyScale_MusicScale_name = map[int32]string{
		0: "MUSIC_SCALE_MAJOR",
		1: "MUSIC_SCALE_MINOR",
	}
	MusicKeyScale_MusicScale_value = map[string]int32{
		"MUSIC_SCALE_MAJOR": 0,
		"MUSIC_SCALE_MINOR": 1,
	}
)

func (x MusicKeyScale_MusicScale) Enum() *MusicKeyScale_MusicScale {
	p := new(MusicKeyScale_MusicScale)
	*p = x
	return p
}

func (x MusicKeyScale_MusicScale) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MusicKeyScale_MusicScale) Descriptor() protoreflect.EnumDescriptor {
	return file_basicTypes_proto_enumTypes[5].Descriptor()
}

func (MusicKeyScale_MusicScale) Type() protoreflect.EnumType {
	return &file_basicTypes_proto_enumTypes[5]
}

func (x MusicKeyScale_MusicScale) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MusicKeyScale_MusicScale.Descriptor instead.
func (MusicKeyScale_MusicScale) EnumDescriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{8, 1}
}

type URL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform URL_Platform `protobuf:"varint,3,opt,name=platform,proto3,enum=rv.data.URL_Platform" json:"platform,omitempty"`
	// Types that are assignable to Storage:
	//	*URL_AbsoluteString
	//	*URL_RelativePath
	Storage isURL_Storage `protobuf_oneof:"Storage"`
	// Types that are assignable to RelativeFilePath:
	//	*URL_Local
	//	*URL_External
	RelativeFilePath isURL_RelativeFilePath `protobuf_oneof:"RelativeFilePath"`
}

func (x *URL) Reset() {
	*x = URL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URL) ProtoMessage() {}

func (x *URL) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URL.ProtoReflect.Descriptor instead.
func (*URL) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{0}
}

func (x *URL) GetPlatform() URL_Platform {
	if x != nil {
		return x.Platform
	}
	return URL_PLATFORM_UNKNOWN
}

func (m *URL) GetStorage() isURL_Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (x *URL) GetAbsoluteString() string {
	if x, ok := x.GetStorage().(*URL_AbsoluteString); ok {
		return x.AbsoluteString
	}
	return ""
}

func (x *URL) GetRelativePath() string {
	if x, ok := x.GetStorage().(*URL_RelativePath); ok {
		return x.RelativePath
	}
	return ""
}

func (m *URL) GetRelativeFilePath() isURL_RelativeFilePath {
	if m != nil {
		return m.RelativeFilePath
	}
	return nil
}

func (x *URL) GetLocal() *URL_LocalRelativePath {
	if x, ok := x.GetRelativeFilePath().(*URL_Local); ok {
		return x.Local
	}
	return nil
}

func (x *URL) GetExternal() *URL_ExternalRelativePath {
	if x, ok := x.GetRelativeFilePath().(*URL_External); ok {
		return x.External
	}
	return nil
}

type isURL_Storage interface {
	isURL_Storage()
}

type URL_AbsoluteString struct {
	AbsoluteString string `protobuf:"bytes,1,opt,name=absolute_string,json=absoluteString,proto3,oneof"`
}

type URL_RelativePath struct {
	RelativePath string `protobuf:"bytes,2,opt,name=relative_path,json=relativePath,proto3,oneof"`
}

func (*URL_AbsoluteString) isURL_Storage() {}

func (*URL_RelativePath) isURL_Storage() {}

type isURL_RelativeFilePath interface {
	isURL_RelativeFilePath()
}

type URL_Local struct {
	Local *URL_LocalRelativePath `protobuf:"bytes,4,opt,name=local,proto3,oneof"`
}

type URL_External struct {
	External *URL_ExternalRelativePath `protobuf:"bytes,5,opt,name=external,proto3,oneof"`
}

func (*URL_Local) isURL_RelativeFilePath() {}

func (*URL_External) isURL_RelativeFilePath() {}

type URLs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls []*URL `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *URLs) Reset() {
	*x = URLs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLs) ProtoMessage() {}

func (x *URLs) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLs.ProtoReflect.Descriptor instead.
func (*URLs) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{1}
}

func (x *URLs) GetUrls() []*URL {
	if x != nil {
		return x.Urls
	}
	return nil
}

type UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_ string `protobuf:"bytes,1,opt,name=string,proto3" json:"string,omitempty"`
}

func (x *UUID) Reset() {
	*x = UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{2}
}

func (x *UUID) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

type IntRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *IntRange) Reset() {
	*x = IntRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntRange) ProtoMessage() {}

func (x *IntRange) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntRange.ProtoReflect.Descriptor instead.
func (*IntRange) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{3}
}

func (x *IntRange) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *IntRange) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red   float32 `protobuf:"fixed32,1,opt,name=red,proto3" json:"red,omitempty"`
	Green float32 `protobuf:"fixed32,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue  float32 `protobuf:"fixed32,3,opt,name=blue,proto3" json:"blue,omitempty"`
	Alpha float32 `protobuf:"fixed32,4,opt,name=alpha,proto3" json:"alpha,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{4}
}

func (x *Color) GetRed() float32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *Color) GetGreen() float32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *Color) GetBlue() float32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *Color) GetAlpha() float32 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MajorVersion uint32 `protobuf:"varint,1,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion uint32 `protobuf:"varint,2,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	PatchVersion uint32 `protobuf:"varint,3,opt,name=patch_version,json=patchVersion,proto3" json:"patch_version,omitempty"`
	Build        string `protobuf:"bytes,4,opt,name=build,proto3" json:"build,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{5}
}

func (x *Version) GetMajorVersion() uint32 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *Version) GetMinorVersion() uint32 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

func (x *Version) GetPatchVersion() uint32 {
	if x != nil {
		return x.PatchVersion
	}
	return 0
}

func (x *Version) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

type ApplicationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform           ApplicationInfo_Platform    `protobuf:"varint,1,opt,name=platform,proto3,enum=rv.data.ApplicationInfo_Platform" json:"platform,omitempty"`
	PlatformVersion    *Version                    `protobuf:"bytes,2,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	Application        ApplicationInfo_Application `protobuf:"varint,3,opt,name=application,proto3,enum=rv.data.ApplicationInfo_Application" json:"application,omitempty"`
	ApplicationVersion *Version                    `protobuf:"bytes,4,opt,name=application_version,json=applicationVersion,proto3" json:"application_version,omitempty"`
}

func (x *ApplicationInfo) Reset() {
	*x = ApplicationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationInfo) ProtoMessage() {}

func (x *ApplicationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationInfo.ProtoReflect.Descriptor instead.
func (*ApplicationInfo) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{6}
}

func (x *ApplicationInfo) GetPlatform() ApplicationInfo_Platform {
	if x != nil {
		return x.Platform
	}
	return ApplicationInfo_PLATFORM_UNDEFINED
}

func (x *ApplicationInfo) GetPlatformVersion() *Version {
	if x != nil {
		return x.PlatformVersion
	}
	return nil
}

func (x *ApplicationInfo) GetApplication() ApplicationInfo_Application {
	if x != nil {
		return x.Application
	}
	return ApplicationInfo_APPLICATION_UNDEFINED
}

func (x *ApplicationInfo) GetApplicationVersion() *Version {
	if x != nil {
		return x.ApplicationVersion
	}
	return nil
}

type CollectionElementType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParameterUuid *UUID  `protobuf:"bytes,1,opt,name=parameter_uuid,json=parameterUuid,proto3" json:"parameter_uuid,omitempty"`
	ParameterName string `protobuf:"bytes,2,opt,name=parameter_name,json=parameterName,proto3" json:"parameter_name,omitempty"`
}

func (x *CollectionElementType) Reset() {
	*x = CollectionElementType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionElementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionElementType) ProtoMessage() {}

func (x *CollectionElementType) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionElementType.ProtoReflect.Descriptor instead.
func (*CollectionElementType) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{7}
}

func (x *CollectionElementType) GetParameterUuid() *UUID {
	if x != nil {
		return x.ParameterUuid
	}
	return nil
}

func (x *CollectionElementType) GetParameterName() string {
	if x != nil {
		return x.ParameterName
	}
	return ""
}

type MusicKeyScale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicKey   MusicKeyScale_MusicKey   `protobuf:"varint,1,opt,name=music_key,json=musicKey,proto3,enum=rv.data.MusicKeyScale_MusicKey" json:"music_key,omitempty"`
	MusicScale MusicKeyScale_MusicScale `protobuf:"varint,2,opt,name=music_scale,json=musicScale,proto3,enum=rv.data.MusicKeyScale_MusicScale" json:"music_scale,omitempty"`
}

func (x *MusicKeyScale) Reset() {
	*x = MusicKeyScale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicKeyScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicKeyScale) ProtoMessage() {}

func (x *MusicKeyScale) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicKeyScale.ProtoReflect.Descriptor instead.
func (*MusicKeyScale) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{8}
}

func (x *MusicKeyScale) GetMusicKey() MusicKeyScale_MusicKey {
	if x != nil {
		return x.MusicKey
	}
	return MusicKeyScale_MUSIC_KEY_A_FLAT
}

func (x *MusicKeyScale) GetMusicScale() MusicKeyScale_MusicScale {
	if x != nil {
		return x.MusicScale
	}
	return MusicKeyScale_MUSIC_SCALE_MAJOR
}

type URL_LocalRelativePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root URL_LocalRelativePath_Root `protobuf:"varint,1,opt,name=root,proto3,enum=rv.data.URL_LocalRelativePath_Root" json:"root,omitempty"`
	Path string                     `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *URL_LocalRelativePath) Reset() {
	*x = URL_LocalRelativePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URL_LocalRelativePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URL_LocalRelativePath) ProtoMessage() {}

func (x *URL_LocalRelativePath) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URL_LocalRelativePath.ProtoReflect.Descriptor instead.
func (*URL_LocalRelativePath) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{0, 0}
}

func (x *URL_LocalRelativePath) GetRoot() URL_LocalRelativePath_Root {
	if x != nil {
		return x.Root
	}
	return URL_LocalRelativePath_ROOT_UNKNOWN
}

func (x *URL_LocalRelativePath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type URL_ExternalRelativePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Macos *URL_ExternalRelativePath_MacOSExternalVolume `protobuf:"bytes,1,opt,name=macos,proto3" json:"macos,omitempty"`
	Win32 *URL_ExternalRelativePath_Win32ExternalVolume `protobuf:"bytes,2,opt,name=win32,proto3" json:"win32,omitempty"`
	Path  string                                        `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *URL_ExternalRelativePath) Reset() {
	*x = URL_ExternalRelativePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URL_ExternalRelativePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URL_ExternalRelativePath) ProtoMessage() {}

func (x *URL_ExternalRelativePath) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URL_ExternalRelativePath.ProtoReflect.Descriptor instead.
func (*URL_ExternalRelativePath) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{0, 1}
}

func (x *URL_ExternalRelativePath) GetMacos() *URL_ExternalRelativePath_MacOSExternalVolume {
	if x != nil {
		return x.Macos
	}
	return nil
}

func (x *URL_ExternalRelativePath) GetWin32() *URL_ExternalRelativePath_Win32ExternalVolume {
	if x != nil {
		return x.Win32
	}
	return nil
}

func (x *URL_ExternalRelativePath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type URL_ExternalRelativePath_MacOSExternalVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeName string `protobuf:"bytes,1,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
}

func (x *URL_ExternalRelativePath_MacOSExternalVolume) Reset() {
	*x = URL_ExternalRelativePath_MacOSExternalVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URL_ExternalRelativePath_MacOSExternalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URL_ExternalRelativePath_MacOSExternalVolume) ProtoMessage() {}

func (x *URL_ExternalRelativePath_MacOSExternalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URL_ExternalRelativePath_MacOSExternalVolume.ProtoReflect.Descriptor instead.
func (*URL_ExternalRelativePath_MacOSExternalVolume) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *URL_ExternalRelativePath_MacOSExternalVolume) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

type URL_ExternalRelativePath_Win32ExternalVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriveLetter  string `protobuf:"bytes,1,opt,name=drive_letter,json=driveLetter,proto3" json:"drive_letter,omitempty"`
	VolumeName   string `protobuf:"bytes,2,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	NetworkShare bool   `protobuf:"varint,3,opt,name=network_share,json=networkShare,proto3" json:"network_share,omitempty"`
}

func (x *URL_ExternalRelativePath_Win32ExternalVolume) Reset() {
	*x = URL_ExternalRelativePath_Win32ExternalVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basicTypes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URL_ExternalRelativePath_Win32ExternalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URL_ExternalRelativePath_Win32ExternalVolume) ProtoMessage() {}

func (x *URL_ExternalRelativePath_Win32ExternalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_basicTypes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URL_ExternalRelativePath_Win32ExternalVolume.ProtoReflect.Descriptor instead.
func (*URL_ExternalRelativePath_Win32ExternalVolume) Descriptor() ([]byte, []int) {
	return file_basicTypes_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *URL_ExternalRelativePath_Win32ExternalVolume) GetDriveLetter() string {
	if x != nil {
		return x.DriveLetter
	}
	return ""
}

func (x *URL_ExternalRelativePath_Win32ExternalVolume) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *URL_ExternalRelativePath_Win32ExternalVolume) GetNetworkShare() bool {
	if x != nil {
		return x.NetworkShare
	}
	return false
}

var File_basicTypes_proto protoreflect.FileDescriptor

var file_basicTypes_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x09, 0x0a, 0x03,
	0x55, 0x52, 0x4c, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x55, 0x52, 0x4c, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x29, 0x0a, 0x0f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x25, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x55, 0x52, 0x4c, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x12, 0x3f, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x48, 0x01, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x1a, 0x87, 0x03, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x55, 0x52, 0x4c, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0xa4, 0x02, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x10, 0x0a,
	0x0c, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x42, 0x4f, 0x4f, 0x54, 0x5f, 0x56, 0x4f, 0x4c,
	0x55, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x4f, 0x4f,
	0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x53,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x53, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x52,
	0x4f, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x10, 0x05,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x49,
	0x43, 0x54, 0x55, 0x52, 0x45, 0x53, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4f, 0x4f, 0x54,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x53, 0x10, 0x07, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x53, 0x4b,
	0x54, 0x4f, 0x50, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x08,
	0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x10,
	0x09, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x10, 0x0a,
	0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x0c, 0x1a, 0xfc, 0x02, 0x0a, 0x14,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x4b, 0x0a, 0x05, 0x6d, 0x61, 0x63, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52,
	0x4c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x2e, 0x4d, 0x61, 0x63, 0x4f, 0x53, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x05, 0x6d, 0x61, 0x63, 0x6f,
	0x73, 0x12, 0x4b, 0x0a, 0x05, 0x77, 0x69, 0x6e, 0x33, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x2e, 0x57, 0x69, 0x6e, 0x33, 0x32, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x05, 0x77, 0x69, 0x6e, 0x33, 0x32, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x1a, 0x36, 0x0a, 0x13, 0x4d, 0x61, 0x63, 0x4f, 0x53, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x7e, 0x0a, 0x13, 0x57, 0x69,
	0x6e, 0x33, 0x32, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x4c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x5a, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f,
	0x52, 0x4d, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x57, 0x49, 0x4e,
	0x33, 0x32, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d,
	0x5f, 0x57, 0x45, 0x42, 0x10, 0x03, 0x42, 0x09, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x42, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x28, 0x0a, 0x04, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x20, 0x0a,
	0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x76,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22,
	0x1e, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0x32, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x22, 0x59, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x67,
	0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x8e,
	0x01, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22,
	0x80, 0x04, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x3b, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x46, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f,
	0x52, 0x4d, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x57,
	0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10, 0x02, 0x22, 0x97, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x50, 0x50, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x50, 0x56, 0x50, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x42, 0x4f, 0x41, 0x52, 0x44,
	0x10, 0x04, 0x22, 0x74, 0x0a, 0x15, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0e, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x05, 0x0a, 0x0d, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x08,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x0b, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x52, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xbc, 0x03, 0x0a,
	0x08, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x55, 0x53,
	0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x5f, 0x46, 0x4c, 0x41, 0x54, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x5f,
	0x53, 0x48, 0x41, 0x52, 0x50, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x55, 0x53, 0x49, 0x43,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x42, 0x5f, 0x46, 0x4c, 0x41, 0x54, 0x10, 0x03, 0x12, 0x0f, 0x0a,
	0x0b, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x42, 0x10, 0x04, 0x12, 0x15,
	0x0a, 0x11, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x42, 0x5f, 0x53, 0x48,
	0x41, 0x52, 0x50, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x5f, 0x46, 0x4c, 0x41, 0x54, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4d,
	0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11,
	0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x5f, 0x53, 0x48, 0x41, 0x52,
	0x50, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x44, 0x5f, 0x46, 0x4c, 0x41, 0x54, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x55, 0x53,
	0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x10, 0x0a, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x55,
	0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x50, 0x10,
	0x0b, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x45,
	0x5f, 0x46, 0x4c, 0x41, 0x54, 0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x55, 0x53, 0x49, 0x43,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x45, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x55, 0x53, 0x49,
	0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x50, 0x10, 0x0e, 0x12,
	0x14, 0x0a, 0x10, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x46, 0x5f, 0x46,
	0x4c, 0x41, 0x54, 0x10, 0x0f, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x46, 0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x46, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x50, 0x10, 0x11, 0x12, 0x14, 0x0a,
	0x10, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x47, 0x5f, 0x46, 0x4c, 0x41,
	0x54, 0x10, 0x12, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x47, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x47, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x50, 0x10, 0x14, 0x22, 0x3a, 0x0a, 0x0a, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x55, 0x53,
	0x49, 0x43, 0x5f, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x5f, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f,
	0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_basicTypes_proto_rawDescOnce sync.Once
	file_basicTypes_proto_rawDescData = file_basicTypes_proto_rawDesc
)

func file_basicTypes_proto_rawDescGZIP() []byte {
	file_basicTypes_proto_rawDescOnce.Do(func() {
		file_basicTypes_proto_rawDescData = protoimpl.X.CompressGZIP(file_basicTypes_proto_rawDescData)
	})
	return file_basicTypes_proto_rawDescData
}

var file_basicTypes_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_basicTypes_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_basicTypes_proto_goTypes = []interface{}{
	(URL_Platform)(0),                // 0: rv.data.URL.Platform
	(URL_LocalRelativePath_Root)(0),  // 1: rv.data.URL.LocalRelativePath.Root
	(ApplicationInfo_Platform)(0),    // 2: rv.data.ApplicationInfo.Platform
	(ApplicationInfo_Application)(0), // 3: rv.data.ApplicationInfo.Application
	(MusicKeyScale_MusicKey)(0),      // 4: rv.data.MusicKeyScale.MusicKey
	(MusicKeyScale_MusicScale)(0),    // 5: rv.data.MusicKeyScale.MusicScale
	(*URL)(nil),                      // 6: rv.data.URL
	(*URLs)(nil),                     // 7: rv.data.URLs
	(*UUID)(nil),                     // 8: rv.data.UUID
	(*IntRange)(nil),                 // 9: rv.data.IntRange
	(*Color)(nil),                    // 10: rv.data.Color
	(*Version)(nil),                  // 11: rv.data.Version
	(*ApplicationInfo)(nil),          // 12: rv.data.ApplicationInfo
	(*CollectionElementType)(nil),    // 13: rv.data.CollectionElementType
	(*MusicKeyScale)(nil),            // 14: rv.data.MusicKeyScale
	(*URL_LocalRelativePath)(nil),    // 15: rv.data.URL.LocalRelativePath
	(*URL_ExternalRelativePath)(nil), // 16: rv.data.URL.ExternalRelativePath
	(*URL_ExternalRelativePath_MacOSExternalVolume)(nil), // 17: rv.data.URL.ExternalRelativePath.MacOSExternalVolume
	(*URL_ExternalRelativePath_Win32ExternalVolume)(nil), // 18: rv.data.URL.ExternalRelativePath.Win32ExternalVolume
}
var file_basicTypes_proto_depIdxs = []int32{
	0,  // 0: rv.data.URL.platform:type_name -> rv.data.URL.Platform
	15, // 1: rv.data.URL.local:type_name -> rv.data.URL.LocalRelativePath
	16, // 2: rv.data.URL.external:type_name -> rv.data.URL.ExternalRelativePath
	6,  // 3: rv.data.URLs.urls:type_name -> rv.data.URL
	2,  // 4: rv.data.ApplicationInfo.platform:type_name -> rv.data.ApplicationInfo.Platform
	11, // 5: rv.data.ApplicationInfo.platform_version:type_name -> rv.data.Version
	3,  // 6: rv.data.ApplicationInfo.application:type_name -> rv.data.ApplicationInfo.Application
	11, // 7: rv.data.ApplicationInfo.application_version:type_name -> rv.data.Version
	8,  // 8: rv.data.CollectionElementType.parameter_uuid:type_name -> rv.data.UUID
	4,  // 9: rv.data.MusicKeyScale.music_key:type_name -> rv.data.MusicKeyScale.MusicKey
	5,  // 10: rv.data.MusicKeyScale.music_scale:type_name -> rv.data.MusicKeyScale.MusicScale
	1,  // 11: rv.data.URL.LocalRelativePath.root:type_name -> rv.data.URL.LocalRelativePath.Root
	17, // 12: rv.data.URL.ExternalRelativePath.macos:type_name -> rv.data.URL.ExternalRelativePath.MacOSExternalVolume
	18, // 13: rv.data.URL.ExternalRelativePath.win32:type_name -> rv.data.URL.ExternalRelativePath.Win32ExternalVolume
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_basicTypes_proto_init() }
func file_basicTypes_proto_init() {
	if File_basicTypes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_basicTypes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionElementType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicKeyScale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URL_LocalRelativePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URL_ExternalRelativePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URL_ExternalRelativePath_MacOSExternalVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basicTypes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URL_ExternalRelativePath_Win32ExternalVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_basicTypes_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*URL_AbsoluteString)(nil),
		(*URL_RelativePath)(nil),
		(*URL_Local)(nil),
		(*URL_External)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_basicTypes_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_basicTypes_proto_goTypes,
		DependencyIndexes: file_basicTypes_proto_depIdxs,
		EnumInfos:         file_basicTypes_proto_enumTypes,
		MessageInfos:      file_basicTypes_proto_msgTypes,
	}.Build()
	File_basicTypes_proto = out.File
	file_basicTypes_proto_rawDesc = nil
	file_basicTypes_proto_goTypes = nil
	file_basicTypes_proto_depIdxs = nil
}
