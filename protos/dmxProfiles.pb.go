// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: dmxProfiles.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DMXProfiles_DMXProfile_Profile_ProfileType int32

const (
	DMXProfiles_DMXProfile_Profile_BASIC    DMXProfiles_DMXProfile_Profile_ProfileType = 0
	DMXProfiles_DMXProfile_Profile_ADVANCED DMXProfiles_DMXProfile_Profile_ProfileType = 1
	DMXProfiles_DMXProfile_Profile_CUSTOM   DMXProfiles_DMXProfile_Profile_ProfileType = 2
)

// Enum value maps for DMXProfiles_DMXProfile_Profile_ProfileType.
var (
	DMXProfiles_DMXProfile_Profile_ProfileType_name = map[int32]string{
		0: "BASIC",
		1: "ADVANCED",
		2: "CUSTOM",
	}
	DMXProfiles_DMXProfile_Profile_ProfileType_value = map[string]int32{
		"BASIC":    0,
		"ADVANCED": 1,
		"CUSTOM":   2,
	}
)

func (x DMXProfiles_DMXProfile_Profile_ProfileType) Enum() *DMXProfiles_DMXProfile_Profile_ProfileType {
	p := new(DMXProfiles_DMXProfile_Profile_ProfileType)
	*p = x
	return p
}

func (x DMXProfiles_DMXProfile_Profile_ProfileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DMXProfiles_DMXProfile_Profile_ProfileType) Descriptor() protoreflect.EnumDescriptor {
	return file_dmxProfiles_proto_enumTypes[0].Descriptor()
}

func (DMXProfiles_DMXProfile_Profile_ProfileType) Type() protoreflect.EnumType {
	return &file_dmxProfiles_proto_enumTypes[0]
}

func (x DMXProfiles_DMXProfile_Profile_ProfileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DMXProfiles_DMXProfile_Profile_ProfileType.Descriptor instead.
func (DMXProfiles_DMXProfile_Profile_ProfileType) EnumDescriptor() ([]byte, []int) {
	return file_dmxProfiles_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type DMXProfiles_DMXProfile_ChannelMapping_CommandType int32

const (
	DMXProfiles_DMXProfile_ChannelMapping_OPACITY             DMXProfiles_DMXProfile_ChannelMapping_CommandType = 0
	DMXProfiles_DMXProfile_ChannelMapping_BLEND_MODE          DMXProfiles_DMXProfile_ChannelMapping_CommandType = 1
	DMXProfiles_DMXProfile_ChannelMapping_SELECT_CUE          DMXProfiles_DMXProfile_ChannelMapping_CommandType = 2
	DMXProfiles_DMXProfile_ChannelMapping_CONTROL_TYPE        DMXProfiles_DMXProfile_ChannelMapping_CommandType = 3
	DMXProfiles_DMXProfile_ChannelMapping_CONTROL_VALUE       DMXProfiles_DMXProfile_ChannelMapping_CommandType = 4
	DMXProfiles_DMXProfile_ChannelMapping_TRANSITION_DURATION DMXProfiles_DMXProfile_ChannelMapping_CommandType = 5
	DMXProfiles_DMXProfile_ChannelMapping_SELECT_PLAYLIST     DMXProfiles_DMXProfile_ChannelMapping_CommandType = 6
	DMXProfiles_DMXProfile_ChannelMapping_TARGETED_LAYER      DMXProfiles_DMXProfile_ChannelMapping_CommandType = 7
)

// Enum value maps for DMXProfiles_DMXProfile_ChannelMapping_CommandType.
var (
	DMXProfiles_DMXProfile_ChannelMapping_CommandType_name = map[int32]string{
		0: "OPACITY",
		1: "BLEND_MODE",
		2: "SELECT_CUE",
		3: "CONTROL_TYPE",
		4: "CONTROL_VALUE",
		5: "TRANSITION_DURATION",
		6: "SELECT_PLAYLIST",
		7: "TARGETED_LAYER",
	}
	DMXProfiles_DMXProfile_ChannelMapping_CommandType_value = map[string]int32{
		"OPACITY":             0,
		"BLEND_MODE":          1,
		"SELECT_CUE":          2,
		"CONTROL_TYPE":        3,
		"CONTROL_VALUE":       4,
		"TRANSITION_DURATION": 5,
		"SELECT_PLAYLIST":     6,
		"TARGETED_LAYER":      7,
	}
)

func (x DMXProfiles_DMXProfile_ChannelMapping_CommandType) Enum() *DMXProfiles_DMXProfile_ChannelMapping_CommandType {
	p := new(DMXProfiles_DMXProfile_ChannelMapping_CommandType)
	*p = x
	return p
}

func (x DMXProfiles_DMXProfile_ChannelMapping_CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DMXProfiles_DMXProfile_ChannelMapping_CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_dmxProfiles_proto_enumTypes[1].Descriptor()
}

func (DMXProfiles_DMXProfile_ChannelMapping_CommandType) Type() protoreflect.EnumType {
	return &file_dmxProfiles_proto_enumTypes[1]
}

func (x DMXProfiles_DMXProfile_ChannelMapping_CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DMXProfiles_DMXProfile_ChannelMapping_CommandType.Descriptor instead.
func (DMXProfiles_DMXProfile_ChannelMapping_CommandType) EnumDescriptor() ([]byte, []int) {
	return file_dmxProfiles_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

type DMXProfiles_DMXProfile_Fixture_FixtureType int32

const (
	DMXProfiles_DMXProfile_Fixture_WORKSPACE DMXProfiles_DMXProfile_Fixture_FixtureType = 0
	DMXProfiles_DMXProfile_Fixture_LAYER     DMXProfiles_DMXProfile_Fixture_FixtureType = 1
)

// Enum value maps for DMXProfiles_DMXProfile_Fixture_FixtureType.
var (
	DMXProfiles_DMXProfile_Fixture_FixtureType_name = map[int32]string{
		0: "WORKSPACE",
		1: "LAYER",
	}
	DMXProfiles_DMXProfile_Fixture_FixtureType_value = map[string]int32{
		"WORKSPACE": 0,
		"LAYER":     1,
	}
)

func (x DMXProfiles_DMXProfile_Fixture_FixtureType) Enum() *DMXProfiles_DMXProfile_Fixture_FixtureType {
	p := new(DMXProfiles_DMXProfile_Fixture_FixtureType)
	*p = x
	return p
}

func (x DMXProfiles_DMXProfile_Fixture_FixtureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DMXProfiles_DMXProfile_Fixture_FixtureType) Descriptor() protoreflect.EnumDescriptor {
	return file_dmxProfiles_proto_enumTypes[2].Descriptor()
}

func (DMXProfiles_DMXProfile_Fixture_FixtureType) Type() protoreflect.EnumType {
	return &file_dmxProfiles_proto_enumTypes[2]
}

func (x DMXProfiles_DMXProfile_Fixture_FixtureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DMXProfiles_DMXProfile_Fixture_FixtureType.Descriptor instead.
func (DMXProfiles_DMXProfile_Fixture_FixtureType) EnumDescriptor() ([]byte, []int) {
	return file_dmxProfiles_proto_rawDescGZIP(), []int{0, 0, 2, 0}
}

type DMXProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceProfile *DMXProfiles_DMXProfile   `protobuf:"bytes,1,opt,name=workspaceProfile,proto3" json:"workspaceProfile,omitempty"`
	LayerProfiles    []*DMXProfiles_DMXProfile `protobuf:"bytes,2,rep,name=layerProfiles,proto3" json:"layerProfiles,omitempty"`
}

func (x *DMXProfiles) Reset() {
	*x = DMXProfiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dmxProfiles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DMXProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DMXProfiles) ProtoMessage() {}

func (x *DMXProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_dmxProfiles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DMXProfiles.ProtoReflect.Descriptor instead.
func (*DMXProfiles) Descriptor() ([]byte, []int) {
	return file_dmxProfiles_proto_rawDescGZIP(), []int{0}
}

func (x *DMXProfiles) GetWorkspaceProfile() *DMXProfiles_DMXProfile {
	if x != nil {
		return x.WorkspaceProfile
	}
	return nil
}

func (x *DMXProfiles) GetLayerProfiles() []*DMXProfiles_DMXProfile {
	if x != nil {
		return x.LayerProfiles
	}
	return nil
}

type DMXProfiles_DMXProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile        *DMXProfiles_DMXProfile_Profile          `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Fixture        *DMXProfiles_DMXProfile_Fixture          `protobuf:"bytes,2,opt,name=fixture,proto3" json:"fixture,omitempty"`
	IsEnabled      bool                                     `protobuf:"varint,3,opt,name=isEnabled,proto3" json:"isEnabled,omitempty"`
	CustomMappings []*DMXProfiles_DMXProfile_ChannelMapping `protobuf:"bytes,4,rep,name=customMappings,proto3" json:"customMappings,omitempty"`
}

func (x *DMXProfiles_DMXProfile) Reset() {
	*x = DMXProfiles_DMXProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dmxProfiles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DMXProfiles_DMXProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DMXProfiles_DMXProfile) ProtoMessage() {}

func (x *DMXProfiles_DMXProfile) ProtoReflect() protoreflect.Message {
	mi := &file_dmxProfiles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DMXProfiles_DMXProfile.ProtoReflect.Descriptor instead.
func (*DMXProfiles_DMXProfile) Descriptor() ([]byte, []int) {
	return file_dmxProfiles_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DMXProfiles_DMXProfile) GetProfile() *DMXProfiles_DMXProfile_Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *DMXProfiles_DMXProfile) GetFixture() *DMXProfiles_DMXProfile_Fixture {
	if x != nil {
		return x.Fixture
	}
	return nil
}

func (x *DMXProfiles_DMXProfile) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *DMXProfiles_DMXProfile) GetCustomMappings() []*DMXProfiles_DMXProfile_ChannelMapping {
	if x != nil {
		return x.CustomMappings
	}
	return nil
}

type DMXProfiles_DMXProfile_Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileType DMXProfiles_DMXProfile_Profile_ProfileType `protobuf:"varint,1,opt,name=profileType,proto3,enum=rv.data.DMXProfiles_DMXProfile_Profile_ProfileType" json:"profileType,omitempty"`
	// Types that are assignable to StartingChannelOneof:
	//	*DMXProfiles_DMXProfile_Profile_StartingChannel
	StartingChannelOneof isDMXProfiles_DMXProfile_Profile_StartingChannelOneof `protobuf_oneof:"startingChannel_oneof"`
}

func (x *DMXProfiles_DMXProfile_Profile) Reset() {
	*x = DMXProfiles_DMXProfile_Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dmxProfiles_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DMXProfiles_DMXProfile_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DMXProfiles_DMXProfile_Profile) ProtoMessage() {}

func (x *DMXProfiles_DMXProfile_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_dmxProfiles_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DMXProfiles_DMXProfile_Profile.ProtoReflect.Descriptor instead.
func (*DMXProfiles_DMXProfile_Profile) Descriptor() ([]byte, []int) {
	return file_dmxProfiles_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *DMXProfiles_DMXProfile_Profile) GetProfileType() DMXProfiles_DMXProfile_Profile_ProfileType {
	if x != nil {
		return x.ProfileType
	}
	return DMXProfiles_DMXProfile_Profile_BASIC
}

func (m *DMXProfiles_DMXProfile_Profile) GetStartingChannelOneof() isDMXProfiles_DMXProfile_Profile_StartingChannelOneof {
	if m != nil {
		return m.StartingChannelOneof
	}
	return nil
}

func (x *DMXProfiles_DMXProfile_Profile) GetStartingChannel() uint32 {
	if x, ok := x.GetStartingChannelOneof().(*DMXProfiles_DMXProfile_Profile_StartingChannel); ok {
		return x.StartingChannel
	}
	return 0
}

type isDMXProfiles_DMXProfile_Profile_StartingChannelOneof interface {
	isDMXProfiles_DMXProfile_Profile_StartingChannelOneof()
}

type DMXProfiles_DMXProfile_Profile_StartingChannel struct {
	StartingChannel uint32 `protobuf:"varint,2,opt,name=startingChannel,proto3,oneof"`
}

func (*DMXProfiles_DMXProfile_Profile_StartingChannel) isDMXProfiles_DMXProfile_Profile_StartingChannelOneof() {
}

type DMXProfiles_DMXProfile_ChannelMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelIndex uint32                                            `protobuf:"varint,1,opt,name=channelIndex,proto3" json:"channelIndex,omitempty"`
	Command      DMXProfiles_DMXProfile_ChannelMapping_CommandType `protobuf:"varint,2,opt,name=command,proto3,enum=rv.data.DMXProfiles_DMXProfile_ChannelMapping_CommandType" json:"command,omitempty"`
}

func (x *DMXProfiles_DMXProfile_ChannelMapping) Reset() {
	*x = DMXProfiles_DMXProfile_ChannelMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dmxProfiles_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DMXProfiles_DMXProfile_ChannelMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DMXProfiles_DMXProfile_ChannelMapping) ProtoMessage() {}

func (x *DMXProfiles_DMXProfile_ChannelMapping) ProtoReflect() protoreflect.Message {
	mi := &file_dmxProfiles_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DMXProfiles_DMXProfile_ChannelMapping.ProtoReflect.Descriptor instead.
func (*DMXProfiles_DMXProfile_ChannelMapping) Descriptor() ([]byte, []int) {
	return file_dmxProfiles_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *DMXProfiles_DMXProfile_ChannelMapping) GetChannelIndex() uint32 {
	if x != nil {
		return x.ChannelIndex
	}
	return 0
}

func (x *DMXProfiles_DMXProfile_ChannelMapping) GetCommand() DMXProfiles_DMXProfile_ChannelMapping_CommandType {
	if x != nil {
		return x.Command
	}
	return DMXProfiles_DMXProfile_ChannelMapping_OPACITY
}

type DMXProfiles_DMXProfile_Fixture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FixtureType DMXProfiles_DMXProfile_Fixture_FixtureType `protobuf:"varint,1,opt,name=fixtureType,proto3,enum=rv.data.DMXProfiles_DMXProfile_Fixture_FixtureType" json:"fixtureType,omitempty"`
	// Types that are assignable to LayerIndexOneof:
	//	*DMXProfiles_DMXProfile_Fixture_LayerIndex
	LayerIndexOneof isDMXProfiles_DMXProfile_Fixture_LayerIndexOneof `protobuf_oneof:"layerIndex_oneof"`
}

func (x *DMXProfiles_DMXProfile_Fixture) Reset() {
	*x = DMXProfiles_DMXProfile_Fixture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dmxProfiles_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DMXProfiles_DMXProfile_Fixture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DMXProfiles_DMXProfile_Fixture) ProtoMessage() {}

func (x *DMXProfiles_DMXProfile_Fixture) ProtoReflect() protoreflect.Message {
	mi := &file_dmxProfiles_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DMXProfiles_DMXProfile_Fixture.ProtoReflect.Descriptor instead.
func (*DMXProfiles_DMXProfile_Fixture) Descriptor() ([]byte, []int) {
	return file_dmxProfiles_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *DMXProfiles_DMXProfile_Fixture) GetFixtureType() DMXProfiles_DMXProfile_Fixture_FixtureType {
	if x != nil {
		return x.FixtureType
	}
	return DMXProfiles_DMXProfile_Fixture_WORKSPACE
}

func (m *DMXProfiles_DMXProfile_Fixture) GetLayerIndexOneof() isDMXProfiles_DMXProfile_Fixture_LayerIndexOneof {
	if m != nil {
		return m.LayerIndexOneof
	}
	return nil
}

func (x *DMXProfiles_DMXProfile_Fixture) GetLayerIndex() uint32 {
	if x, ok := x.GetLayerIndexOneof().(*DMXProfiles_DMXProfile_Fixture_LayerIndex); ok {
		return x.LayerIndex
	}
	return 0
}

type isDMXProfiles_DMXProfile_Fixture_LayerIndexOneof interface {
	isDMXProfiles_DMXProfile_Fixture_LayerIndexOneof()
}

type DMXProfiles_DMXProfile_Fixture_LayerIndex struct {
	LayerIndex uint32 `protobuf:"varint,2,opt,name=layerIndex,proto3,oneof"`
}

func (*DMXProfiles_DMXProfile_Fixture_LayerIndex) isDMXProfiles_DMXProfile_Fixture_LayerIndexOneof() {
}

var File_dmxProfiles_proto protoreflect.FileDescriptor

var file_dmxProfiles_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x6d, 0x78, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfb, 0x08, 0x0a,
	0x0b, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x10,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x4d, 0x58,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x0d, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x1a, 0xd7, 0x07, 0x0a, 0x0a, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x41, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x4d,
	0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x69,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x72, 0x76,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0xd9, 0x01, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x32, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53,
	0x49, 0x43, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x42, 0x17,
	0x0a, 0x15, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x1a, 0xae, 0x02, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x54,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3a, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x55, 0x45, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x4c, 0x49,
	0x53, 0x54, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x45, 0x44,
	0x5f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x07, 0x1a, 0xbf, 0x01, 0x0a, 0x07, 0x46, 0x69, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x72, 0x76, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x44, 0x4d, 0x58, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0a, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x00, 0x52, 0x0a, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x27, 0x0a,
	0x0b, 0x46, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x10, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dmxProfiles_proto_rawDescOnce sync.Once
	file_dmxProfiles_proto_rawDescData = file_dmxProfiles_proto_rawDesc
)

func file_dmxProfiles_proto_rawDescGZIP() []byte {
	file_dmxProfiles_proto_rawDescOnce.Do(func() {
		file_dmxProfiles_proto_rawDescData = protoimpl.X.CompressGZIP(file_dmxProfiles_proto_rawDescData)
	})
	return file_dmxProfiles_proto_rawDescData
}

var file_dmxProfiles_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_dmxProfiles_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_dmxProfiles_proto_goTypes = []interface{}{
	(DMXProfiles_DMXProfile_Profile_ProfileType)(0),        // 0: rv.data.DMXProfiles.DMXProfile.Profile.ProfileType
	(DMXProfiles_DMXProfile_ChannelMapping_CommandType)(0), // 1: rv.data.DMXProfiles.DMXProfile.ChannelMapping.CommandType
	(DMXProfiles_DMXProfile_Fixture_FixtureType)(0),        // 2: rv.data.DMXProfiles.DMXProfile.Fixture.FixtureType
	(*DMXProfiles)(nil),                           // 3: rv.data.DMXProfiles
	(*DMXProfiles_DMXProfile)(nil),                // 4: rv.data.DMXProfiles.DMXProfile
	(*DMXProfiles_DMXProfile_Profile)(nil),        // 5: rv.data.DMXProfiles.DMXProfile.Profile
	(*DMXProfiles_DMXProfile_ChannelMapping)(nil), // 6: rv.data.DMXProfiles.DMXProfile.ChannelMapping
	(*DMXProfiles_DMXProfile_Fixture)(nil),        // 7: rv.data.DMXProfiles.DMXProfile.Fixture
}
var file_dmxProfiles_proto_depIdxs = []int32{
	4, // 0: rv.data.DMXProfiles.workspaceProfile:type_name -> rv.data.DMXProfiles.DMXProfile
	4, // 1: rv.data.DMXProfiles.layerProfiles:type_name -> rv.data.DMXProfiles.DMXProfile
	5, // 2: rv.data.DMXProfiles.DMXProfile.profile:type_name -> rv.data.DMXProfiles.DMXProfile.Profile
	7, // 3: rv.data.DMXProfiles.DMXProfile.fixture:type_name -> rv.data.DMXProfiles.DMXProfile.Fixture
	6, // 4: rv.data.DMXProfiles.DMXProfile.customMappings:type_name -> rv.data.DMXProfiles.DMXProfile.ChannelMapping
	0, // 5: rv.data.DMXProfiles.DMXProfile.Profile.profileType:type_name -> rv.data.DMXProfiles.DMXProfile.Profile.ProfileType
	1, // 6: rv.data.DMXProfiles.DMXProfile.ChannelMapping.command:type_name -> rv.data.DMXProfiles.DMXProfile.ChannelMapping.CommandType
	2, // 7: rv.data.DMXProfiles.DMXProfile.Fixture.fixtureType:type_name -> rv.data.DMXProfiles.DMXProfile.Fixture.FixtureType
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_dmxProfiles_proto_init() }
func file_dmxProfiles_proto_init() {
	if File_dmxProfiles_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dmxProfiles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DMXProfiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dmxProfiles_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DMXProfiles_DMXProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dmxProfiles_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DMXProfiles_DMXProfile_Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dmxProfiles_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DMXProfiles_DMXProfile_ChannelMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dmxProfiles_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DMXProfiles_DMXProfile_Fixture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dmxProfiles_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*DMXProfiles_DMXProfile_Profile_StartingChannel)(nil),
	}
	file_dmxProfiles_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*DMXProfiles_DMXProfile_Fixture_LayerIndex)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dmxProfiles_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dmxProfiles_proto_goTypes,
		DependencyIndexes: file_dmxProfiles_proto_depIdxs,
		EnumInfos:         file_dmxProfiles_proto_enumTypes,
		MessageInfos:      file_dmxProfiles_proto_msgTypes,
	}.Build()
	File_dmxProfiles_proto = out.File
	file_dmxProfiles_proto_rawDesc = nil
	file_dmxProfiles_proto_goTypes = nil
	file_dmxProfiles_proto_depIdxs = nil
}
