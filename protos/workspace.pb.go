// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: workspace.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Workspace_UnitScaling_UnitType int32

const (
	Workspace_UnitScaling_UNIT_TYPE_POINTS      Workspace_UnitScaling_UnitType = 0
	Workspace_UnitScaling_UNIT_TYPE_MILLIMETERS Workspace_UnitScaling_UnitType = 1
	Workspace_UnitScaling_UNIT_TYPE_CENTIMETERS Workspace_UnitScaling_UnitType = 2
	Workspace_UnitScaling_UNIT_TYPE_METERS      Workspace_UnitScaling_UnitType = 3
	Workspace_UnitScaling_UNIT_TYPE_INCHES      Workspace_UnitScaling_UnitType = 4
	Workspace_UnitScaling_UNIT_TYPE_FEET        Workspace_UnitScaling_UnitType = 5
)

// Enum value maps for Workspace_UnitScaling_UnitType.
var (
	Workspace_UnitScaling_UnitType_name = map[int32]string{
		0: "UNIT_TYPE_POINTS",
		1: "UNIT_TYPE_MILLIMETERS",
		2: "UNIT_TYPE_CENTIMETERS",
		3: "UNIT_TYPE_METERS",
		4: "UNIT_TYPE_INCHES",
		5: "UNIT_TYPE_FEET",
	}
	Workspace_UnitScaling_UnitType_value = map[string]int32{
		"UNIT_TYPE_POINTS":      0,
		"UNIT_TYPE_MILLIMETERS": 1,
		"UNIT_TYPE_CENTIMETERS": 2,
		"UNIT_TYPE_METERS":      3,
		"UNIT_TYPE_INCHES":      4,
		"UNIT_TYPE_FEET":        5,
	}
)

func (x Workspace_UnitScaling_UnitType) Enum() *Workspace_UnitScaling_UnitType {
	p := new(Workspace_UnitScaling_UnitType)
	*p = x
	return p
}

func (x Workspace_UnitScaling_UnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Workspace_UnitScaling_UnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_workspace_proto_enumTypes[0].Descriptor()
}

func (Workspace_UnitScaling_UnitType) Type() protoreflect.EnumType {
	return &file_workspace_proto_enumTypes[0]
}

func (x Workspace_UnitScaling_UnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Workspace_UnitScaling_UnitType.Descriptor instead.
func (Workspace_UnitScaling_UnitType) EnumDescriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{0, 1, 0}
}

type Workspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                 *UUID                       `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Muted                bool                        `protobuf:"varint,2,opt,name=muted,proto3" json:"muted,omitempty"`
	Hidden               bool                        `protobuf:"varint,3,opt,name=hidden,proto3" json:"hidden,omitempty"`
	EditorBackground     *Workspace_EditorBackground `protobuf:"bytes,4,opt,name=editor_background,json=editorBackground,proto3" json:"editor_background,omitempty"`
	EffectPresetUuid     *UUID                       `protobuf:"bytes,5,opt,name=effect_preset_uuid,json=effectPresetUuid,proto3" json:"effect_preset_uuid,omitempty"`
	EffectBuildDuration  float64                     `protobuf:"fixed64,6,opt,name=effect_build_duration,json=effectBuildDuration,proto3" json:"effect_build_duration,omitempty"`
	Transition           *Transition                 `protobuf:"bytes,7,opt,name=transition,proto3" json:"transition,omitempty"`
	ActiveMaskUuid       *UUID                       `protobuf:"bytes,8,opt,name=active_mask_uuid,json=activeMaskUuid,proto3" json:"active_mask_uuid,omitempty"`
	Playlist             *Playlist                   `protobuf:"bytes,9,opt,name=playlist,proto3" json:"playlist,omitempty"`
	UnitScaling          *Workspace_UnitScaling      `protobuf:"bytes,10,opt,name=unit_scaling,json=unitScaling,proto3" json:"unit_scaling,omitempty"`
	Effects              []*Effect                   `protobuf:"bytes,16,rep,name=effects,proto3" json:"effects,omitempty"`
	Masks                []*Mask                     `protobuf:"bytes,17,rep,name=masks,proto3" json:"masks,omitempty"`
	Screens              []*Screen                   `protobuf:"bytes,18,rep,name=screens,proto3" json:"screens,omitempty"`
	EdgeBlends           []*EdgeBlend                `protobuf:"bytes,19,rep,name=edge_blends,json=edgeBlends,proto3" json:"edge_blends,omitempty"`
	Layers               []*Layer                    `protobuf:"bytes,20,rep,name=layers,proto3" json:"layers,omitempty"`
	TargetSets           []*TargetSet                `protobuf:"bytes,21,rep,name=target_sets,json=targetSets,proto3" json:"target_sets,omitempty"`
	HotKeys              []*HotKey                   `protobuf:"bytes,22,rep,name=hot_keys,json=hotKeys,proto3" json:"hot_keys,omitempty"`
	Calendar             *Calendar                   `protobuf:"bytes,23,opt,name=calendar,proto3" json:"calendar,omitempty"`
	AlignmentGuides      []*AlignmentGuide           `protobuf:"bytes,24,rep,name=alignment_guides,json=alignmentGuides,proto3" json:"alignment_guides,omitempty"`
	LiveVideoPlaylist    *LiveVideoPlaylist          `protobuf:"bytes,25,opt,name=live_video_playlist,json=liveVideoPlaylist,proto3" json:"live_video_playlist,omitempty"`
	OutputPreviewDisplay *OutputDisplay              `protobuf:"bytes,26,opt,name=output_preview_display,json=outputPreviewDisplay,proto3" json:"output_preview_display,omitempty"`
}

func (x *Workspace) Reset() {
	*x = Workspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workspace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace) ProtoMessage() {}

func (x *Workspace) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace.ProtoReflect.Descriptor instead.
func (*Workspace) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{0}
}

func (x *Workspace) GetUuid() *UUID {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Workspace) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

func (x *Workspace) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Workspace) GetEditorBackground() *Workspace_EditorBackground {
	if x != nil {
		return x.EditorBackground
	}
	return nil
}

func (x *Workspace) GetEffectPresetUuid() *UUID {
	if x != nil {
		return x.EffectPresetUuid
	}
	return nil
}

func (x *Workspace) GetEffectBuildDuration() float64 {
	if x != nil {
		return x.EffectBuildDuration
	}
	return 0
}

func (x *Workspace) GetTransition() *Transition {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *Workspace) GetActiveMaskUuid() *UUID {
	if x != nil {
		return x.ActiveMaskUuid
	}
	return nil
}

func (x *Workspace) GetPlaylist() *Playlist {
	if x != nil {
		return x.Playlist
	}
	return nil
}

func (x *Workspace) GetUnitScaling() *Workspace_UnitScaling {
	if x != nil {
		return x.UnitScaling
	}
	return nil
}

func (x *Workspace) GetEffects() []*Effect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *Workspace) GetMasks() []*Mask {
	if x != nil {
		return x.Masks
	}
	return nil
}

func (x *Workspace) GetScreens() []*Screen {
	if x != nil {
		return x.Screens
	}
	return nil
}

func (x *Workspace) GetEdgeBlends() []*EdgeBlend {
	if x != nil {
		return x.EdgeBlends
	}
	return nil
}

func (x *Workspace) GetLayers() []*Layer {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *Workspace) GetTargetSets() []*TargetSet {
	if x != nil {
		return x.TargetSets
	}
	return nil
}

func (x *Workspace) GetHotKeys() []*HotKey {
	if x != nil {
		return x.HotKeys
	}
	return nil
}

func (x *Workspace) GetCalendar() *Calendar {
	if x != nil {
		return x.Calendar
	}
	return nil
}

func (x *Workspace) GetAlignmentGuides() []*AlignmentGuide {
	if x != nil {
		return x.AlignmentGuides
	}
	return nil
}

func (x *Workspace) GetLiveVideoPlaylist() *LiveVideoPlaylist {
	if x != nil {
		return x.LiveVideoPlaylist
	}
	return nil
}

func (x *Workspace) GetOutputPreviewDisplay() *OutputDisplay {
	if x != nil {
		return x.OutputPreviewDisplay
	}
	return nil
}

type Workspace_EditorBackground struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool           `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Frame   *Graphics_Rect `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
	Url     *URL           `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Opacity float64        `protobuf:"fixed64,4,opt,name=opacity,proto3" json:"opacity,omitempty"`
}

func (x *Workspace_EditorBackground) Reset() {
	*x = Workspace_EditorBackground{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workspace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workspace_EditorBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace_EditorBackground) ProtoMessage() {}

func (x *Workspace_EditorBackground) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace_EditorBackground.ProtoReflect.Descriptor instead.
func (*Workspace_EditorBackground) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Workspace_EditorBackground) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Workspace_EditorBackground) GetFrame() *Graphics_Rect {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *Workspace_EditorBackground) GetUrl() *URL {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *Workspace_EditorBackground) GetOpacity() float64 {
	if x != nil {
		return x.Opacity
	}
	return 0
}

type Workspace_UnitScaling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length float64                        `protobuf:"fixed64,1,opt,name=length,proto3" json:"length,omitempty"`
	Unit   Workspace_UnitScaling_UnitType `protobuf:"varint,2,opt,name=unit,proto3,enum=rv.data.Workspace_UnitScaling_UnitType" json:"unit,omitempty"`
	Points float64                        `protobuf:"fixed64,3,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *Workspace_UnitScaling) Reset() {
	*x = Workspace_UnitScaling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workspace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workspace_UnitScaling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace_UnitScaling) ProtoMessage() {}

func (x *Workspace_UnitScaling) ProtoReflect() protoreflect.Message {
	mi := &file_workspace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace_UnitScaling.ProtoReflect.Descriptor instead.
func (*Workspace_UnitScaling) Descriptor() ([]byte, []int) {
	return file_workspace_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Workspace_UnitScaling) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Workspace_UnitScaling) GetUnit() Workspace_UnitScaling_UnitType {
	if x != nil {
		return x.Unit
	}
	return Workspace_UnitScaling_UNIT_TYPE_POINTS
}

func (x *Workspace_UnitScaling) GetPoints() float64 {
	if x != nil {
		return x.Points
	}
	return 0
}

var File_workspace_proto protoreflect.FileDescriptor

var file_workspace_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0d, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x68, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6c, 0x69, 0x76, 0x65, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x0b, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x12, 0x50, 0x0a, 0x11, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x10, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x12, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x10, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x13, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x76,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x10,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x73,
	0x6b, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x76, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x74,
	0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x07, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64,
	0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x52, 0x0a, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x33, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x53, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x68, 0x6f, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x48, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12,
	0x42, 0x0a, 0x10, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x76, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x65, 0x52, 0x0f, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x13, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x6c, 0x69,
	0x76, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x4c, 0x0a, 0x16, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x14, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x1a, 0x94, 0x01,
	0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x05,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x76,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x2e, 0x52,
	0x65, 0x63, 0x74, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x55, 0x52, 0x4c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x1a, 0x93, 0x02, 0x0a, 0x0b, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x72, 0x76, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x96, 0x01, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x53, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x49, 0x4c, 0x4c, 0x49, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4e,
	0x54, 0x49, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10, 0x03,
	0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x43, 0x48, 0x45, 0x53, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x54, 0x10, 0x05, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workspace_proto_rawDescOnce sync.Once
	file_workspace_proto_rawDescData = file_workspace_proto_rawDesc
)

func file_workspace_proto_rawDescGZIP() []byte {
	file_workspace_proto_rawDescOnce.Do(func() {
		file_workspace_proto_rawDescData = protoimpl.X.CompressGZIP(file_workspace_proto_rawDescData)
	})
	return file_workspace_proto_rawDescData
}

var file_workspace_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_workspace_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_workspace_proto_goTypes = []interface{}{
	(Workspace_UnitScaling_UnitType)(0), // 0: rv.data.Workspace.UnitScaling.UnitType
	(*Workspace)(nil),                   // 1: rv.data.Workspace
	(*Workspace_EditorBackground)(nil),  // 2: rv.data.Workspace.EditorBackground
	(*Workspace_UnitScaling)(nil),       // 3: rv.data.Workspace.UnitScaling
	(*UUID)(nil),                        // 4: rv.data.UUID
	(*Transition)(nil),                  // 5: rv.data.Transition
	(*Playlist)(nil),                    // 6: rv.data.Playlist
	(*Effect)(nil),                      // 7: rv.data.Effect
	(*Mask)(nil),                        // 8: rv.data.Mask
	(*Screen)(nil),                      // 9: rv.data.Screen
	(*EdgeBlend)(nil),                   // 10: rv.data.EdgeBlend
	(*Layer)(nil),                       // 11: rv.data.Layer
	(*TargetSet)(nil),                   // 12: rv.data.TargetSet
	(*HotKey)(nil),                      // 13: rv.data.HotKey
	(*Calendar)(nil),                    // 14: rv.data.Calendar
	(*AlignmentGuide)(nil),              // 15: rv.data.AlignmentGuide
	(*LiveVideoPlaylist)(nil),           // 16: rv.data.LiveVideoPlaylist
	(*OutputDisplay)(nil),               // 17: rv.data.OutputDisplay
	(*Graphics_Rect)(nil),               // 18: rv.data.Graphics.Rect
	(*URL)(nil),                         // 19: rv.data.URL
}
var file_workspace_proto_depIdxs = []int32{
	4,  // 0: rv.data.Workspace.uuid:type_name -> rv.data.UUID
	2,  // 1: rv.data.Workspace.editor_background:type_name -> rv.data.Workspace.EditorBackground
	4,  // 2: rv.data.Workspace.effect_preset_uuid:type_name -> rv.data.UUID
	5,  // 3: rv.data.Workspace.transition:type_name -> rv.data.Transition
	4,  // 4: rv.data.Workspace.active_mask_uuid:type_name -> rv.data.UUID
	6,  // 5: rv.data.Workspace.playlist:type_name -> rv.data.Playlist
	3,  // 6: rv.data.Workspace.unit_scaling:type_name -> rv.data.Workspace.UnitScaling
	7,  // 7: rv.data.Workspace.effects:type_name -> rv.data.Effect
	8,  // 8: rv.data.Workspace.masks:type_name -> rv.data.Mask
	9,  // 9: rv.data.Workspace.screens:type_name -> rv.data.Screen
	10, // 10: rv.data.Workspace.edge_blends:type_name -> rv.data.EdgeBlend
	11, // 11: rv.data.Workspace.layers:type_name -> rv.data.Layer
	12, // 12: rv.data.Workspace.target_sets:type_name -> rv.data.TargetSet
	13, // 13: rv.data.Workspace.hot_keys:type_name -> rv.data.HotKey
	14, // 14: rv.data.Workspace.calendar:type_name -> rv.data.Calendar
	15, // 15: rv.data.Workspace.alignment_guides:type_name -> rv.data.AlignmentGuide
	16, // 16: rv.data.Workspace.live_video_playlist:type_name -> rv.data.LiveVideoPlaylist
	17, // 17: rv.data.Workspace.output_preview_display:type_name -> rv.data.OutputDisplay
	18, // 18: rv.data.Workspace.EditorBackground.frame:type_name -> rv.data.Graphics.Rect
	19, // 19: rv.data.Workspace.EditorBackground.url:type_name -> rv.data.URL
	0,  // 20: rv.data.Workspace.UnitScaling.unit:type_name -> rv.data.Workspace.UnitScaling.UnitType
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_workspace_proto_init() }
func file_workspace_proto_init() {
	if File_workspace_proto != nil {
		return
	}
	file_effects_proto_init()
	file_masks_proto_init()
	file_screens_proto_init()
	file_layers_proto_init()
	file_targets_proto_init()
	file_playlist_proto_init()
	file_hotKey_proto_init()
	file_basicTypes_proto_init()
	file_calendar_proto_init()
	file_alignmentGuide_proto_init()
	file_liveVideoPlaylist_proto_init()
	file_graphicsData_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_workspace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workspace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workspace_EditorBackground); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workspace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workspace_UnitScaling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workspace_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_workspace_proto_goTypes,
		DependencyIndexes: file_workspace_proto_depIdxs,
		EnumInfos:         file_workspace_proto_enumTypes,
		MessageInfos:      file_workspace_proto_msgTypes,
	}.Build()
	File_workspace_proto = out.File
	file_workspace_proto_rawDesc = nil
	file_workspace_proto_goTypes = nil
	file_workspace_proto_depIdxs = nil
}
