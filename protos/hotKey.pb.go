// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: hotKey.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HotKey_KeyCode int32

const (
	HotKey_KEY_CODE_UNKNOWN             HotKey_KeyCode = 0
	HotKey_KEY_CODE_ANSI_A              HotKey_KeyCode = 1
	HotKey_KEY_CODE_ANSI_B              HotKey_KeyCode = 2
	HotKey_KEY_CODE_ANSI_C              HotKey_KeyCode = 3
	HotKey_KEY_CODE_ANSI_D              HotKey_KeyCode = 4
	HotKey_KEY_CODE_ANSI_E              HotKey_KeyCode = 5
	HotKey_KEY_CODE_ANSI_F              HotKey_KeyCode = 6
	HotKey_KEY_CODE_ANSI_G              HotKey_KeyCode = 7
	HotKey_KEY_CODE_ANSI_H              HotKey_KeyCode = 8
	HotKey_KEY_CODE_ANSI_I              HotKey_KeyCode = 9
	HotKey_KEY_CODE_ANSI_J              HotKey_KeyCode = 10
	HotKey_KEY_CODE_ANSI_K              HotKey_KeyCode = 11
	HotKey_KEY_CODE_ANSI_L              HotKey_KeyCode = 12
	HotKey_KEY_CODE_ANSI_M              HotKey_KeyCode = 13
	HotKey_KEY_CODE_ANSI_N              HotKey_KeyCode = 14
	HotKey_KEY_CODE_ANSI_O              HotKey_KeyCode = 15
	HotKey_KEY_CODE_ANSI_P              HotKey_KeyCode = 16
	HotKey_KEY_CODE_ANSI_Q              HotKey_KeyCode = 17
	HotKey_KEY_CODE_ANSI_R              HotKey_KeyCode = 18
	HotKey_KEY_CODE_ANSI_S              HotKey_KeyCode = 19
	HotKey_KEY_CODE_ANSI_T              HotKey_KeyCode = 20
	HotKey_KEY_CODE_ANSI_U              HotKey_KeyCode = 21
	HotKey_KEY_CODE_ANSI_V              HotKey_KeyCode = 22
	HotKey_KEY_CODE_ANSI_W              HotKey_KeyCode = 23
	HotKey_KEY_CODE_ANSI_X              HotKey_KeyCode = 24
	HotKey_KEY_CODE_ANSI_Y              HotKey_KeyCode = 25
	HotKey_KEY_CODE_ANSI_Z              HotKey_KeyCode = 26
	HotKey_KEY_CODE_ANSI_0              HotKey_KeyCode = 27
	HotKey_KEY_CODE_ANSI_1              HotKey_KeyCode = 28
	HotKey_KEY_CODE_ANSI_2              HotKey_KeyCode = 29
	HotKey_KEY_CODE_ANSI_3              HotKey_KeyCode = 30
	HotKey_KEY_CODE_ANSI_4              HotKey_KeyCode = 31
	HotKey_KEY_CODE_ANSI_5              HotKey_KeyCode = 32
	HotKey_KEY_CODE_ANSI_6              HotKey_KeyCode = 33
	HotKey_KEY_CODE_ANSI_7              HotKey_KeyCode = 34
	HotKey_KEY_CODE_ANSI_8              HotKey_KeyCode = 35
	HotKey_KEY_CODE_ANSI_9              HotKey_KeyCode = 36
	HotKey_KEY_CODE_ANSI_EQUAL          HotKey_KeyCode = 37
	HotKey_KEY_CODE_ANSI_MINUS          HotKey_KeyCode = 38
	HotKey_KEY_CODE_ANSI_RIGHT_BRACKET  HotKey_KeyCode = 39
	HotKey_KEY_CODE_ANSI_LEFT_BRACKET   HotKey_KeyCode = 40
	HotKey_KEY_CODE_ANSI_QUOTE          HotKey_KeyCode = 41
	HotKey_KEY_CODE_ANSI_SEMICOLON      HotKey_KeyCode = 42
	HotKey_KEY_CODE_ANSI_BACKSLASH      HotKey_KeyCode = 43
	HotKey_KEY_CODE_ANSI_COMMA          HotKey_KeyCode = 44
	HotKey_KEY_CODE_ANSI_SLASH          HotKey_KeyCode = 45
	HotKey_KEY_CODE_ANSI_PERIOD         HotKey_KeyCode = 46
	HotKey_KEY_CODE_ANSI_GRAVE          HotKey_KeyCode = 47
	HotKey_KEY_CODE_ANSI_KEYPAD_DECIMAL HotKey_KeyCode = 48
	HotKey_KEY_CODE_ANSI_KEYPAD_PLUS    HotKey_KeyCode = 49
	HotKey_KEY_CODE_ANSI_KEYPAD_CLEAR   HotKey_KeyCode = 50
	HotKey_KEY_CODE_ANSI_KEYPAD_DIVIDE  HotKey_KeyCode = 51
	HotKey_KEY_CODE_ANSI_KEYPAD_ENTER   HotKey_KeyCode = 52
	HotKey_KEY_CODE_ANSI_KEYPAD_MINUS   HotKey_KeyCode = 53
	HotKey_KEY_CODE_ANSI_KEYPAD_EQUALS  HotKey_KeyCode = 54
	HotKey_KEY_CODE_ANSI_KEYPAD_0       HotKey_KeyCode = 55
	HotKey_KEY_CODE_ANSI_KEYPAD_1       HotKey_KeyCode = 56
	HotKey_KEY_CODE_ANSI_KEYPAD_2       HotKey_KeyCode = 57
	HotKey_KEY_CODE_ANSI_KEYPAD_3       HotKey_KeyCode = 58
	HotKey_KEY_CODE_ANSI_KEYPAD_4       HotKey_KeyCode = 59
	HotKey_KEY_CODE_ANSI_KEYPAD_5       HotKey_KeyCode = 60
	HotKey_KEY_CODE_ANSI_KEYPAD_6       HotKey_KeyCode = 61
	HotKey_KEY_CODE_ANSI_KEYPAD_7       HotKey_KeyCode = 62
	HotKey_KEY_CODE_ANSI_KEYPAD_8       HotKey_KeyCode = 63
	HotKey_KEY_CODE_ANSI_KEYPAD_9       HotKey_KeyCode = 64
	HotKey_KEY_CODE_F1                  HotKey_KeyCode = 65
	HotKey_KEY_CODE_F2                  HotKey_KeyCode = 66
	HotKey_KEY_CODE_F3                  HotKey_KeyCode = 67
	HotKey_KEY_CODE_F4                  HotKey_KeyCode = 68
	HotKey_KEY_CODE_F5                  HotKey_KeyCode = 69
	HotKey_KEY_CODE_F6                  HotKey_KeyCode = 70
	HotKey_KEY_CODE_F7                  HotKey_KeyCode = 71
	HotKey_KEY_CODE_F8                  HotKey_KeyCode = 72
	HotKey_KEY_CODE_F9                  HotKey_KeyCode = 73
	HotKey_KEY_CODE_F10                 HotKey_KeyCode = 74
	HotKey_KEY_CODE_F11                 HotKey_KeyCode = 75
	HotKey_KEY_CODE_F12                 HotKey_KeyCode = 76
	HotKey_KEY_CODE_F13                 HotKey_KeyCode = 77
	HotKey_KEY_CODE_F14                 HotKey_KeyCode = 78
	HotKey_KEY_CODE_F15                 HotKey_KeyCode = 79
	HotKey_KEY_CODE_F16                 HotKey_KeyCode = 80
	HotKey_KEY_CODE_F17                 HotKey_KeyCode = 81
	HotKey_KEY_CODE_F18                 HotKey_KeyCode = 82
	HotKey_KEY_CODE_F19                 HotKey_KeyCode = 83
	HotKey_KEY_CODE_F20                 HotKey_KeyCode = 84
	HotKey_KEY_CODE_FUNCTION            HotKey_KeyCode = 85
	HotKey_KEY_CODE_RETURN              HotKey_KeyCode = 86
	HotKey_KEY_CODE_TAB                 HotKey_KeyCode = 87
	HotKey_KEY_CODE_SPACE               HotKey_KeyCode = 88
	HotKey_KEY_CODE_DELETE              HotKey_KeyCode = 89
	HotKey_KEY_CODE_ESCAPE              HotKey_KeyCode = 90
	HotKey_KEY_CODE_COMMAND             HotKey_KeyCode = 91
	HotKey_KEY_CODE_SHIFT               HotKey_KeyCode = 92
	HotKey_KEY_CODE_CAPS_LOCK           HotKey_KeyCode = 93
	HotKey_KEY_CODE_OPTION              HotKey_KeyCode = 94
	HotKey_KEY_CODE_CONTROL             HotKey_KeyCode = 95
	HotKey_KEY_CODE_RIGHT_SHIFT         HotKey_KeyCode = 96
	HotKey_KEY_CODE_RIGHT_OPTION        HotKey_KeyCode = 97
	HotKey_KEY_CODE_RIGHT_CONTROL       HotKey_KeyCode = 98
	HotKey_KEY_CODE_VOLUME_UP           HotKey_KeyCode = 99
	HotKey_KEY_CODE_VOLUME_DOWN         HotKey_KeyCode = 100
	HotKey_KEY_CODE_MUTE                HotKey_KeyCode = 101
	HotKey_KEY_CODE_HELP                HotKey_KeyCode = 102
	HotKey_KEY_CODE_HOME                HotKey_KeyCode = 103
	HotKey_KEY_CODE_PAGE_UP             HotKey_KeyCode = 104
	HotKey_KEY_CODE_FORWARD_DELETE      HotKey_KeyCode = 105
	HotKey_KEY_CODE_END                 HotKey_KeyCode = 106
	HotKey_KEY_CODE_PAGE_DOWN           HotKey_KeyCode = 107
	HotKey_KEY_CODE_LEFT_ARROW          HotKey_KeyCode = 108
	HotKey_KEY_CODE_RIGHT_ARROW         HotKey_KeyCode = 109
	HotKey_KEY_CODE_DOWN_ARROW          HotKey_KeyCode = 110
	HotKey_KEY_CODE_UP_ARROW            HotKey_KeyCode = 111
	HotKey_KEY_CODE_ISO_SELECTION       HotKey_KeyCode = 112
	HotKey_KEY_CODE_JIS_YEN             HotKey_KeyCode = 113
	HotKey_KEY_CODE_JIS_UNDERSCORE      HotKey_KeyCode = 114
	HotKey_KEY_CODE_JIS_KEYPAD_COMMA    HotKey_KeyCode = 115
	HotKey_KEY_CODE_JIS_EISU            HotKey_KeyCode = 116
	HotKey_KEY_CODE_JIS_KANA            HotKey_KeyCode = 117
)

// Enum value maps for HotKey_KeyCode.
var (
	HotKey_KeyCode_name = map[int32]string{
		0:   "KEY_CODE_UNKNOWN",
		1:   "KEY_CODE_ANSI_A",
		2:   "KEY_CODE_ANSI_B",
		3:   "KEY_CODE_ANSI_C",
		4:   "KEY_CODE_ANSI_D",
		5:   "KEY_CODE_ANSI_E",
		6:   "KEY_CODE_ANSI_F",
		7:   "KEY_CODE_ANSI_G",
		8:   "KEY_CODE_ANSI_H",
		9:   "KEY_CODE_ANSI_I",
		10:  "KEY_CODE_ANSI_J",
		11:  "KEY_CODE_ANSI_K",
		12:  "KEY_CODE_ANSI_L",
		13:  "KEY_CODE_ANSI_M",
		14:  "KEY_CODE_ANSI_N",
		15:  "KEY_CODE_ANSI_O",
		16:  "KEY_CODE_ANSI_P",
		17:  "KEY_CODE_ANSI_Q",
		18:  "KEY_CODE_ANSI_R",
		19:  "KEY_CODE_ANSI_S",
		20:  "KEY_CODE_ANSI_T",
		21:  "KEY_CODE_ANSI_U",
		22:  "KEY_CODE_ANSI_V",
		23:  "KEY_CODE_ANSI_W",
		24:  "KEY_CODE_ANSI_X",
		25:  "KEY_CODE_ANSI_Y",
		26:  "KEY_CODE_ANSI_Z",
		27:  "KEY_CODE_ANSI_0",
		28:  "KEY_CODE_ANSI_1",
		29:  "KEY_CODE_ANSI_2",
		30:  "KEY_CODE_ANSI_3",
		31:  "KEY_CODE_ANSI_4",
		32:  "KEY_CODE_ANSI_5",
		33:  "KEY_CODE_ANSI_6",
		34:  "KEY_CODE_ANSI_7",
		35:  "KEY_CODE_ANSI_8",
		36:  "KEY_CODE_ANSI_9",
		37:  "KEY_CODE_ANSI_EQUAL",
		38:  "KEY_CODE_ANSI_MINUS",
		39:  "KEY_CODE_ANSI_RIGHT_BRACKET",
		40:  "KEY_CODE_ANSI_LEFT_BRACKET",
		41:  "KEY_CODE_ANSI_QUOTE",
		42:  "KEY_CODE_ANSI_SEMICOLON",
		43:  "KEY_CODE_ANSI_BACKSLASH",
		44:  "KEY_CODE_ANSI_COMMA",
		45:  "KEY_CODE_ANSI_SLASH",
		46:  "KEY_CODE_ANSI_PERIOD",
		47:  "KEY_CODE_ANSI_GRAVE",
		48:  "KEY_CODE_ANSI_KEYPAD_DECIMAL",
		49:  "KEY_CODE_ANSI_KEYPAD_PLUS",
		50:  "KEY_CODE_ANSI_KEYPAD_CLEAR",
		51:  "KEY_CODE_ANSI_KEYPAD_DIVIDE",
		52:  "KEY_CODE_ANSI_KEYPAD_ENTER",
		53:  "KEY_CODE_ANSI_KEYPAD_MINUS",
		54:  "KEY_CODE_ANSI_KEYPAD_EQUALS",
		55:  "KEY_CODE_ANSI_KEYPAD_0",
		56:  "KEY_CODE_ANSI_KEYPAD_1",
		57:  "KEY_CODE_ANSI_KEYPAD_2",
		58:  "KEY_CODE_ANSI_KEYPAD_3",
		59:  "KEY_CODE_ANSI_KEYPAD_4",
		60:  "KEY_CODE_ANSI_KEYPAD_5",
		61:  "KEY_CODE_ANSI_KEYPAD_6",
		62:  "KEY_CODE_ANSI_KEYPAD_7",
		63:  "KEY_CODE_ANSI_KEYPAD_8",
		64:  "KEY_CODE_ANSI_KEYPAD_9",
		65:  "KEY_CODE_F1",
		66:  "KEY_CODE_F2",
		67:  "KEY_CODE_F3",
		68:  "KEY_CODE_F4",
		69:  "KEY_CODE_F5",
		70:  "KEY_CODE_F6",
		71:  "KEY_CODE_F7",
		72:  "KEY_CODE_F8",
		73:  "KEY_CODE_F9",
		74:  "KEY_CODE_F10",
		75:  "KEY_CODE_F11",
		76:  "KEY_CODE_F12",
		77:  "KEY_CODE_F13",
		78:  "KEY_CODE_F14",
		79:  "KEY_CODE_F15",
		80:  "KEY_CODE_F16",
		81:  "KEY_CODE_F17",
		82:  "KEY_CODE_F18",
		83:  "KEY_CODE_F19",
		84:  "KEY_CODE_F20",
		85:  "KEY_CODE_FUNCTION",
		86:  "KEY_CODE_RETURN",
		87:  "KEY_CODE_TAB",
		88:  "KEY_CODE_SPACE",
		89:  "KEY_CODE_DELETE",
		90:  "KEY_CODE_ESCAPE",
		91:  "KEY_CODE_COMMAND",
		92:  "KEY_CODE_SHIFT",
		93:  "KEY_CODE_CAPS_LOCK",
		94:  "KEY_CODE_OPTION",
		95:  "KEY_CODE_CONTROL",
		96:  "KEY_CODE_RIGHT_SHIFT",
		97:  "KEY_CODE_RIGHT_OPTION",
		98:  "KEY_CODE_RIGHT_CONTROL",
		99:  "KEY_CODE_VOLUME_UP",
		100: "KEY_CODE_VOLUME_DOWN",
		101: "KEY_CODE_MUTE",
		102: "KEY_CODE_HELP",
		103: "KEY_CODE_HOME",
		104: "KEY_CODE_PAGE_UP",
		105: "KEY_CODE_FORWARD_DELETE",
		106: "KEY_CODE_END",
		107: "KEY_CODE_PAGE_DOWN",
		108: "KEY_CODE_LEFT_ARROW",
		109: "KEY_CODE_RIGHT_ARROW",
		110: "KEY_CODE_DOWN_ARROW",
		111: "KEY_CODE_UP_ARROW",
		112: "KEY_CODE_ISO_SELECTION",
		113: "KEY_CODE_JIS_YEN",
		114: "KEY_CODE_JIS_UNDERSCORE",
		115: "KEY_CODE_JIS_KEYPAD_COMMA",
		116: "KEY_CODE_JIS_EISU",
		117: "KEY_CODE_JIS_KANA",
	}
	HotKey_KeyCode_value = map[string]int32{
		"KEY_CODE_UNKNOWN":             0,
		"KEY_CODE_ANSI_A":              1,
		"KEY_CODE_ANSI_B":              2,
		"KEY_CODE_ANSI_C":              3,
		"KEY_CODE_ANSI_D":              4,
		"KEY_CODE_ANSI_E":              5,
		"KEY_CODE_ANSI_F":              6,
		"KEY_CODE_ANSI_G":              7,
		"KEY_CODE_ANSI_H":              8,
		"KEY_CODE_ANSI_I":              9,
		"KEY_CODE_ANSI_J":              10,
		"KEY_CODE_ANSI_K":              11,
		"KEY_CODE_ANSI_L":              12,
		"KEY_CODE_ANSI_M":              13,
		"KEY_CODE_ANSI_N":              14,
		"KEY_CODE_ANSI_O":              15,
		"KEY_CODE_ANSI_P":              16,
		"KEY_CODE_ANSI_Q":              17,
		"KEY_CODE_ANSI_R":              18,
		"KEY_CODE_ANSI_S":              19,
		"KEY_CODE_ANSI_T":              20,
		"KEY_CODE_ANSI_U":              21,
		"KEY_CODE_ANSI_V":              22,
		"KEY_CODE_ANSI_W":              23,
		"KEY_CODE_ANSI_X":              24,
		"KEY_CODE_ANSI_Y":              25,
		"KEY_CODE_ANSI_Z":              26,
		"KEY_CODE_ANSI_0":              27,
		"KEY_CODE_ANSI_1":              28,
		"KEY_CODE_ANSI_2":              29,
		"KEY_CODE_ANSI_3":              30,
		"KEY_CODE_ANSI_4":              31,
		"KEY_CODE_ANSI_5":              32,
		"KEY_CODE_ANSI_6":              33,
		"KEY_CODE_ANSI_7":              34,
		"KEY_CODE_ANSI_8":              35,
		"KEY_CODE_ANSI_9":              36,
		"KEY_CODE_ANSI_EQUAL":          37,
		"KEY_CODE_ANSI_MINUS":          38,
		"KEY_CODE_ANSI_RIGHT_BRACKET":  39,
		"KEY_CODE_ANSI_LEFT_BRACKET":   40,
		"KEY_CODE_ANSI_QUOTE":          41,
		"KEY_CODE_ANSI_SEMICOLON":      42,
		"KEY_CODE_ANSI_BACKSLASH":      43,
		"KEY_CODE_ANSI_COMMA":          44,
		"KEY_CODE_ANSI_SLASH":          45,
		"KEY_CODE_ANSI_PERIOD":         46,
		"KEY_CODE_ANSI_GRAVE":          47,
		"KEY_CODE_ANSI_KEYPAD_DECIMAL": 48,
		"KEY_CODE_ANSI_KEYPAD_PLUS":    49,
		"KEY_CODE_ANSI_KEYPAD_CLEAR":   50,
		"KEY_CODE_ANSI_KEYPAD_DIVIDE":  51,
		"KEY_CODE_ANSI_KEYPAD_ENTER":   52,
		"KEY_CODE_ANSI_KEYPAD_MINUS":   53,
		"KEY_CODE_ANSI_KEYPAD_EQUALS":  54,
		"KEY_CODE_ANSI_KEYPAD_0":       55,
		"KEY_CODE_ANSI_KEYPAD_1":       56,
		"KEY_CODE_ANSI_KEYPAD_2":       57,
		"KEY_CODE_ANSI_KEYPAD_3":       58,
		"KEY_CODE_ANSI_KEYPAD_4":       59,
		"KEY_CODE_ANSI_KEYPAD_5":       60,
		"KEY_CODE_ANSI_KEYPAD_6":       61,
		"KEY_CODE_ANSI_KEYPAD_7":       62,
		"KEY_CODE_ANSI_KEYPAD_8":       63,
		"KEY_CODE_ANSI_KEYPAD_9":       64,
		"KEY_CODE_F1":                  65,
		"KEY_CODE_F2":                  66,
		"KEY_CODE_F3":                  67,
		"KEY_CODE_F4":                  68,
		"KEY_CODE_F5":                  69,
		"KEY_CODE_F6":                  70,
		"KEY_CODE_F7":                  71,
		"KEY_CODE_F8":                  72,
		"KEY_CODE_F9":                  73,
		"KEY_CODE_F10":                 74,
		"KEY_CODE_F11":                 75,
		"KEY_CODE_F12":                 76,
		"KEY_CODE_F13":                 77,
		"KEY_CODE_F14":                 78,
		"KEY_CODE_F15":                 79,
		"KEY_CODE_F16":                 80,
		"KEY_CODE_F17":                 81,
		"KEY_CODE_F18":                 82,
		"KEY_CODE_F19":                 83,
		"KEY_CODE_F20":                 84,
		"KEY_CODE_FUNCTION":            85,
		"KEY_CODE_RETURN":              86,
		"KEY_CODE_TAB":                 87,
		"KEY_CODE_SPACE":               88,
		"KEY_CODE_DELETE":              89,
		"KEY_CODE_ESCAPE":              90,
		"KEY_CODE_COMMAND":             91,
		"KEY_CODE_SHIFT":               92,
		"KEY_CODE_CAPS_LOCK":           93,
		"KEY_CODE_OPTION":              94,
		"KEY_CODE_CONTROL":             95,
		"KEY_CODE_RIGHT_SHIFT":         96,
		"KEY_CODE_RIGHT_OPTION":        97,
		"KEY_CODE_RIGHT_CONTROL":       98,
		"KEY_CODE_VOLUME_UP":           99,
		"KEY_CODE_VOLUME_DOWN":         100,
		"KEY_CODE_MUTE":                101,
		"KEY_CODE_HELP":                102,
		"KEY_CODE_HOME":                103,
		"KEY_CODE_PAGE_UP":             104,
		"KEY_CODE_FORWARD_DELETE":      105,
		"KEY_CODE_END":                 106,
		"KEY_CODE_PAGE_DOWN":           107,
		"KEY_CODE_LEFT_ARROW":          108,
		"KEY_CODE_RIGHT_ARROW":         109,
		"KEY_CODE_DOWN_ARROW":          110,
		"KEY_CODE_UP_ARROW":            111,
		"KEY_CODE_ISO_SELECTION":       112,
		"KEY_CODE_JIS_YEN":             113,
		"KEY_CODE_JIS_UNDERSCORE":      114,
		"KEY_CODE_JIS_KEYPAD_COMMA":    115,
		"KEY_CODE_JIS_EISU":            116,
		"KEY_CODE_JIS_KANA":            117,
	}
)

func (x HotKey_KeyCode) Enum() *HotKey_KeyCode {
	p := new(HotKey_KeyCode)
	*p = x
	return p
}

func (x HotKey_KeyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HotKey_KeyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_hotKey_proto_enumTypes[0].Descriptor()
}

func (HotKey_KeyCode) Type() protoreflect.EnumType {
	return &file_hotKey_proto_enumTypes[0]
}

func (x HotKey_KeyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HotKey_KeyCode.Descriptor instead.
func (HotKey_KeyCode) EnumDescriptor() ([]byte, []int) {
	return file_hotKey_proto_rawDescGZIP(), []int{0, 0}
}

type HotKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              HotKey_KeyCode `protobuf:"varint,1,opt,name=code,proto3,enum=rv.data.HotKey_KeyCode" json:"code,omitempty"`
	ControlIdentifier string         `protobuf:"bytes,2,opt,name=control_identifier,json=controlIdentifier,proto3" json:"control_identifier,omitempty"`
}

func (x *HotKey) Reset() {
	*x = HotKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotKey_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotKey) ProtoMessage() {}

func (x *HotKey) ProtoReflect() protoreflect.Message {
	mi := &file_hotKey_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotKey.ProtoReflect.Descriptor instead.
func (*HotKey) Descriptor() ([]byte, []int) {
	return file_hotKey_proto_rawDescGZIP(), []int{0}
}

func (x *HotKey) GetCode() HotKey_KeyCode {
	if x != nil {
		return x.Code
	}
	return HotKey_KEY_CODE_UNKNOWN
}

func (x *HotKey) GetControlIdentifier() string {
	if x != nil {
		return x.ControlIdentifier
	}
	return ""
}

var File_hotKey_proto protoreflect.FileDescriptor

var file_hotKey_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x68, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x16, 0x0a, 0x06, 0x48, 0x6f, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x48, 0x6f, 0x74, 0x4b, 0x65,
	0x79, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x99,
	0x15, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53,
	0x49, 0x5f, 0x41, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x42, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x43, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49,
	0x5f, 0x44, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x45, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x46, 0x10, 0x06, 0x12, 0x13,
	0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f,
	0x47, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x41, 0x4e, 0x53, 0x49, 0x5f, 0x48, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x49, 0x10, 0x09, 0x12, 0x13, 0x0a,
	0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4a,
	0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x4e, 0x53, 0x49, 0x5f, 0x4b, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4c, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f,
	0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4d, 0x10,
	0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e,
	0x53, 0x49, 0x5f, 0x4e, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4f, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x50, 0x10, 0x10,
	0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53,
	0x49, 0x5f, 0x51, 0x10, 0x11, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x52, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x53, 0x10, 0x13, 0x12,
	0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49,
	0x5f, 0x54, 0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x55, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x56, 0x10, 0x16, 0x12, 0x13,
	0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f,
	0x57, 0x10, 0x17, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x41, 0x4e, 0x53, 0x49, 0x5f, 0x58, 0x10, 0x18, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x59, 0x10, 0x19, 0x12, 0x13, 0x0a,
	0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x5a,
	0x10, 0x1a, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x4e, 0x53, 0x49, 0x5f, 0x30, 0x10, 0x1b, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x31, 0x10, 0x1c, 0x12, 0x13, 0x0a, 0x0f,
	0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x32, 0x10,
	0x1d, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e,
	0x53, 0x49, 0x5f, 0x33, 0x10, 0x1e, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x34, 0x10, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x35, 0x10, 0x20,
	0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53,
	0x49, 0x5f, 0x36, 0x10, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x37, 0x10, 0x22, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x38, 0x10, 0x23, 0x12,
	0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49,
	0x5f, 0x39, 0x10, 0x24, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x25, 0x12, 0x17, 0x0a,
	0x13, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4d,
	0x49, 0x4e, 0x55, 0x53, 0x10, 0x26, 0x12, 0x1f, 0x0a, 0x1b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x52,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x27, 0x12, 0x1e, 0x0a, 0x1a, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x42, 0x52,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x28, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x45, 0x10, 0x29,
	0x12, 0x1b, 0x0a, 0x17, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53,
	0x49, 0x5f, 0x53, 0x45, 0x4d, 0x49, 0x43, 0x4f, 0x4c, 0x4f, 0x4e, 0x10, 0x2a, 0x12, 0x1b, 0x0a,
	0x17, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x42,
	0x41, 0x43, 0x4b, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x2b, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x41, 0x10, 0x2c, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x41, 0x4e, 0x53, 0x49, 0x5f, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x2d, 0x12, 0x18, 0x0a, 0x14,
	0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x50, 0x45,
	0x52, 0x49, 0x4f, 0x44, 0x10, 0x2e, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x47, 0x52, 0x41, 0x56, 0x45, 0x10, 0x2f, 0x12,
	0x20, 0x0a, 0x1c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49,
	0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x44, 0x45, 0x43, 0x49, 0x4d, 0x41, 0x4c, 0x10,
	0x30, 0x12, 0x1d, 0x0a, 0x19, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e,
	0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x10, 0x31,
	0x12, 0x1e, 0x0a, 0x1a, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53,
	0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x32,
	0x12, 0x1f, 0x0a, 0x1b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53,
	0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x44, 0x49, 0x56, 0x49, 0x44, 0x45, 0x10,
	0x33, 0x12, 0x1e, 0x0a, 0x1a, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e,
	0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10,
	0x34, 0x12, 0x1e, 0x0a, 0x1a, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e,
	0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x53, 0x10,
	0x35, 0x12, 0x1f, 0x0a, 0x1b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e,
	0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53,
	0x10, 0x36, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x4e, 0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x30, 0x10, 0x37, 0x12, 0x1a,
	0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f,
	0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x31, 0x10, 0x38, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50,
	0x41, 0x44, 0x5f, 0x32, 0x10, 0x39, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x33,
	0x10, 0x3a, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x4e, 0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x34, 0x10, 0x3b, 0x12, 0x1a,
	0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f,
	0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x35, 0x10, 0x3c, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50,
	0x41, 0x44, 0x5f, 0x36, 0x10, 0x3d, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x37,
	0x10, 0x3e, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x4e, 0x53, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x38, 0x10, 0x3f, 0x12, 0x1a,
	0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x53, 0x49, 0x5f,
	0x4b, 0x45, 0x59, 0x50, 0x41, 0x44, 0x5f, 0x39, 0x10, 0x40, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x31, 0x10, 0x41, 0x12, 0x0f, 0x0a, 0x0b, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x32, 0x10, 0x42, 0x12, 0x0f, 0x0a, 0x0b,
	0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x33, 0x10, 0x43, 0x12, 0x0f, 0x0a,
	0x0b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x34, 0x10, 0x44, 0x12, 0x0f,
	0x0a, 0x0b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x35, 0x10, 0x45, 0x12,
	0x0f, 0x0a, 0x0b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x36, 0x10, 0x46,
	0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x37, 0x10,
	0x47, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x38,
	0x10, 0x48, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46,
	0x39, 0x10, 0x49, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x46, 0x31, 0x30, 0x10, 0x4a, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x46, 0x31, 0x31, 0x10, 0x4b, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x46, 0x31, 0x32, 0x10, 0x4c, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x31, 0x33, 0x10, 0x4d, 0x12, 0x10, 0x0a, 0x0c, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x31, 0x34, 0x10, 0x4e, 0x12, 0x10, 0x0a,
	0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x31, 0x35, 0x10, 0x4f, 0x12,
	0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x31, 0x36, 0x10,
	0x50, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x31,
	0x37, 0x10, 0x51, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x46, 0x31, 0x38, 0x10, 0x52, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x46, 0x31, 0x39, 0x10, 0x53, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x46, 0x32, 0x30, 0x10, 0x54, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x45, 0x59,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x55,
	0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x54,
	0x55, 0x52, 0x4e, 0x10, 0x56, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x54, 0x41, 0x42, 0x10, 0x57, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x58, 0x12, 0x13, 0x0a, 0x0f, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x59,
	0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x53, 0x43,
	0x41, 0x50, 0x45, 0x10, 0x5a, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x5b, 0x12, 0x12, 0x0a, 0x0e, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x48, 0x49, 0x46, 0x54, 0x10, 0x5c, 0x12,
	0x16, 0x0a, 0x12, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x41, 0x50, 0x53,
	0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x5d, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x5e, 0x12, 0x14, 0x0a, 0x10,
	0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c,
	0x10, 0x5f, 0x12, 0x18, 0x0a, 0x14, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x49, 0x47, 0x48, 0x54, 0x5f, 0x53, 0x48, 0x49, 0x46, 0x54, 0x10, 0x60, 0x12, 0x19, 0x0a, 0x15,
	0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4f,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x61, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x10, 0x62, 0x12, 0x16, 0x0a, 0x12, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f, 0x55, 0x50, 0x10, 0x63, 0x12, 0x18, 0x0a, 0x14, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x4d, 0x55, 0x54, 0x45, 0x10, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4b, 0x45, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x45, 0x4c, 0x50, 0x10, 0x66, 0x12, 0x11, 0x0a, 0x0d, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x10, 0x67, 0x12, 0x14,
	0x0a, 0x10, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f,
	0x55, 0x50, 0x10, 0x68, 0x12, 0x1b, 0x0a, 0x17, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10,
	0x69, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x4e,
	0x44, 0x10, 0x6a, 0x12, 0x16, 0x0a, 0x12, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x50, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x6b, 0x12, 0x17, 0x0a, 0x13, 0x4b,
	0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x41, 0x52, 0x52,
	0x4f, 0x57, 0x10, 0x6c, 0x12, 0x18, 0x0a, 0x14, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x41, 0x52, 0x52, 0x4f, 0x57, 0x10, 0x6d, 0x12, 0x17,
	0x0a, 0x13, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f,
	0x41, 0x52, 0x52, 0x4f, 0x57, 0x10, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x45, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x55, 0x50, 0x5f, 0x41, 0x52, 0x52, 0x4f, 0x57, 0x10, 0x6f, 0x12, 0x1a,
	0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x53, 0x4f, 0x5f, 0x53,
	0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x70, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x45,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4a, 0x49, 0x53, 0x5f, 0x59, 0x45, 0x4e, 0x10, 0x71,
	0x12, 0x1b, 0x0a, 0x17, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4a, 0x49, 0x53,
	0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x72, 0x12, 0x1d, 0x0a,
	0x19, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4a, 0x49, 0x53, 0x5f, 0x4b, 0x45,
	0x59, 0x50, 0x41, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x10, 0x73, 0x12, 0x15, 0x0a, 0x11,
	0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4a, 0x49, 0x53, 0x5f, 0x45, 0x49, 0x53,
	0x55, 0x10, 0x74, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x4a, 0x49, 0x53, 0x5f, 0x4b, 0x41, 0x4e, 0x41, 0x10, 0x75, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hotKey_proto_rawDescOnce sync.Once
	file_hotKey_proto_rawDescData = file_hotKey_proto_rawDesc
)

func file_hotKey_proto_rawDescGZIP() []byte {
	file_hotKey_proto_rawDescOnce.Do(func() {
		file_hotKey_proto_rawDescData = protoimpl.X.CompressGZIP(file_hotKey_proto_rawDescData)
	})
	return file_hotKey_proto_rawDescData
}

var file_hotKey_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hotKey_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_hotKey_proto_goTypes = []interface{}{
	(HotKey_KeyCode)(0), // 0: rv.data.HotKey.KeyCode
	(*HotKey)(nil),      // 1: rv.data.HotKey
}
var file_hotKey_proto_depIdxs = []int32{
	0, // 0: rv.data.HotKey.code:type_name -> rv.data.HotKey.KeyCode
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_hotKey_proto_init() }
func file_hotKey_proto_init() {
	if File_hotKey_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hotKey_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hotKey_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hotKey_proto_goTypes,
		DependencyIndexes: file_hotKey_proto_depIdxs,
		EnumInfos:         file_hotKey_proto_enumTypes,
		MessageInfos:      file_hotKey_proto_msgTypes,
	}.Build()
	File_hotKey_proto = out.File
	file_hotKey_proto_rawDesc = nil
	file_hotKey_proto_goTypes = nil
	file_hotKey_proto_depIdxs = nil
}
