// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: clearGroups.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClearGroupsDocument_ClearGroup_ImageType int32

const (
	ClearGroupsDocument_ClearGroup_ImageTypeCustom      ClearGroupsDocument_ClearGroup_ImageType = 0
	ClearGroupsDocument_ClearGroup_ImageTypeOne         ClearGroupsDocument_ClearGroup_ImageType = 1
	ClearGroupsDocument_ClearGroup_ImageTypeTwo         ClearGroupsDocument_ClearGroup_ImageType = 2
	ClearGroupsDocument_ClearGroup_ImageTypeThree       ClearGroupsDocument_ClearGroup_ImageType = 3
	ClearGroupsDocument_ClearGroup_ImageTypeFour        ClearGroupsDocument_ClearGroup_ImageType = 4
	ClearGroupsDocument_ClearGroup_ImageTypeFive        ClearGroupsDocument_ClearGroup_ImageType = 5
	ClearGroupsDocument_ClearGroup_ImageTypeSix         ClearGroupsDocument_ClearGroup_ImageType = 6
	ClearGroupsDocument_ClearGroup_ImageTypeSeven       ClearGroupsDocument_ClearGroup_ImageType = 7
	ClearGroupsDocument_ClearGroup_ImageTypeEight       ClearGroupsDocument_ClearGroup_ImageType = 8
	ClearGroupsDocument_ClearGroup_ImageTypeNine        ClearGroupsDocument_ClearGroup_ImageType = 9
	ClearGroupsDocument_ClearGroup_ImageTypeZero        ClearGroupsDocument_ClearGroup_ImageType = 10
	ClearGroupsDocument_ClearGroup_ImageTypeAll         ClearGroupsDocument_ClearGroup_ImageType = 11
	ClearGroupsDocument_ClearGroup_ImageTypeMegahorn    ClearGroupsDocument_ClearGroup_ImageType = 12
	ClearGroupsDocument_ClearGroup_ImageTypePlay        ClearGroupsDocument_ClearGroup_ImageType = 13
	ClearGroupsDocument_ClearGroup_ImageTypeBulb        ClearGroupsDocument_ClearGroup_ImageType = 14
	ClearGroupsDocument_ClearGroup_ImageTypeSunglasses  ClearGroupsDocument_ClearGroup_ImageType = 15
	ClearGroupsDocument_ClearGroup_ImageTypeArrow       ClearGroupsDocument_ClearGroup_ImageType = 16
	ClearGroupsDocument_ClearGroup_ImageTypeTarget      ClearGroupsDocument_ClearGroup_ImageType = 17
	ClearGroupsDocument_ClearGroup_ImageTypeStar        ClearGroupsDocument_ClearGroup_ImageType = 18
	ClearGroupsDocument_ClearGroup_ImageTypeSun         ClearGroupsDocument_ClearGroup_ImageType = 19
	ClearGroupsDocument_ClearGroup_ImageTypeBell        ClearGroupsDocument_ClearGroup_ImageType = 20
	ClearGroupsDocument_ClearGroup_ImageTypePaperclip   ClearGroupsDocument_ClearGroup_ImageType = 21
	ClearGroupsDocument_ClearGroup_ImageTypeFlask       ClearGroupsDocument_ClearGroup_ImageType = 22
	ClearGroupsDocument_ClearGroup_ImageTypeEyeglasses  ClearGroupsDocument_ClearGroup_ImageType = 23
	ClearGroupsDocument_ClearGroup_ImageTypeCupcake     ClearGroupsDocument_ClearGroup_ImageType = 24
	ClearGroupsDocument_ClearGroup_ImageTypeSlide       ClearGroupsDocument_ClearGroup_ImageType = 25
	ClearGroupsDocument_ClearGroup_ImageTypeHat         ClearGroupsDocument_ClearGroup_ImageType = 26
	ClearGroupsDocument_ClearGroup_ImageTypeFlower      ClearGroupsDocument_ClearGroup_ImageType = 27
	ClearGroupsDocument_ClearGroup_ImageTypeHeart       ClearGroupsDocument_ClearGroup_ImageType = 28
	ClearGroupsDocument_ClearGroup_ImageTypeMessage     ClearGroupsDocument_ClearGroup_ImageType = 29
	ClearGroupsDocument_ClearGroup_ImageTypeAudio       ClearGroupsDocument_ClearGroup_ImageType = 30
	ClearGroupsDocument_ClearGroup_ImageTypeCloud       ClearGroupsDocument_ClearGroup_ImageType = 31
	ClearGroupsDocument_ClearGroup_ImageTypeExclamation ClearGroupsDocument_ClearGroup_ImageType = 32
)

// Enum value maps for ClearGroupsDocument_ClearGroup_ImageType.
var (
	ClearGroupsDocument_ClearGroup_ImageType_name = map[int32]string{
		0:  "ImageTypeCustom",
		1:  "ImageTypeOne",
		2:  "ImageTypeTwo",
		3:  "ImageTypeThree",
		4:  "ImageTypeFour",
		5:  "ImageTypeFive",
		6:  "ImageTypeSix",
		7:  "ImageTypeSeven",
		8:  "ImageTypeEight",
		9:  "ImageTypeNine",
		10: "ImageTypeZero",
		11: "ImageTypeAll",
		12: "ImageTypeMegahorn",
		13: "ImageTypePlay",
		14: "ImageTypeBulb",
		15: "ImageTypeSunglasses",
		16: "ImageTypeArrow",
		17: "ImageTypeTarget",
		18: "ImageTypeStar",
		19: "ImageTypeSun",
		20: "ImageTypeBell",
		21: "ImageTypePaperclip",
		22: "ImageTypeFlask",
		23: "ImageTypeEyeglasses",
		24: "ImageTypeCupcake",
		25: "ImageTypeSlide",
		26: "ImageTypeHat",
		27: "ImageTypeFlower",
		28: "ImageTypeHeart",
		29: "ImageTypeMessage",
		30: "ImageTypeAudio",
		31: "ImageTypeCloud",
		32: "ImageTypeExclamation",
	}
	ClearGroupsDocument_ClearGroup_ImageType_value = map[string]int32{
		"ImageTypeCustom":      0,
		"ImageTypeOne":         1,
		"ImageTypeTwo":         2,
		"ImageTypeThree":       3,
		"ImageTypeFour":        4,
		"ImageTypeFive":        5,
		"ImageTypeSix":         6,
		"ImageTypeSeven":       7,
		"ImageTypeEight":       8,
		"ImageTypeNine":        9,
		"ImageTypeZero":        10,
		"ImageTypeAll":         11,
		"ImageTypeMegahorn":    12,
		"ImageTypePlay":        13,
		"ImageTypeBulb":        14,
		"ImageTypeSunglasses":  15,
		"ImageTypeArrow":       16,
		"ImageTypeTarget":      17,
		"ImageTypeStar":        18,
		"ImageTypeSun":         19,
		"ImageTypeBell":        20,
		"ImageTypePaperclip":   21,
		"ImageTypeFlask":       22,
		"ImageTypeEyeglasses":  23,
		"ImageTypeCupcake":     24,
		"ImageTypeSlide":       25,
		"ImageTypeHat":         26,
		"ImageTypeFlower":      27,
		"ImageTypeHeart":       28,
		"ImageTypeMessage":     29,
		"ImageTypeAudio":       30,
		"ImageTypeCloud":       31,
		"ImageTypeExclamation": 32,
	}
)

func (x ClearGroupsDocument_ClearGroup_ImageType) Enum() *ClearGroupsDocument_ClearGroup_ImageType {
	p := new(ClearGroupsDocument_ClearGroup_ImageType)
	*p = x
	return p
}

func (x ClearGroupsDocument_ClearGroup_ImageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClearGroupsDocument_ClearGroup_ImageType) Descriptor() protoreflect.EnumDescriptor {
	return file_clearGroups_proto_enumTypes[0].Descriptor()
}

func (ClearGroupsDocument_ClearGroup_ImageType) Type() protoreflect.EnumType {
	return &file_clearGroups_proto_enumTypes[0]
}

func (x ClearGroupsDocument_ClearGroup_ImageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClearGroupsDocument_ClearGroup_ImageType.Descriptor instead.
func (ClearGroupsDocument_ClearGroup_ImageType) EnumDescriptor() ([]byte, []int) {
	return file_clearGroups_proto_rawDescGZIP(), []int{0, 0, 0}
}

type ClearGroupsDocument_ClearGroup_ContentDestination int32

const (
	ClearGroupsDocument_ClearGroup_CONTENT_DESTINATION_GLOBAL        ClearGroupsDocument_ClearGroup_ContentDestination = 0
	ClearGroupsDocument_ClearGroup_CONTENT_DESTINATION_ANNOUNCEMENTS ClearGroupsDocument_ClearGroup_ContentDestination = 1
)

// Enum value maps for ClearGroupsDocument_ClearGroup_ContentDestination.
var (
	ClearGroupsDocument_ClearGroup_ContentDestination_name = map[int32]string{
		0: "CONTENT_DESTINATION_GLOBAL",
		1: "CONTENT_DESTINATION_ANNOUNCEMENTS",
	}
	ClearGroupsDocument_ClearGroup_ContentDestination_value = map[string]int32{
		"CONTENT_DESTINATION_GLOBAL":        0,
		"CONTENT_DESTINATION_ANNOUNCEMENTS": 1,
	}
)

func (x ClearGroupsDocument_ClearGroup_ContentDestination) Enum() *ClearGroupsDocument_ClearGroup_ContentDestination {
	p := new(ClearGroupsDocument_ClearGroup_ContentDestination)
	*p = x
	return p
}

func (x ClearGroupsDocument_ClearGroup_ContentDestination) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClearGroupsDocument_ClearGroup_ContentDestination) Descriptor() protoreflect.EnumDescriptor {
	return file_clearGroups_proto_enumTypes[1].Descriptor()
}

func (ClearGroupsDocument_ClearGroup_ContentDestination) Type() protoreflect.EnumType {
	return &file_clearGroups_proto_enumTypes[1]
}

func (x ClearGroupsDocument_ClearGroup_ContentDestination) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClearGroupsDocument_ClearGroup_ContentDestination.Descriptor instead.
func (ClearGroupsDocument_ClearGroup_ContentDestination) EnumDescriptor() ([]byte, []int) {
	return file_clearGroups_proto_rawDescGZIP(), []int{0, 0, 1}
}

type ClearGroupsDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationInfo *ApplicationInfo                  `protobuf:"bytes,1,opt,name=application_info,json=applicationInfo,proto3" json:"application_info,omitempty"`
	Groups          []*ClearGroupsDocument_ClearGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ClearGroupsDocument) Reset() {
	*x = ClearGroupsDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clearGroups_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearGroupsDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearGroupsDocument) ProtoMessage() {}

func (x *ClearGroupsDocument) ProtoReflect() protoreflect.Message {
	mi := &file_clearGroups_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearGroupsDocument.ProtoReflect.Descriptor instead.
func (*ClearGroupsDocument) Descriptor() ([]byte, []int) {
	return file_clearGroups_proto_rawDescGZIP(), []int{0}
}

func (x *ClearGroupsDocument) GetApplicationInfo() *ApplicationInfo {
	if x != nil {
		return x.ApplicationInfo
	}
	return nil
}

func (x *ClearGroupsDocument) GetGroups() []*ClearGroupsDocument_ClearGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type ClearGroupsDocument_ClearGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid              *UUID                                               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name              string                                              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LayerTargets      []*Action_ClearType                                 `protobuf:"bytes,3,rep,name=layer_targets,json=layerTargets,proto3" json:"layer_targets,omitempty"`
	IsHiddenInPreview bool                                                `protobuf:"varint,4,opt,name=is_hidden_in_preview,json=isHiddenInPreview,proto3" json:"is_hidden_in_preview,omitempty"`
	ImageData         []byte                                              `protobuf:"bytes,5,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
	ImageType         ClearGroupsDocument_ClearGroup_ImageType            `protobuf:"varint,6,opt,name=image_type,json=imageType,proto3,enum=rv.data.ClearGroupsDocument_ClearGroup_ImageType" json:"image_type,omitempty"`
	IsIconTinted      bool                                                `protobuf:"varint,7,opt,name=is_icon_tinted,json=isIconTinted,proto3" json:"is_icon_tinted,omitempty"`
	IconTintColor     *Color                                              `protobuf:"bytes,8,opt,name=icon_tint_color,json=iconTintColor,proto3" json:"icon_tint_color,omitempty"`
	TimelineTargets   []ClearGroupsDocument_ClearGroup_ContentDestination `protobuf:"varint,9,rep,packed,name=timeline_targets,json=timelineTargets,proto3,enum=rv.data.ClearGroupsDocument_ClearGroup_ContentDestination" json:"timeline_targets,omitempty"`
}

func (x *ClearGroupsDocument_ClearGroup) Reset() {
	*x = ClearGroupsDocument_ClearGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clearGroups_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearGroupsDocument_ClearGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearGroupsDocument_ClearGroup) ProtoMessage() {}

func (x *ClearGroupsDocument_ClearGroup) ProtoReflect() protoreflect.Message {
	mi := &file_clearGroups_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearGroupsDocument_ClearGroup.ProtoReflect.Descriptor instead.
func (*ClearGroupsDocument_ClearGroup) Descriptor() ([]byte, []int) {
	return file_clearGroups_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ClearGroupsDocument_ClearGroup) GetUuid() *UUID {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *ClearGroupsDocument_ClearGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClearGroupsDocument_ClearGroup) GetLayerTargets() []*Action_ClearType {
	if x != nil {
		return x.LayerTargets
	}
	return nil
}

func (x *ClearGroupsDocument_ClearGroup) GetIsHiddenInPreview() bool {
	if x != nil {
		return x.IsHiddenInPreview
	}
	return false
}

func (x *ClearGroupsDocument_ClearGroup) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *ClearGroupsDocument_ClearGroup) GetImageType() ClearGroupsDocument_ClearGroup_ImageType {
	if x != nil {
		return x.ImageType
	}
	return ClearGroupsDocument_ClearGroup_ImageTypeCustom
}

func (x *ClearGroupsDocument_ClearGroup) GetIsIconTinted() bool {
	if x != nil {
		return x.IsIconTinted
	}
	return false
}

func (x *ClearGroupsDocument_ClearGroup) GetIconTintColor() *Color {
	if x != nil {
		return x.IconTintColor
	}
	return nil
}

func (x *ClearGroupsDocument_ClearGroup) GetTimelineTargets() []ClearGroupsDocument_ClearGroup_ContentDestination {
	if x != nil {
		return x.TimelineTargets
	}
	return nil
}

var File_clearGroups_proto protoreflect.FileDescriptor

var file_clearGroups_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x10, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x0b, 0x0a,
	0x13, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x76, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0xf3, 0x09, 0x0a, 0x0a, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x49, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x50, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6e, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x49, 0x63,
	0x6f, 0x6e, 0x54, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0f, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x52, 0x0d, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x65, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x72, 0x76, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0xa9, 0x05, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x77, 0x6f, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x6f, 0x75, 0x72, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x46, 0x69, 0x76, 0x65, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x69, 0x78, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x10, 0x07, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x69, 0x67, 0x68, 0x74,
	0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x69, 0x6e, 0x65, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6c, 0x6c, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x67, 0x61, 0x68, 0x6f, 0x72, 0x6e, 0x10,
	0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x10, 0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x75, 0x6c, 0x62, 0x10, 0x0e, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x10, 0x0f,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x72, 0x72,
	0x6f, 0x77, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x10, 0x11, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x72, 0x10, 0x12, 0x12, 0x10, 0x0a, 0x0c,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6e, 0x10, 0x13, 0x12, 0x11,
	0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x65, 0x6c, 0x6c, 0x10,
	0x14, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x70, 0x10, 0x15, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x6b, 0x10, 0x16, 0x12, 0x17, 0x0a,
	0x13, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x79, 0x65, 0x67, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x10, 0x17, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x75, 0x70, 0x63, 0x61, 0x6b, 0x65, 0x10, 0x18, 0x12, 0x12, 0x0a, 0x0e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x10, 0x19,
	0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x61, 0x74,
	0x10, 0x1a, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x10, 0x1b, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x10, 0x1c, 0x12, 0x14, 0x0a, 0x10, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10,
	0x1d, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x10, 0x1e, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x10, 0x1f, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x63, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x20, 0x22, 0x5b, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x4e, 0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x01,
	0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clearGroups_proto_rawDescOnce sync.Once
	file_clearGroups_proto_rawDescData = file_clearGroups_proto_rawDesc
)

func file_clearGroups_proto_rawDescGZIP() []byte {
	file_clearGroups_proto_rawDescOnce.Do(func() {
		file_clearGroups_proto_rawDescData = protoimpl.X.CompressGZIP(file_clearGroups_proto_rawDescData)
	})
	return file_clearGroups_proto_rawDescData
}

var file_clearGroups_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_clearGroups_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_clearGroups_proto_goTypes = []interface{}{
	(ClearGroupsDocument_ClearGroup_ImageType)(0),          // 0: rv.data.ClearGroupsDocument.ClearGroup.ImageType
	(ClearGroupsDocument_ClearGroup_ContentDestination)(0), // 1: rv.data.ClearGroupsDocument.ClearGroup.ContentDestination
	(*ClearGroupsDocument)(nil),                            // 2: rv.data.ClearGroupsDocument
	(*ClearGroupsDocument_ClearGroup)(nil),                 // 3: rv.data.ClearGroupsDocument.ClearGroup
	(*ApplicationInfo)(nil),                                // 4: rv.data.ApplicationInfo
	(*UUID)(nil),                                           // 5: rv.data.UUID
	(*Action_ClearType)(nil),                               // 6: rv.data.Action.ClearType
	(*Color)(nil),                                          // 7: rv.data.Color
}
var file_clearGroups_proto_depIdxs = []int32{
	4, // 0: rv.data.ClearGroupsDocument.application_info:type_name -> rv.data.ApplicationInfo
	3, // 1: rv.data.ClearGroupsDocument.groups:type_name -> rv.data.ClearGroupsDocument.ClearGroup
	5, // 2: rv.data.ClearGroupsDocument.ClearGroup.uuid:type_name -> rv.data.UUID
	6, // 3: rv.data.ClearGroupsDocument.ClearGroup.layer_targets:type_name -> rv.data.Action.ClearType
	0, // 4: rv.data.ClearGroupsDocument.ClearGroup.image_type:type_name -> rv.data.ClearGroupsDocument.ClearGroup.ImageType
	7, // 5: rv.data.ClearGroupsDocument.ClearGroup.icon_tint_color:type_name -> rv.data.Color
	1, // 6: rv.data.ClearGroupsDocument.ClearGroup.timeline_targets:type_name -> rv.data.ClearGroupsDocument.ClearGroup.ContentDestination
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_clearGroups_proto_init() }
func file_clearGroups_proto_init() {
	if File_clearGroups_proto != nil {
		return
	}
	file_basicTypes_proto_init()
	file_action_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_clearGroups_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearGroupsDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clearGroups_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearGroupsDocument_ClearGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clearGroups_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_clearGroups_proto_goTypes,
		DependencyIndexes: file_clearGroups_proto_depIdxs,
		EnumInfos:         file_clearGroups_proto_enumTypes,
		MessageInfos:      file_clearGroups_proto_msgTypes,
	}.Build()
	File_clearGroups_proto = out.File
	file_clearGroups_proto_rawDesc = nil
	file_clearGroups_proto_goTypes = nil
	file_clearGroups_proto_depIdxs = nil
}
