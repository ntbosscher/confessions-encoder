// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: baseDocument.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PVPDocumentState_PlaylistState_LayoutType int32

const (
	PVPDocumentState_PlaylistState_LAYOUT_TYPE_CUE        PVPDocumentState_PlaylistState_LayoutType = 0
	PVPDocumentState_PlaylistState_LAYOUT_TYPE_ACTION     PVPDocumentState_PlaylistState_LayoutType = 1
	PVPDocumentState_PlaylistState_LAYOUT_TYPE_LIVE_VIDEO PVPDocumentState_PlaylistState_LayoutType = 2
)

// Enum value maps for PVPDocumentState_PlaylistState_LayoutType.
var (
	PVPDocumentState_PlaylistState_LayoutType_name = map[int32]string{
		0: "LAYOUT_TYPE_CUE",
		1: "LAYOUT_TYPE_ACTION",
		2: "LAYOUT_TYPE_LIVE_VIDEO",
	}
	PVPDocumentState_PlaylistState_LayoutType_value = map[string]int32{
		"LAYOUT_TYPE_CUE":        0,
		"LAYOUT_TYPE_ACTION":     1,
		"LAYOUT_TYPE_LIVE_VIDEO": 2,
	}
)

func (x PVPDocumentState_PlaylistState_LayoutType) Enum() *PVPDocumentState_PlaylistState_LayoutType {
	p := new(PVPDocumentState_PlaylistState_LayoutType)
	*p = x
	return p
}

func (x PVPDocumentState_PlaylistState_LayoutType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PVPDocumentState_PlaylistState_LayoutType) Descriptor() protoreflect.EnumDescriptor {
	return file_baseDocument_proto_enumTypes[0].Descriptor()
}

func (PVPDocumentState_PlaylistState_LayoutType) Type() protoreflect.EnumType {
	return &file_baseDocument_proto_enumTypes[0]
}

func (x PVPDocumentState_PlaylistState_LayoutType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PVPDocumentState_PlaylistState_LayoutType.Descriptor instead.
func (PVPDocumentState_PlaylistState_LayoutType) EnumDescriptor() ([]byte, []int) {
	return file_baseDocument_proto_rawDescGZIP(), []int{2, 0, 0}
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationInfo  *ApplicationInfo `protobuf:"bytes,1,opt,name=application_info,json=applicationInfo,proto3" json:"application_info,omitempty"`
	Uuid             *UUID            `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UsesRelativeUrls bool             `protobuf:"varint,3,opt,name=uses_relative_urls,json=usesRelativeUrls,proto3" json:"uses_relative_urls,omitempty"`
	Workspace        *Workspace       `protobuf:"bytes,10,opt,name=workspace,proto3" json:"workspace,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseDocument_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_baseDocument_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_baseDocument_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetApplicationInfo() *ApplicationInfo {
	if x != nil {
		return x.ApplicationInfo
	}
	return nil
}

func (x *Document) GetUuid() *UUID {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Document) GetUsesRelativeUrls() bool {
	if x != nil {
		return x.UsesRelativeUrls
	}
	return false
}

func (x *Document) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

type CacheInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid               *UUID    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ApplicationVersion *Version `protobuf:"bytes,2,opt,name=application_version,json=applicationVersion,proto3" json:"application_version,omitempty"`
	Url                *URL     `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	LastModifiedDate   float64  `protobuf:"fixed64,4,opt,name=last_modified_date,json=lastModifiedDate,proto3" json:"last_modified_date,omitempty"`
}

func (x *CacheInfo) Reset() {
	*x = CacheInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseDocument_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheInfo) ProtoMessage() {}

func (x *CacheInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseDocument_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheInfo.ProtoReflect.Descriptor instead.
func (*CacheInfo) Descriptor() ([]byte, []int) {
	return file_baseDocument_proto_rawDescGZIP(), []int{1}
}

func (x *CacheInfo) GetUuid() *UUID {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *CacheInfo) GetApplicationVersion() *Version {
	if x != nil {
		return x.ApplicationVersion
	}
	return nil
}

func (x *CacheInfo) GetUrl() *URL {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *CacheInfo) GetLastModifiedDate() float64 {
	if x != nil {
		return x.LastModifiedDate
	}
	return 0
}

type PVPDocumentState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryPlaylist          *PVPDocumentState_PlaylistState `protobuf:"bytes,1,opt,name=primary_playlist,json=primaryPlaylist,proto3" json:"primary_playlist,omitempty"`
	AlternatePlaylist        *PVPDocumentState_PlaylistState `protobuf:"bytes,2,opt,name=alternate_playlist,json=alternatePlaylist,proto3" json:"alternate_playlist,omitempty"`
	PlaylistSplitIsVertical  bool                            `protobuf:"varint,3,opt,name=playlist_split_is_vertical,json=playlistSplitIsVertical,proto3" json:"playlist_split_is_vertical,omitempty"`
	TargetedLayer            *UUID                           `protobuf:"bytes,4,opt,name=targeted_layer,json=targetedLayer,proto3" json:"targeted_layer,omitempty"`
	SelectedLayer            *UUID                           `protobuf:"bytes,5,opt,name=selected_layer,json=selectedLayer,proto3" json:"selected_layer,omitempty"`
	LockedLayer              *UUID                           `protobuf:"bytes,6,opt,name=locked_layer,json=lockedLayer,proto3" json:"locked_layer,omitempty"`
	LiveVideoPlaylistScale   float64                         `protobuf:"fixed64,7,opt,name=live_video_playlist_scale,json=liveVideoPlaylistScale,proto3" json:"live_video_playlist_scale,omitempty"`
	SplitViewDividerPosition float64                         `protobuf:"fixed64,8,opt,name=split_view_divider_position,json=splitViewDividerPosition,proto3" json:"split_view_divider_position,omitempty"`
}

func (x *PVPDocumentState) Reset() {
	*x = PVPDocumentState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseDocument_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVPDocumentState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVPDocumentState) ProtoMessage() {}

func (x *PVPDocumentState) ProtoReflect() protoreflect.Message {
	mi := &file_baseDocument_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVPDocumentState.ProtoReflect.Descriptor instead.
func (*PVPDocumentState) Descriptor() ([]byte, []int) {
	return file_baseDocument_proto_rawDescGZIP(), []int{2}
}

func (x *PVPDocumentState) GetPrimaryPlaylist() *PVPDocumentState_PlaylistState {
	if x != nil {
		return x.PrimaryPlaylist
	}
	return nil
}

func (x *PVPDocumentState) GetAlternatePlaylist() *PVPDocumentState_PlaylistState {
	if x != nil {
		return x.AlternatePlaylist
	}
	return nil
}

func (x *PVPDocumentState) GetPlaylistSplitIsVertical() bool {
	if x != nil {
		return x.PlaylistSplitIsVertical
	}
	return false
}

func (x *PVPDocumentState) GetTargetedLayer() *UUID {
	if x != nil {
		return x.TargetedLayer
	}
	return nil
}

func (x *PVPDocumentState) GetSelectedLayer() *UUID {
	if x != nil {
		return x.SelectedLayer
	}
	return nil
}

func (x *PVPDocumentState) GetLockedLayer() *UUID {
	if x != nil {
		return x.LockedLayer
	}
	return nil
}

func (x *PVPDocumentState) GetLiveVideoPlaylistScale() float64 {
	if x != nil {
		return x.LiveVideoPlaylistScale
	}
	return 0
}

func (x *PVPDocumentState) GetSplitViewDividerPosition() float64 {
	if x != nil {
		return x.SplitViewDividerPosition
	}
	return 0
}

type PVPDocumentState_PlaylistState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      *UUID                                     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Layout    PVPDocumentState_PlaylistState_LayoutType `protobuf:"varint,3,opt,name=layout,proto3,enum=rv.data.PVPDocumentState_PlaylistState_LayoutType" json:"layout,omitempty"`
	ItemScale float64                                   `protobuf:"fixed64,4,opt,name=item_scale,json=itemScale,proto3" json:"item_scale,omitempty"`
}

func (x *PVPDocumentState_PlaylistState) Reset() {
	*x = PVPDocumentState_PlaylistState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseDocument_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVPDocumentState_PlaylistState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVPDocumentState_PlaylistState) ProtoMessage() {}

func (x *PVPDocumentState_PlaylistState) ProtoReflect() protoreflect.Message {
	mi := &file_baseDocument_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVPDocumentState_PlaylistState.ProtoReflect.Descriptor instead.
func (*PVPDocumentState_PlaylistState) Descriptor() ([]byte, []int) {
	return file_baseDocument_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PVPDocumentState_PlaylistState) GetUuid() *UUID {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *PVPDocumentState_PlaylistState) GetLayout() PVPDocumentState_PlaylistState_LayoutType {
	if x != nil {
		return x.Layout
	}
	return PVPDocumentState_PlaylistState_LAYOUT_TYPE_CUE
}

func (x *PVPDocumentState_PlaylistState) GetItemScale() float64 {
	if x != nil {
		return x.ItemScale
	}
	return 0
}

var File_baseDocument_proto protoreflect.FileDescriptor

var file_baseDocument_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x61, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd2, 0x01, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x73, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x55,
	0x72, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x55, 0x52, 0x4c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x8a, 0x06, 0x0a, 0x10, 0x50, 0x56, 0x50, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x10,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x50, 0x56, 0x50, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x56, 0x0a, 0x12, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x56, 0x50, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x11, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x73, 0x56, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0e, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x6c, 0x69, 0x76, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x3d,
	0x0a, 0x1b, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x18, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x56, 0x69, 0x65, 0x77, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xf4, 0x01,
	0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x4a, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x56, 0x50,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x55, 0x0a,
	0x0a, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4c,
	0x41, 0x59, 0x4f, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x45, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x41, 0x59, 0x4f,
	0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x56, 0x49, 0x44,
	0x45, 0x4f, 0x10, 0x02, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_baseDocument_proto_rawDescOnce sync.Once
	file_baseDocument_proto_rawDescData = file_baseDocument_proto_rawDesc
)

func file_baseDocument_proto_rawDescGZIP() []byte {
	file_baseDocument_proto_rawDescOnce.Do(func() {
		file_baseDocument_proto_rawDescData = protoimpl.X.CompressGZIP(file_baseDocument_proto_rawDescData)
	})
	return file_baseDocument_proto_rawDescData
}

var file_baseDocument_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_baseDocument_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_baseDocument_proto_goTypes = []interface{}{
	(PVPDocumentState_PlaylistState_LayoutType)(0), // 0: rv.data.PVPDocumentState.PlaylistState.LayoutType
	(*Document)(nil),                       // 1: rv.data.Document
	(*CacheInfo)(nil),                      // 2: rv.data.CacheInfo
	(*PVPDocumentState)(nil),               // 3: rv.data.PVPDocumentState
	(*PVPDocumentState_PlaylistState)(nil), // 4: rv.data.PVPDocumentState.PlaylistState
	(*ApplicationInfo)(nil),                // 5: rv.data.ApplicationInfo
	(*UUID)(nil),                           // 6: rv.data.UUID
	(*Workspace)(nil),                      // 7: rv.data.Workspace
	(*Version)(nil),                        // 8: rv.data.Version
	(*URL)(nil),                            // 9: rv.data.URL
}
var file_baseDocument_proto_depIdxs = []int32{
	5,  // 0: rv.data.Document.application_info:type_name -> rv.data.ApplicationInfo
	6,  // 1: rv.data.Document.uuid:type_name -> rv.data.UUID
	7,  // 2: rv.data.Document.workspace:type_name -> rv.data.Workspace
	6,  // 3: rv.data.CacheInfo.uuid:type_name -> rv.data.UUID
	8,  // 4: rv.data.CacheInfo.application_version:type_name -> rv.data.Version
	9,  // 5: rv.data.CacheInfo.url:type_name -> rv.data.URL
	4,  // 6: rv.data.PVPDocumentState.primary_playlist:type_name -> rv.data.PVPDocumentState.PlaylistState
	4,  // 7: rv.data.PVPDocumentState.alternate_playlist:type_name -> rv.data.PVPDocumentState.PlaylistState
	6,  // 8: rv.data.PVPDocumentState.targeted_layer:type_name -> rv.data.UUID
	6,  // 9: rv.data.PVPDocumentState.selected_layer:type_name -> rv.data.UUID
	6,  // 10: rv.data.PVPDocumentState.locked_layer:type_name -> rv.data.UUID
	6,  // 11: rv.data.PVPDocumentState.PlaylistState.uuid:type_name -> rv.data.UUID
	0,  // 12: rv.data.PVPDocumentState.PlaylistState.layout:type_name -> rv.data.PVPDocumentState.PlaylistState.LayoutType
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_baseDocument_proto_init() }
func file_baseDocument_proto_init() {
	if File_baseDocument_proto != nil {
		return
	}
	file_workspace_proto_init()
	file_basicTypes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_baseDocument_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseDocument_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseDocument_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVPDocumentState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseDocument_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVPDocumentState_PlaylistState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_baseDocument_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_baseDocument_proto_goTypes,
		DependencyIndexes: file_baseDocument_proto_depIdxs,
		EnumInfos:         file_baseDocument_proto_enumTypes,
		MessageInfos:      file_baseDocument_proto_msgTypes,
	}.Build()
	File_baseDocument_proto = out.File
	file_baseDocument_proto_rawDesc = nil
	file_baseDocument_proto_goTypes = nil
	file_baseDocument_proto_depIdxs = nil
}
