// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: ccli.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CCLIDocument_DisplayType int32

const (
	CCLIDocument_DISPLAY_TYPE_FIRST_SLIDE          CCLIDocument_DisplayType = 0
	CCLIDocument_DISPLAY_TYPE_LAST_SLIDE           CCLIDocument_DisplayType = 1
	CCLIDocument_DISPLAY_TYPE_FIRST_AND_LAST_SLIDE CCLIDocument_DisplayType = 2
	CCLIDocument_DISPLAY_TYPE_ALL_SLIDES           CCLIDocument_DisplayType = 3
)

// Enum value maps for CCLIDocument_DisplayType.
var (
	CCLIDocument_DisplayType_name = map[int32]string{
		0: "DISPLAY_TYPE_FIRST_SLIDE",
		1: "DISPLAY_TYPE_LAST_SLIDE",
		2: "DISPLAY_TYPE_FIRST_AND_LAST_SLIDE",
		3: "DISPLAY_TYPE_ALL_SLIDES",
	}
	CCLIDocument_DisplayType_value = map[string]int32{
		"DISPLAY_TYPE_FIRST_SLIDE":          0,
		"DISPLAY_TYPE_LAST_SLIDE":           1,
		"DISPLAY_TYPE_FIRST_AND_LAST_SLIDE": 2,
		"DISPLAY_TYPE_ALL_SLIDES":           3,
	}
)

func (x CCLIDocument_DisplayType) Enum() *CCLIDocument_DisplayType {
	p := new(CCLIDocument_DisplayType)
	*p = x
	return p
}

func (x CCLIDocument_DisplayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CCLIDocument_DisplayType) Descriptor() protoreflect.EnumDescriptor {
	return file_ccli_proto_enumTypes[0].Descriptor()
}

func (CCLIDocument_DisplayType) Type() protoreflect.EnumType {
	return &file_ccli_proto_enumTypes[0]
}

func (x CCLIDocument_DisplayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CCLIDocument_DisplayType.Descriptor instead.
func (CCLIDocument_DisplayType) EnumDescriptor() ([]byte, []int) {
	return file_ccli_proto_rawDescGZIP(), []int{0, 0}
}

type CCLIDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationInfo   *ApplicationInfo         `protobuf:"bytes,1,opt,name=application_info,json=applicationInfo,proto3" json:"application_info,omitempty"`
	EnableCcliDisplay bool                     `protobuf:"varint,2,opt,name=enable_ccli_display,json=enableCcliDisplay,proto3" json:"enable_ccli_display,omitempty"`
	CcliLicense       string                   `protobuf:"bytes,3,opt,name=ccli_license,json=ccliLicense,proto3" json:"ccli_license,omitempty"`
	DisplayType       CCLIDocument_DisplayType `protobuf:"varint,4,opt,name=display_type,json=displayType,proto3,enum=rv.data.CCLIDocument_DisplayType" json:"display_type,omitempty"`
	Template          *Template_Slide          `protobuf:"bytes,5,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *CCLIDocument) Reset() {
	*x = CCLIDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ccli_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCLIDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLIDocument) ProtoMessage() {}

func (x *CCLIDocument) ProtoReflect() protoreflect.Message {
	mi := &file_ccli_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLIDocument.ProtoReflect.Descriptor instead.
func (*CCLIDocument) Descriptor() ([]byte, []int) {
	return file_ccli_proto_rawDescGZIP(), []int{0}
}

func (x *CCLIDocument) GetApplicationInfo() *ApplicationInfo {
	if x != nil {
		return x.ApplicationInfo
	}
	return nil
}

func (x *CCLIDocument) GetEnableCcliDisplay() bool {
	if x != nil {
		return x.EnableCcliDisplay
	}
	return false
}

func (x *CCLIDocument) GetCcliLicense() string {
	if x != nil {
		return x.CcliLicense
	}
	return ""
}

func (x *CCLIDocument) GetDisplayType() CCLIDocument_DisplayType {
	if x != nil {
		return x.DisplayType
	}
	return CCLIDocument_DISPLAY_TYPE_FIRST_SLIDE
}

func (x *CCLIDocument) GetTemplate() *Template_Slide {
	if x != nil {
		return x.Template
	}
	return nil
}

var File_ccli_proto protoreflect.FileDescriptor

var file_ccli_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x63, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x76,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x03, 0x0a, 0x0c, 0x43, 0x43, 0x4c, 0x49,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a,
	0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x63, 0x6c, 0x69, 0x5f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x63, 0x6c, 0x69, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x63, 0x6c, 0x69, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x63, 0x6c, 0x69, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x43, 0x4c, 0x49, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x6c, 0x69, 0x64,
	0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x0b,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x44,
	0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53,
	0x54, 0x5f, 0x53, 0x4c, 0x49, 0x44, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x49, 0x53,
	0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x53,
	0x4c, 0x49, 0x44, 0x45, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x41, 0x4e, 0x44,
	0x5f, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x4c, 0x49, 0x44, 0x45, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c,
	0x4c, 0x5f, 0x53, 0x4c, 0x49, 0x44, 0x45, 0x53, 0x10, 0x03, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ccli_proto_rawDescOnce sync.Once
	file_ccli_proto_rawDescData = file_ccli_proto_rawDesc
)

func file_ccli_proto_rawDescGZIP() []byte {
	file_ccli_proto_rawDescOnce.Do(func() {
		file_ccli_proto_rawDescData = protoimpl.X.CompressGZIP(file_ccli_proto_rawDescData)
	})
	return file_ccli_proto_rawDescData
}

var file_ccli_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ccli_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ccli_proto_goTypes = []interface{}{
	(CCLIDocument_DisplayType)(0), // 0: rv.data.CCLIDocument.DisplayType
	(*CCLIDocument)(nil),          // 1: rv.data.CCLIDocument
	(*ApplicationInfo)(nil),       // 2: rv.data.ApplicationInfo
	(*Template_Slide)(nil),        // 3: rv.data.Template.Slide
}
var file_ccli_proto_depIdxs = []int32{
	2, // 0: rv.data.CCLIDocument.application_info:type_name -> rv.data.ApplicationInfo
	0, // 1: rv.data.CCLIDocument.display_type:type_name -> rv.data.CCLIDocument.DisplayType
	3, // 2: rv.data.CCLIDocument.template:type_name -> rv.data.Template.Slide
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ccli_proto_init() }
func file_ccli_proto_init() {
	if File_ccli_proto != nil {
		return
	}
	file_basicTypes_proto_init()
	file_template_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ccli_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCLIDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ccli_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ccli_proto_goTypes,
		DependencyIndexes: file_ccli_proto_depIdxs,
		EnumInfos:         file_ccli_proto_enumTypes,
		MessageInfos:      file_ccli_proto_msgTypes,
	}.Build()
	File_ccli_proto = out.File
	file_ccli_proto_rawDesc = nil
	file_ccli_proto_goTypes = nil
	file_ccli_proto_depIdxs = nil
}
