// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: proCore.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MediaMetadataRequestInfo_NativeRotationType int32

const (
	MediaMetadataRequestInfo_NATIVE_ROTATION_TYPE_ROTATE_STANDARD MediaMetadataRequestInfo_NativeRotationType = 0
	MediaMetadataRequestInfo_NATIVE_ROTATION_TYPE_ROTATE_90       MediaMetadataRequestInfo_NativeRotationType = 90
	MediaMetadataRequestInfo_NATIVE_ROTATION_TYPE_ROTATE_180      MediaMetadataRequestInfo_NativeRotationType = 180
	MediaMetadataRequestInfo_NATIVE_ROTATION_TYPE_ROTATE_270      MediaMetadataRequestInfo_NativeRotationType = 270
)

// Enum value maps for MediaMetadataRequestInfo_NativeRotationType.
var (
	MediaMetadataRequestInfo_NativeRotationType_name = map[int32]string{
		0:   "NATIVE_ROTATION_TYPE_ROTATE_STANDARD",
		90:  "NATIVE_ROTATION_TYPE_ROTATE_90",
		180: "NATIVE_ROTATION_TYPE_ROTATE_180",
		270: "NATIVE_ROTATION_TYPE_ROTATE_270",
	}
	MediaMetadataRequestInfo_NativeRotationType_value = map[string]int32{
		"NATIVE_ROTATION_TYPE_ROTATE_STANDARD": 0,
		"NATIVE_ROTATION_TYPE_ROTATE_90":       90,
		"NATIVE_ROTATION_TYPE_ROTATE_180":      180,
		"NATIVE_ROTATION_TYPE_ROTATE_270":      270,
	}
)

func (x MediaMetadataRequestInfo_NativeRotationType) Enum() *MediaMetadataRequestInfo_NativeRotationType {
	p := new(MediaMetadataRequestInfo_NativeRotationType)
	*p = x
	return p
}

func (x MediaMetadataRequestInfo_NativeRotationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaMetadataRequestInfo_NativeRotationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proCore_proto_enumTypes[0].Descriptor()
}

func (MediaMetadataRequestInfo_NativeRotationType) Type() protoreflect.EnumType {
	return &file_proCore_proto_enumTypes[0]
}

func (x MediaMetadataRequestInfo_NativeRotationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaMetadataRequestInfo_NativeRotationType.Descriptor instead.
func (MediaMetadataRequestInfo_NativeRotationType) EnumDescriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{0, 0}
}

type MediaMetadataRequestResponse_Metadata_ContentType int32

const (
	MediaMetadataRequestResponse_Metadata_CONTENT_TYPE_UNKNOWN MediaMetadataRequestResponse_Metadata_ContentType = 0
	MediaMetadataRequestResponse_Metadata_CONTENT_TYPE_AUDIO   MediaMetadataRequestResponse_Metadata_ContentType = 1
	MediaMetadataRequestResponse_Metadata_CONTENT_TYPE_IMAGE   MediaMetadataRequestResponse_Metadata_ContentType = 2
	MediaMetadataRequestResponse_Metadata_CONTENT_TYPE_VIDEO   MediaMetadataRequestResponse_Metadata_ContentType = 3
)

// Enum value maps for MediaMetadataRequestResponse_Metadata_ContentType.
var (
	MediaMetadataRequestResponse_Metadata_ContentType_name = map[int32]string{
		0: "CONTENT_TYPE_UNKNOWN",
		1: "CONTENT_TYPE_AUDIO",
		2: "CONTENT_TYPE_IMAGE",
		3: "CONTENT_TYPE_VIDEO",
	}
	MediaMetadataRequestResponse_Metadata_ContentType_value = map[string]int32{
		"CONTENT_TYPE_UNKNOWN": 0,
		"CONTENT_TYPE_AUDIO":   1,
		"CONTENT_TYPE_IMAGE":   2,
		"CONTENT_TYPE_VIDEO":   3,
	}
)

func (x MediaMetadataRequestResponse_Metadata_ContentType) Enum() *MediaMetadataRequestResponse_Metadata_ContentType {
	p := new(MediaMetadataRequestResponse_Metadata_ContentType)
	*p = x
	return p
}

func (x MediaMetadataRequestResponse_Metadata_ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaMetadataRequestResponse_Metadata_ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proCore_proto_enumTypes[1].Descriptor()
}

func (MediaMetadataRequestResponse_Metadata_ContentType) Type() protoreflect.EnumType {
	return &file_proCore_proto_enumTypes[1]
}

func (x MediaMetadataRequestResponse_Metadata_ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaMetadataRequestResponse_Metadata_ContentType.Descriptor instead.
func (MediaMetadataRequestResponse_Metadata_ContentType) EnumDescriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{1, 0, 0}
}

type TriggerOptions_ContentDestination int32

const (
	TriggerOptions_CONTENT_DESTINATION_GLOBAL        TriggerOptions_ContentDestination = 0
	TriggerOptions_CONTENT_DESTINATION_ANNOUNCEMENTS TriggerOptions_ContentDestination = 1
)

// Enum value maps for TriggerOptions_ContentDestination.
var (
	TriggerOptions_ContentDestination_name = map[int32]string{
		0: "CONTENT_DESTINATION_GLOBAL",
		1: "CONTENT_DESTINATION_ANNOUNCEMENTS",
	}
	TriggerOptions_ContentDestination_value = map[string]int32{
		"CONTENT_DESTINATION_GLOBAL":        0,
		"CONTENT_DESTINATION_ANNOUNCEMENTS": 1,
	}
)

func (x TriggerOptions_ContentDestination) Enum() *TriggerOptions_ContentDestination {
	p := new(TriggerOptions_ContentDestination)
	*p = x
	return p
}

func (x TriggerOptions_ContentDestination) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerOptions_ContentDestination) Descriptor() protoreflect.EnumDescriptor {
	return file_proCore_proto_enumTypes[2].Descriptor()
}

func (TriggerOptions_ContentDestination) Type() protoreflect.EnumType {
	return &file_proCore_proto_enumTypes[2]
}

func (x TriggerOptions_ContentDestination) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerOptions_ContentDestination.Descriptor instead.
func (TriggerOptions_ContentDestination) EnumDescriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{2, 0}
}

type ControlTransport_SetScaleModeControlType_ScaleBehavior int32

const (
	ControlTransport_SetScaleModeControlType_SCALE_BEHAVIOR_FIT     ControlTransport_SetScaleModeControlType_ScaleBehavior = 0
	ControlTransport_SetScaleModeControlType_SCALE_BEHAVIOR_FILL    ControlTransport_SetScaleModeControlType_ScaleBehavior = 1
	ControlTransport_SetScaleModeControlType_SCALE_BEHAVIOR_STRETCH ControlTransport_SetScaleModeControlType_ScaleBehavior = 2
	ControlTransport_SetScaleModeControlType_SCALE_BEHAVIOR_CUSTOM  ControlTransport_SetScaleModeControlType_ScaleBehavior = 3
)

// Enum value maps for ControlTransport_SetScaleModeControlType_ScaleBehavior.
var (
	ControlTransport_SetScaleModeControlType_ScaleBehavior_name = map[int32]string{
		0: "SCALE_BEHAVIOR_FIT",
		1: "SCALE_BEHAVIOR_FILL",
		2: "SCALE_BEHAVIOR_STRETCH",
		3: "SCALE_BEHAVIOR_CUSTOM",
	}
	ControlTransport_SetScaleModeControlType_ScaleBehavior_value = map[string]int32{
		"SCALE_BEHAVIOR_FIT":     0,
		"SCALE_BEHAVIOR_FILL":    1,
		"SCALE_BEHAVIOR_STRETCH": 2,
		"SCALE_BEHAVIOR_CUSTOM":  3,
	}
)

func (x ControlTransport_SetScaleModeControlType_ScaleBehavior) Enum() *ControlTransport_SetScaleModeControlType_ScaleBehavior {
	p := new(ControlTransport_SetScaleModeControlType_ScaleBehavior)
	*p = x
	return p
}

func (x ControlTransport_SetScaleModeControlType_ScaleBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlTransport_SetScaleModeControlType_ScaleBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_proCore_proto_enumTypes[3].Descriptor()
}

func (ControlTransport_SetScaleModeControlType_ScaleBehavior) Type() protoreflect.EnumType {
	return &file_proCore_proto_enumTypes[3]
}

func (x ControlTransport_SetScaleModeControlType_ScaleBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlTransport_SetScaleModeControlType_ScaleBehavior.Descriptor instead.
func (ControlTransport_SetScaleModeControlType_ScaleBehavior) EnumDescriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 14, 0}
}

type ControlTransport_SetScaleModeControlType_ScaleAlignment int32

const (
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_MIDDLE_CENTER ControlTransport_SetScaleModeControlType_ScaleAlignment = 0
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_TOP_LEFT      ControlTransport_SetScaleModeControlType_ScaleAlignment = 1
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_TOP_CENTER    ControlTransport_SetScaleModeControlType_ScaleAlignment = 2
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_TOP_RIGHT     ControlTransport_SetScaleModeControlType_ScaleAlignment = 3
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_MIDDLE_RIGHT  ControlTransport_SetScaleModeControlType_ScaleAlignment = 4
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_BOTTOM_RIGHT  ControlTransport_SetScaleModeControlType_ScaleAlignment = 5
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_BOTTOM_CENTER ControlTransport_SetScaleModeControlType_ScaleAlignment = 6
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_BOTTOM_LEFT   ControlTransport_SetScaleModeControlType_ScaleAlignment = 7
	ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_MIDDLE_LEFT   ControlTransport_SetScaleModeControlType_ScaleAlignment = 8
)

// Enum value maps for ControlTransport_SetScaleModeControlType_ScaleAlignment.
var (
	ControlTransport_SetScaleModeControlType_ScaleAlignment_name = map[int32]string{
		0: "SCALE_ALIGNMENT_MIDDLE_CENTER",
		1: "SCALE_ALIGNMENT_TOP_LEFT",
		2: "SCALE_ALIGNMENT_TOP_CENTER",
		3: "SCALE_ALIGNMENT_TOP_RIGHT",
		4: "SCALE_ALIGNMENT_MIDDLE_RIGHT",
		5: "SCALE_ALIGNMENT_BOTTOM_RIGHT",
		6: "SCALE_ALIGNMENT_BOTTOM_CENTER",
		7: "SCALE_ALIGNMENT_BOTTOM_LEFT",
		8: "SCALE_ALIGNMENT_MIDDLE_LEFT",
	}
	ControlTransport_SetScaleModeControlType_ScaleAlignment_value = map[string]int32{
		"SCALE_ALIGNMENT_MIDDLE_CENTER": 0,
		"SCALE_ALIGNMENT_TOP_LEFT":      1,
		"SCALE_ALIGNMENT_TOP_CENTER":    2,
		"SCALE_ALIGNMENT_TOP_RIGHT":     3,
		"SCALE_ALIGNMENT_MIDDLE_RIGHT":  4,
		"SCALE_ALIGNMENT_BOTTOM_RIGHT":  5,
		"SCALE_ALIGNMENT_BOTTOM_CENTER": 6,
		"SCALE_ALIGNMENT_BOTTOM_LEFT":   7,
		"SCALE_ALIGNMENT_MIDDLE_LEFT":   8,
	}
)

func (x ControlTransport_SetScaleModeControlType_ScaleAlignment) Enum() *ControlTransport_SetScaleModeControlType_ScaleAlignment {
	p := new(ControlTransport_SetScaleModeControlType_ScaleAlignment)
	*p = x
	return p
}

func (x ControlTransport_SetScaleModeControlType_ScaleAlignment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlTransport_SetScaleModeControlType_ScaleAlignment) Descriptor() protoreflect.EnumDescriptor {
	return file_proCore_proto_enumTypes[4].Descriptor()
}

func (ControlTransport_SetScaleModeControlType_ScaleAlignment) Type() protoreflect.EnumType {
	return &file_proCore_proto_enumTypes[4]
}

func (x ControlTransport_SetScaleModeControlType_ScaleAlignment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlTransport_SetScaleModeControlType_ScaleAlignment.Descriptor instead.
func (ControlTransport_SetScaleModeControlType_ScaleAlignment) EnumDescriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 14, 1}
}

type ControlTransport_SetNativeRotationControlType_NativeRotationType int32

const (
	ControlTransport_SetNativeRotationControlType_NATIVE_ROTATION_TYPE_ROTATE_STANDARD ControlTransport_SetNativeRotationControlType_NativeRotationType = 0
	ControlTransport_SetNativeRotationControlType_NATIVE_ROTATION_TYPE_ROTATE_90       ControlTransport_SetNativeRotationControlType_NativeRotationType = 90
	ControlTransport_SetNativeRotationControlType_NATIVE_ROTATION_TYPE_ROTATE_180      ControlTransport_SetNativeRotationControlType_NativeRotationType = 180
	ControlTransport_SetNativeRotationControlType_NATIVE_ROTATION_TYPE_ROTATE_270      ControlTransport_SetNativeRotationControlType_NativeRotationType = 270
)

// Enum value maps for ControlTransport_SetNativeRotationControlType_NativeRotationType.
var (
	ControlTransport_SetNativeRotationControlType_NativeRotationType_name = map[int32]string{
		0:   "NATIVE_ROTATION_TYPE_ROTATE_STANDARD",
		90:  "NATIVE_ROTATION_TYPE_ROTATE_90",
		180: "NATIVE_ROTATION_TYPE_ROTATE_180",
		270: "NATIVE_ROTATION_TYPE_ROTATE_270",
	}
	ControlTransport_SetNativeRotationControlType_NativeRotationType_value = map[string]int32{
		"NATIVE_ROTATION_TYPE_ROTATE_STANDARD": 0,
		"NATIVE_ROTATION_TYPE_ROTATE_90":       90,
		"NATIVE_ROTATION_TYPE_ROTATE_180":      180,
		"NATIVE_ROTATION_TYPE_ROTATE_270":      270,
	}
)

func (x ControlTransport_SetNativeRotationControlType_NativeRotationType) Enum() *ControlTransport_SetNativeRotationControlType_NativeRotationType {
	p := new(ControlTransport_SetNativeRotationControlType_NativeRotationType)
	*p = x
	return p
}

func (x ControlTransport_SetNativeRotationControlType_NativeRotationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlTransport_SetNativeRotationControlType_NativeRotationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proCore_proto_enumTypes[5].Descriptor()
}

func (ControlTransport_SetNativeRotationControlType_NativeRotationType) Type() protoreflect.EnumType {
	return &file_proCore_proto_enumTypes[5]
}

func (x ControlTransport_SetNativeRotationControlType_NativeRotationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlTransport_SetNativeRotationControlType_NativeRotationType.Descriptor instead.
func (ControlTransport_SetNativeRotationControlType_NativeRotationType) EnumDescriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 17, 0}
}

type ProClockSource_Type int32

const (
	ProClockSource_TYPE_UNKOWN ProClockSource_Type = 0
	ProClockSource_TYPE_INPUT  ProClockSource_Type = 1
	ProClockSource_TYPE_OUTPUT ProClockSource_Type = 2
)

// Enum value maps for ProClockSource_Type.
var (
	ProClockSource_Type_name = map[int32]string{
		0: "TYPE_UNKOWN",
		1: "TYPE_INPUT",
		2: "TYPE_OUTPUT",
	}
	ProClockSource_Type_value = map[string]int32{
		"TYPE_UNKOWN": 0,
		"TYPE_INPUT":  1,
		"TYPE_OUTPUT": 2,
	}
)

func (x ProClockSource_Type) Enum() *ProClockSource_Type {
	p := new(ProClockSource_Type)
	*p = x
	return p
}

func (x ProClockSource_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProClockSource_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proCore_proto_enumTypes[6].Descriptor()
}

func (ProClockSource_Type) Type() protoreflect.EnumType {
	return &file_proCore_proto_enumTypes[6]
}

func (x ProClockSource_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProClockSource_Type.Descriptor instead.
func (ProClockSource_Type) EnumDescriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{8, 0}
}

type MediaMetadataRequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath            string                                      `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Time                float32                                     `protobuf:"fixed32,2,opt,name=time,proto3" json:"time,omitempty"`
	Width               uint32                                      `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height              uint32                                      `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Effects             []*Effect                                   `protobuf:"bytes,5,rep,name=effects,proto3" json:"effects,omitempty"`
	CropInsets          *Graphics_EdgeInsets                        `protobuf:"bytes,6,opt,name=crop_insets,json=cropInsets,proto3" json:"crop_insets,omitempty"`
	NativeRotation      MediaMetadataRequestInfo_NativeRotationType `protobuf:"varint,7,opt,name=native_rotation,json=nativeRotation,proto3,enum=rv.data.MediaMetadataRequestInfo_NativeRotationType" json:"native_rotation,omitempty"`
	FlippedHorizontally bool                                        `protobuf:"varint,8,opt,name=flipped_horizontally,json=flippedHorizontally,proto3" json:"flipped_horizontally,omitempty"`
	FlippedVertically   bool                                        `protobuf:"varint,9,opt,name=flipped_vertically,json=flippedVertically,proto3" json:"flipped_vertically,omitempty"`
}

func (x *MediaMetadataRequestInfo) Reset() {
	*x = MediaMetadataRequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaMetadataRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadataRequestInfo) ProtoMessage() {}

func (x *MediaMetadataRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadataRequestInfo.ProtoReflect.Descriptor instead.
func (*MediaMetadataRequestInfo) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{0}
}

func (x *MediaMetadataRequestInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *MediaMetadataRequestInfo) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MediaMetadataRequestInfo) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MediaMetadataRequestInfo) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MediaMetadataRequestInfo) GetEffects() []*Effect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *MediaMetadataRequestInfo) GetCropInsets() *Graphics_EdgeInsets {
	if x != nil {
		return x.CropInsets
	}
	return nil
}

func (x *MediaMetadataRequestInfo) GetNativeRotation() MediaMetadataRequestInfo_NativeRotationType {
	if x != nil {
		return x.NativeRotation
	}
	return MediaMetadataRequestInfo_NATIVE_ROTATION_TYPE_ROTATE_STANDARD
}

func (x *MediaMetadataRequestInfo) GetFlippedHorizontally() bool {
	if x != nil {
		return x.FlippedHorizontally
	}
	return false
}

func (x *MediaMetadataRequestInfo) GetFlippedVertically() bool {
	if x != nil {
		return x.FlippedVertically
	}
	return false
}

type MediaMetadataRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata            *MediaMetadataRequestResponse_Metadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	GeneratedBitmapInfo *MediaMetadataRequestResponse_BitmapInfo `protobuf:"bytes,2,opt,name=generated_bitmap_info,json=generatedBitmapInfo,proto3" json:"generated_bitmap_info,omitempty"`
}

func (x *MediaMetadataRequestResponse) Reset() {
	*x = MediaMetadataRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaMetadataRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadataRequestResponse) ProtoMessage() {}

func (x *MediaMetadataRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadataRequestResponse.ProtoReflect.Descriptor instead.
func (*MediaMetadataRequestResponse) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{1}
}

func (x *MediaMetadataRequestResponse) GetMetadata() *MediaMetadataRequestResponse_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MediaMetadataRequestResponse) GetGeneratedBitmapInfo() *MediaMetadataRequestResponse_BitmapInfo {
	if x != nil {
		return x.GeneratedBitmapInfo
	}
	return nil
}

type TriggerOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentDestination      TriggerOptions_ContentDestination `protobuf:"varint,1,opt,name=content_destination,json=contentDestination,proto3,enum=rv.data.TriggerOptions_ContentDestination" json:"content_destination,omitempty"`
	SuppressAutoStartVideo  bool                              `protobuf:"varint,2,opt,name=suppressAutoStartVideo,proto3" json:"suppressAutoStartVideo,omitempty"`
	SuppressMediaBackground bool                              `protobuf:"varint,3,opt,name=suppressMediaBackground,proto3" json:"suppressMediaBackground,omitempty"`
	ForceRetrigger          bool                              `protobuf:"varint,4,opt,name=forceRetrigger,proto3" json:"forceRetrigger,omitempty"`
	ResetChordChart         bool                              `protobuf:"varint,5,opt,name=resetChordChart,proto3" json:"resetChordChart,omitempty"`
	FromPlaylistLibrary     bool                              `protobuf:"varint,6,opt,name=fromPlaylistLibrary,proto3" json:"fromPlaylistLibrary,omitempty"`
	FromTimeline            bool                              `protobuf:"varint,7,opt,name=fromTimeline,proto3" json:"fromTimeline,omitempty"`
	IgnoreAnalytics         bool                              `protobuf:"varint,8,opt,name=ignore_analytics,json=ignoreAnalytics,proto3" json:"ignore_analytics,omitempty"`
}

func (x *TriggerOptions) Reset() {
	*x = TriggerOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerOptions) ProtoMessage() {}

func (x *TriggerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerOptions.ProtoReflect.Descriptor instead.
func (*TriggerOptions) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{2}
}

func (x *TriggerOptions) GetContentDestination() TriggerOptions_ContentDestination {
	if x != nil {
		return x.ContentDestination
	}
	return TriggerOptions_CONTENT_DESTINATION_GLOBAL
}

func (x *TriggerOptions) GetSuppressAutoStartVideo() bool {
	if x != nil {
		return x.SuppressAutoStartVideo
	}
	return false
}

func (x *TriggerOptions) GetSuppressMediaBackground() bool {
	if x != nil {
		return x.SuppressMediaBackground
	}
	return false
}

func (x *TriggerOptions) GetForceRetrigger() bool {
	if x != nil {
		return x.ForceRetrigger
	}
	return false
}

func (x *TriggerOptions) GetResetChordChart() bool {
	if x != nil {
		return x.ResetChordChart
	}
	return false
}

func (x *TriggerOptions) GetFromPlaylistLibrary() bool {
	if x != nil {
		return x.FromPlaylistLibrary
	}
	return false
}

func (x *TriggerOptions) GetFromTimeline() bool {
	if x != nil {
		return x.FromTimeline
	}
	return false
}

func (x *TriggerOptions) GetIgnoreAnalytics() bool {
	if x != nil {
		return x.IgnoreAnalytics
	}
	return false
}

type ControlTransport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ControlType:
	//	*ControlTransport_Play
	//	*ControlTransport_Pause
	//	*ControlTransport_Rewind
	//	*ControlTransport_Fastforward
	//	*ControlTransport_SkipBack
	//	*ControlTransport_SkipForward
	//	*ControlTransport_StepBack
	//	*ControlTransport_StepForward
	//	*ControlTransport_GoToStart
	//	*ControlTransport_GoToEnd
	//	*ControlTransport_JumpToTime
	//	*ControlTransport_JumpToPercent
	//	*ControlTransport_MarkIn
	//	*ControlTransport_MarkOut
	//	*ControlTransport_SetScaleMode
	//	*ControlTransport_SetFlippedMode
	//	*ControlTransport_SetPlayRate
	//	*ControlTransport_SetRotation
	//	*ControlTransport_TogglePlayback
	//	*ControlTransport_SetEffects
	//	*ControlTransport_UpdateEffect
	//	*ControlTransport_BeginScrub
	//	*ControlTransport_EndScrub
	//	*ControlTransport_ScrubToTime
	//	*ControlTransport_ScrubToPercent
	//	*ControlTransport_SetAudioFade
	//	*ControlTransport_SetAudioProperties
	ControlType isControlTransport_ControlType `protobuf_oneof:"ControlType"`
}

func (x *ControlTransport) Reset() {
	*x = ControlTransport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport) ProtoMessage() {}

func (x *ControlTransport) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport.ProtoReflect.Descriptor instead.
func (*ControlTransport) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3}
}

func (m *ControlTransport) GetControlType() isControlTransport_ControlType {
	if m != nil {
		return m.ControlType
	}
	return nil
}

func (x *ControlTransport) GetPlay() *ControlTransport_PlayControlType {
	if x, ok := x.GetControlType().(*ControlTransport_Play); ok {
		return x.Play
	}
	return nil
}

func (x *ControlTransport) GetPause() *ControlTransport_PauseControlType {
	if x, ok := x.GetControlType().(*ControlTransport_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *ControlTransport) GetRewind() *ControlTransport_RewindControlType {
	if x, ok := x.GetControlType().(*ControlTransport_Rewind); ok {
		return x.Rewind
	}
	return nil
}

func (x *ControlTransport) GetFastforward() *ControlTransport_FastForwardControlType {
	if x, ok := x.GetControlType().(*ControlTransport_Fastforward); ok {
		return x.Fastforward
	}
	return nil
}

func (x *ControlTransport) GetSkipBack() *ControlTransport_SkipBackControlType {
	if x, ok := x.GetControlType().(*ControlTransport_SkipBack); ok {
		return x.SkipBack
	}
	return nil
}

func (x *ControlTransport) GetSkipForward() *ControlTransport_SkipForwardControlType {
	if x, ok := x.GetControlType().(*ControlTransport_SkipForward); ok {
		return x.SkipForward
	}
	return nil
}

func (x *ControlTransport) GetStepBack() *ControlTransport_StepBackControlType {
	if x, ok := x.GetControlType().(*ControlTransport_StepBack); ok {
		return x.StepBack
	}
	return nil
}

func (x *ControlTransport) GetStepForward() *ControlTransport_StepForwardControlType {
	if x, ok := x.GetControlType().(*ControlTransport_StepForward); ok {
		return x.StepForward
	}
	return nil
}

func (x *ControlTransport) GetGoToStart() *ControlTransport_GoToStartControlType {
	if x, ok := x.GetControlType().(*ControlTransport_GoToStart); ok {
		return x.GoToStart
	}
	return nil
}

func (x *ControlTransport) GetGoToEnd() *ControlTransport_GoToEndControlType {
	if x, ok := x.GetControlType().(*ControlTransport_GoToEnd); ok {
		return x.GoToEnd
	}
	return nil
}

func (x *ControlTransport) GetJumpToTime() *ControlTransport_JumpToTimeControlType {
	if x, ok := x.GetControlType().(*ControlTransport_JumpToTime); ok {
		return x.JumpToTime
	}
	return nil
}

func (x *ControlTransport) GetJumpToPercent() *ControlTransport_JumpToPercentControlType {
	if x, ok := x.GetControlType().(*ControlTransport_JumpToPercent); ok {
		return x.JumpToPercent
	}
	return nil
}

func (x *ControlTransport) GetMarkIn() *ControlTransport_MarkInPointControlType {
	if x, ok := x.GetControlType().(*ControlTransport_MarkIn); ok {
		return x.MarkIn
	}
	return nil
}

func (x *ControlTransport) GetMarkOut() *ControlTransport_MarkOutPointControlType {
	if x, ok := x.GetControlType().(*ControlTransport_MarkOut); ok {
		return x.MarkOut
	}
	return nil
}

func (x *ControlTransport) GetSetScaleMode() *ControlTransport_SetScaleModeControlType {
	if x, ok := x.GetControlType().(*ControlTransport_SetScaleMode); ok {
		return x.SetScaleMode
	}
	return nil
}

func (x *ControlTransport) GetSetFlippedMode() *ControlTransport_SetFlippedModeControlType {
	if x, ok := x.GetControlType().(*ControlTransport_SetFlippedMode); ok {
		return x.SetFlippedMode
	}
	return nil
}

func (x *ControlTransport) GetSetPlayRate() *ControlTransport_SetPlayRateControlType {
	if x, ok := x.GetControlType().(*ControlTransport_SetPlayRate); ok {
		return x.SetPlayRate
	}
	return nil
}

func (x *ControlTransport) GetSetRotation() *ControlTransport_SetNativeRotationControlType {
	if x, ok := x.GetControlType().(*ControlTransport_SetRotation); ok {
		return x.SetRotation
	}
	return nil
}

func (x *ControlTransport) GetTogglePlayback() *ControlTransport_TogglePlaybackControlType {
	if x, ok := x.GetControlType().(*ControlTransport_TogglePlayback); ok {
		return x.TogglePlayback
	}
	return nil
}

func (x *ControlTransport) GetSetEffects() *ControlTransport_SetEffectsControlType {
	if x, ok := x.GetControlType().(*ControlTransport_SetEffects); ok {
		return x.SetEffects
	}
	return nil
}

func (x *ControlTransport) GetUpdateEffect() *ControlTransport_UpdateEffectControlType {
	if x, ok := x.GetControlType().(*ControlTransport_UpdateEffect); ok {
		return x.UpdateEffect
	}
	return nil
}

func (x *ControlTransport) GetBeginScrub() *ControlTransport_BeginScrubControlType {
	if x, ok := x.GetControlType().(*ControlTransport_BeginScrub); ok {
		return x.BeginScrub
	}
	return nil
}

func (x *ControlTransport) GetEndScrub() *ControlTransport_EndScrubControlType {
	if x, ok := x.GetControlType().(*ControlTransport_EndScrub); ok {
		return x.EndScrub
	}
	return nil
}

func (x *ControlTransport) GetScrubToTime() *ControlTransport_ScrubToTimeControlType {
	if x, ok := x.GetControlType().(*ControlTransport_ScrubToTime); ok {
		return x.ScrubToTime
	}
	return nil
}

func (x *ControlTransport) GetScrubToPercent() *ControlTransport_ScrubToPercentControlType {
	if x, ok := x.GetControlType().(*ControlTransport_ScrubToPercent); ok {
		return x.ScrubToPercent
	}
	return nil
}

func (x *ControlTransport) GetSetAudioFade() *ControlTransport_SetAudioFadeType {
	if x, ok := x.GetControlType().(*ControlTransport_SetAudioFade); ok {
		return x.SetAudioFade
	}
	return nil
}

func (x *ControlTransport) GetSetAudioProperties() *ControlTransport_SetAudioPropertiesType {
	if x, ok := x.GetControlType().(*ControlTransport_SetAudioProperties); ok {
		return x.SetAudioProperties
	}
	return nil
}

type isControlTransport_ControlType interface {
	isControlTransport_ControlType()
}

type ControlTransport_Play struct {
	Play *ControlTransport_PlayControlType `protobuf:"bytes,1,opt,name=play,proto3,oneof"`
}

type ControlTransport_Pause struct {
	Pause *ControlTransport_PauseControlType `protobuf:"bytes,2,opt,name=pause,proto3,oneof"`
}

type ControlTransport_Rewind struct {
	Rewind *ControlTransport_RewindControlType `protobuf:"bytes,3,opt,name=rewind,proto3,oneof"`
}

type ControlTransport_Fastforward struct {
	Fastforward *ControlTransport_FastForwardControlType `protobuf:"bytes,4,opt,name=fastforward,proto3,oneof"`
}

type ControlTransport_SkipBack struct {
	SkipBack *ControlTransport_SkipBackControlType `protobuf:"bytes,5,opt,name=skip_back,json=skipBack,proto3,oneof"`
}

type ControlTransport_SkipForward struct {
	SkipForward *ControlTransport_SkipForwardControlType `protobuf:"bytes,6,opt,name=skip_forward,json=skipForward,proto3,oneof"`
}

type ControlTransport_StepBack struct {
	StepBack *ControlTransport_StepBackControlType `protobuf:"bytes,7,opt,name=step_back,json=stepBack,proto3,oneof"`
}

type ControlTransport_StepForward struct {
	StepForward *ControlTransport_StepForwardControlType `protobuf:"bytes,8,opt,name=step_forward,json=stepForward,proto3,oneof"`
}

type ControlTransport_GoToStart struct {
	GoToStart *ControlTransport_GoToStartControlType `protobuf:"bytes,9,opt,name=go_to_start,json=goToStart,proto3,oneof"`
}

type ControlTransport_GoToEnd struct {
	GoToEnd *ControlTransport_GoToEndControlType `protobuf:"bytes,10,opt,name=go_to_end,json=goToEnd,proto3,oneof"`
}

type ControlTransport_JumpToTime struct {
	JumpToTime *ControlTransport_JumpToTimeControlType `protobuf:"bytes,11,opt,name=jump_to_time,json=jumpToTime,proto3,oneof"`
}

type ControlTransport_JumpToPercent struct {
	JumpToPercent *ControlTransport_JumpToPercentControlType `protobuf:"bytes,12,opt,name=jump_to_percent,json=jumpToPercent,proto3,oneof"`
}

type ControlTransport_MarkIn struct {
	MarkIn *ControlTransport_MarkInPointControlType `protobuf:"bytes,13,opt,name=mark_in,json=markIn,proto3,oneof"`
}

type ControlTransport_MarkOut struct {
	MarkOut *ControlTransport_MarkOutPointControlType `protobuf:"bytes,14,opt,name=mark_out,json=markOut,proto3,oneof"`
}

type ControlTransport_SetScaleMode struct {
	SetScaleMode *ControlTransport_SetScaleModeControlType `protobuf:"bytes,15,opt,name=set_scale_mode,json=setScaleMode,proto3,oneof"`
}

type ControlTransport_SetFlippedMode struct {
	SetFlippedMode *ControlTransport_SetFlippedModeControlType `protobuf:"bytes,16,opt,name=set_flipped_mode,json=setFlippedMode,proto3,oneof"`
}

type ControlTransport_SetPlayRate struct {
	SetPlayRate *ControlTransport_SetPlayRateControlType `protobuf:"bytes,17,opt,name=set_play_rate,json=setPlayRate,proto3,oneof"`
}

type ControlTransport_SetRotation struct {
	SetRotation *ControlTransport_SetNativeRotationControlType `protobuf:"bytes,18,opt,name=set_rotation,json=setRotation,proto3,oneof"`
}

type ControlTransport_TogglePlayback struct {
	TogglePlayback *ControlTransport_TogglePlaybackControlType `protobuf:"bytes,19,opt,name=toggle_playback,json=togglePlayback,proto3,oneof"`
}

type ControlTransport_SetEffects struct {
	SetEffects *ControlTransport_SetEffectsControlType `protobuf:"bytes,20,opt,name=set_effects,json=setEffects,proto3,oneof"`
}

type ControlTransport_UpdateEffect struct {
	UpdateEffect *ControlTransport_UpdateEffectControlType `protobuf:"bytes,21,opt,name=update_effect,json=updateEffect,proto3,oneof"`
}

type ControlTransport_BeginScrub struct {
	BeginScrub *ControlTransport_BeginScrubControlType `protobuf:"bytes,22,opt,name=begin_scrub,json=beginScrub,proto3,oneof"`
}

type ControlTransport_EndScrub struct {
	EndScrub *ControlTransport_EndScrubControlType `protobuf:"bytes,23,opt,name=end_scrub,json=endScrub,proto3,oneof"`
}

type ControlTransport_ScrubToTime struct {
	ScrubToTime *ControlTransport_ScrubToTimeControlType `protobuf:"bytes,24,opt,name=scrub_to_time,json=scrubToTime,proto3,oneof"`
}

type ControlTransport_ScrubToPercent struct {
	ScrubToPercent *ControlTransport_ScrubToPercentControlType `protobuf:"bytes,25,opt,name=scrub_to_percent,json=scrubToPercent,proto3,oneof"`
}

type ControlTransport_SetAudioFade struct {
	SetAudioFade *ControlTransport_SetAudioFadeType `protobuf:"bytes,26,opt,name=set_audio_fade,json=setAudioFade,proto3,oneof"`
}

type ControlTransport_SetAudioProperties struct {
	SetAudioProperties *ControlTransport_SetAudioPropertiesType `protobuf:"bytes,27,opt,name=set_audio_properties,json=setAudioProperties,proto3,oneof"`
}

func (*ControlTransport_Play) isControlTransport_ControlType() {}

func (*ControlTransport_Pause) isControlTransport_ControlType() {}

func (*ControlTransport_Rewind) isControlTransport_ControlType() {}

func (*ControlTransport_Fastforward) isControlTransport_ControlType() {}

func (*ControlTransport_SkipBack) isControlTransport_ControlType() {}

func (*ControlTransport_SkipForward) isControlTransport_ControlType() {}

func (*ControlTransport_StepBack) isControlTransport_ControlType() {}

func (*ControlTransport_StepForward) isControlTransport_ControlType() {}

func (*ControlTransport_GoToStart) isControlTransport_ControlType() {}

func (*ControlTransport_GoToEnd) isControlTransport_ControlType() {}

func (*ControlTransport_JumpToTime) isControlTransport_ControlType() {}

func (*ControlTransport_JumpToPercent) isControlTransport_ControlType() {}

func (*ControlTransport_MarkIn) isControlTransport_ControlType() {}

func (*ControlTransport_MarkOut) isControlTransport_ControlType() {}

func (*ControlTransport_SetScaleMode) isControlTransport_ControlType() {}

func (*ControlTransport_SetFlippedMode) isControlTransport_ControlType() {}

func (*ControlTransport_SetPlayRate) isControlTransport_ControlType() {}

func (*ControlTransport_SetRotation) isControlTransport_ControlType() {}

func (*ControlTransport_TogglePlayback) isControlTransport_ControlType() {}

func (*ControlTransport_SetEffects) isControlTransport_ControlType() {}

func (*ControlTransport_UpdateEffect) isControlTransport_ControlType() {}

func (*ControlTransport_BeginScrub) isControlTransport_ControlType() {}

func (*ControlTransport_EndScrub) isControlTransport_ControlType() {}

func (*ControlTransport_ScrubToTime) isControlTransport_ControlType() {}

func (*ControlTransport_ScrubToPercent) isControlTransport_ControlType() {}

func (*ControlTransport_SetAudioFade) isControlTransport_ControlType() {}

func (*ControlTransport_SetAudioProperties) isControlTransport_ControlType() {}

type AudioInputSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs         []*AudioInput `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	TransitionTime float64       `protobuf:"fixed64,2,opt,name=transitionTime,proto3" json:"transitionTime,omitempty"`
}

func (x *AudioInputSettings) Reset() {
	*x = AudioInputSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioInputSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioInputSettings) ProtoMessage() {}

func (x *AudioInputSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioInputSettings.ProtoReflect.Descriptor instead.
func (*AudioInputSettings) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{4}
}

func (x *AudioInputSettings) GetInputs() []*AudioInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *AudioInputSettings) GetTransitionTime() float64 {
	if x != nil {
		return x.TransitionTime
	}
	return 0
}

type VideoInputSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs []*VideoInput `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
}

func (x *VideoInputSettings) Reset() {
	*x = VideoInputSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInputSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInputSettings) ProtoMessage() {}

func (x *VideoInputSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInputSettings.ProtoReflect.Descriptor instead.
func (*VideoInputSettings) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{5}
}

func (x *VideoInputSettings) GetInputs() []*VideoInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

type RecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream           *Recording_Stream   `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	WorkingDirectory *URL                `protobuf:"bytes,2,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`
	Resi             *RecordRequest_Resi `protobuf:"bytes,3,opt,name=resi,proto3" json:"resi,omitempty"`
}

func (x *RecordRequest) Reset() {
	*x = RecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRequest) ProtoMessage() {}

func (x *RecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRequest.ProtoReflect.Descriptor instead.
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{6}
}

func (x *RecordRequest) GetStream() *Recording_Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

func (x *RecordRequest) GetWorkingDirectory() *URL {
	if x != nil {
		return x.WorkingDirectory
	}
	return nil
}

func (x *RecordRequest) GetResi() *RecordRequest_Resi {
	if x != nil {
		return x.Resi
	}
	return nil
}

type TextSegmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Segments      []*TextSegmentRequest_Segment `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	StartPosition float64                       `protobuf:"fixed64,2,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
}

func (x *TextSegmentRequest) Reset() {
	*x = TextSegmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextSegmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextSegmentRequest) ProtoMessage() {}

func (x *TextSegmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextSegmentRequest.ProtoReflect.Descriptor instead.
func (*TextSegmentRequest) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{7}
}

func (x *TextSegmentRequest) GetSegments() []*TextSegmentRequest_Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *TextSegmentRequest) GetStartPosition() float64 {
	if x != nil {
		return x.StartPosition
	}
	return 0
}

type ProClockSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string              `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name      string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Connected bool                `protobuf:"varint,3,opt,name=connected,proto3" json:"connected,omitempty"`
	Active    bool                `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	Type      ProClockSource_Type `protobuf:"varint,5,opt,name=type,proto3,enum=rv.data.ProClockSource_Type" json:"type,omitempty"`
}

func (x *ProClockSource) Reset() {
	*x = ProClockSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProClockSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProClockSource) ProtoMessage() {}

func (x *ProClockSource) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProClockSource.ProtoReflect.Descriptor instead.
func (*ProClockSource) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{8}
}

func (x *ProClockSource) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ProClockSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProClockSource) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *ProClockSource) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ProClockSource) GetType() ProClockSource_Type {
	if x != nil {
		return x.Type
	}
	return ProClockSource_TYPE_UNKOWN
}

type MediaMetadataRequestResponse_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width               uint32                                            `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height              uint32                                            `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Fps                 float32                                           `protobuf:"fixed32,3,opt,name=fps,proto3" json:"fps,omitempty"`
	Duration            float32                                           `protobuf:"fixed32,4,opt,name=duration,proto3" json:"duration,omitempty"`
	NumberAudioChannels uint32                                            `protobuf:"varint,5,opt,name=number_audio_channels,json=numberAudioChannels,proto3" json:"number_audio_channels,omitempty"`
	Codec               string                                            `protobuf:"bytes,6,opt,name=codec,proto3" json:"codec,omitempty"`
	Artist              string                                            `protobuf:"bytes,7,opt,name=artist,proto3" json:"artist,omitempty"`
	Title               string                                            `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	Rotation            float32                                           `protobuf:"fixed32,9,opt,name=rotation,proto3" json:"rotation,omitempty"`
	ContentType         MediaMetadataRequestResponse_Metadata_ContentType `protobuf:"varint,10,opt,name=content_type,json=contentType,proto3,enum=rv.data.MediaMetadataRequestResponse_Metadata_ContentType" json:"content_type,omitempty"`
}

func (x *MediaMetadataRequestResponse_Metadata) Reset() {
	*x = MediaMetadataRequestResponse_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaMetadataRequestResponse_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadataRequestResponse_Metadata) ProtoMessage() {}

func (x *MediaMetadataRequestResponse_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadataRequestResponse_Metadata.ProtoReflect.Descriptor instead.
func (*MediaMetadataRequestResponse_Metadata) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MediaMetadataRequestResponse_Metadata) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MediaMetadataRequestResponse_Metadata) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MediaMetadataRequestResponse_Metadata) GetFps() float32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *MediaMetadataRequestResponse_Metadata) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MediaMetadataRequestResponse_Metadata) GetNumberAudioChannels() uint32 {
	if x != nil {
		return x.NumberAudioChannels
	}
	return 0
}

func (x *MediaMetadataRequestResponse_Metadata) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *MediaMetadataRequestResponse_Metadata) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *MediaMetadataRequestResponse_Metadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MediaMetadataRequestResponse_Metadata) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

func (x *MediaMetadataRequestResponse_Metadata) GetContentType() MediaMetadataRequestResponse_Metadata_ContentType {
	if x != nil {
		return x.ContentType
	}
	return MediaMetadataRequestResponse_Metadata_CONTENT_TYPE_UNKNOWN
}

type MediaMetadataRequestResponse_BitmapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  uint32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MediaMetadataRequestResponse_BitmapInfo) Reset() {
	*x = MediaMetadataRequestResponse_BitmapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaMetadataRequestResponse_BitmapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadataRequestResponse_BitmapInfo) ProtoMessage() {}

func (x *MediaMetadataRequestResponse_BitmapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadataRequestResponse_BitmapInfo.ProtoReflect.Descriptor instead.
func (*MediaMetadataRequestResponse_BitmapInfo) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{1, 1}
}

func (x *MediaMetadataRequestResponse_BitmapInfo) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MediaMetadataRequestResponse_BitmapInfo) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ControlTransport_PlayControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_PlayControlType) Reset() {
	*x = ControlTransport_PlayControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_PlayControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_PlayControlType) ProtoMessage() {}

func (x *ControlTransport_PlayControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_PlayControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_PlayControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 0}
}

type ControlTransport_PauseControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_PauseControlType) Reset() {
	*x = ControlTransport_PauseControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_PauseControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_PauseControlType) ProtoMessage() {}

func (x *ControlTransport_PauseControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_PauseControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_PauseControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 1}
}

type ControlTransport_RewindControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_RewindControlType) Reset() {
	*x = ControlTransport_RewindControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_RewindControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_RewindControlType) ProtoMessage() {}

func (x *ControlTransport_RewindControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_RewindControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_RewindControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 2}
}

type ControlTransport_FastForwardControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_FastForwardControlType) Reset() {
	*x = ControlTransport_FastForwardControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_FastForwardControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_FastForwardControlType) ProtoMessage() {}

func (x *ControlTransport_FastForwardControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_FastForwardControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_FastForwardControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 3}
}

type ControlTransport_SkipBackControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset float64 `protobuf:"fixed64,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ControlTransport_SkipBackControlType) Reset() {
	*x = ControlTransport_SkipBackControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SkipBackControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SkipBackControlType) ProtoMessage() {}

func (x *ControlTransport_SkipBackControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SkipBackControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SkipBackControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 4}
}

func (x *ControlTransport_SkipBackControlType) GetOffset() float64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ControlTransport_SkipForwardControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset float64 `protobuf:"fixed64,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ControlTransport_SkipForwardControlType) Reset() {
	*x = ControlTransport_SkipForwardControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SkipForwardControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SkipForwardControlType) ProtoMessage() {}

func (x *ControlTransport_SkipForwardControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SkipForwardControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SkipForwardControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 5}
}

func (x *ControlTransport_SkipForwardControlType) GetOffset() float64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ControlTransport_StepBackControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_StepBackControlType) Reset() {
	*x = ControlTransport_StepBackControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_StepBackControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_StepBackControlType) ProtoMessage() {}

func (x *ControlTransport_StepBackControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_StepBackControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_StepBackControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 6}
}

type ControlTransport_StepForwardControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_StepForwardControlType) Reset() {
	*x = ControlTransport_StepForwardControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_StepForwardControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_StepForwardControlType) ProtoMessage() {}

func (x *ControlTransport_StepForwardControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_StepForwardControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_StepForwardControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 7}
}

type ControlTransport_GoToStartControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset float64 `protobuf:"fixed64,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ControlTransport_GoToStartControlType) Reset() {
	*x = ControlTransport_GoToStartControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_GoToStartControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_GoToStartControlType) ProtoMessage() {}

func (x *ControlTransport_GoToStartControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_GoToStartControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_GoToStartControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 8}
}

func (x *ControlTransport_GoToStartControlType) GetOffset() float64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ControlTransport_GoToEndControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset float64 `protobuf:"fixed64,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ControlTransport_GoToEndControlType) Reset() {
	*x = ControlTransport_GoToEndControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_GoToEndControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_GoToEndControlType) ProtoMessage() {}

func (x *ControlTransport_GoToEndControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_GoToEndControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_GoToEndControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 9}
}

func (x *ControlTransport_GoToEndControlType) GetOffset() float64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ControlTransport_JumpToTimeControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ControlTransport_JumpToTimeControlType) Reset() {
	*x = ControlTransport_JumpToTimeControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_JumpToTimeControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_JumpToTimeControlType) ProtoMessage() {}

func (x *ControlTransport_JumpToTimeControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_JumpToTimeControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_JumpToTimeControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 10}
}

func (x *ControlTransport_JumpToTimeControlType) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ControlTransport_JumpToPercentControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percent float64 `protobuf:"fixed64,1,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *ControlTransport_JumpToPercentControlType) Reset() {
	*x = ControlTransport_JumpToPercentControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_JumpToPercentControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_JumpToPercentControlType) ProtoMessage() {}

func (x *ControlTransport_JumpToPercentControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_JumpToPercentControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_JumpToPercentControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 11}
}

func (x *ControlTransport_JumpToPercentControlType) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type ControlTransport_MarkInPointControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ControlTransport_MarkInPointControlType) Reset() {
	*x = ControlTransport_MarkInPointControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_MarkInPointControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_MarkInPointControlType) ProtoMessage() {}

func (x *ControlTransport_MarkInPointControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_MarkInPointControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_MarkInPointControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 12}
}

func (x *ControlTransport_MarkInPointControlType) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ControlTransport_MarkOutPointControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ControlTransport_MarkOutPointControlType) Reset() {
	*x = ControlTransport_MarkOutPointControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_MarkOutPointControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_MarkOutPointControlType) ProtoMessage() {}

func (x *ControlTransport_MarkOutPointControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_MarkOutPointControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_MarkOutPointControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 13}
}

func (x *ControlTransport_MarkOutPointControlType) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ControlTransport_SetScaleModeControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode      ControlTransport_SetScaleModeControlType_ScaleBehavior  `protobuf:"varint,1,opt,name=mode,proto3,enum=rv.data.ControlTransport_SetScaleModeControlType_ScaleBehavior" json:"mode,omitempty"`
	Alignment ControlTransport_SetScaleModeControlType_ScaleAlignment `protobuf:"varint,2,opt,name=alignment,proto3,enum=rv.data.ControlTransport_SetScaleModeControlType_ScaleAlignment" json:"alignment,omitempty"`
}

func (x *ControlTransport_SetScaleModeControlType) Reset() {
	*x = ControlTransport_SetScaleModeControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SetScaleModeControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SetScaleModeControlType) ProtoMessage() {}

func (x *ControlTransport_SetScaleModeControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SetScaleModeControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SetScaleModeControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 14}
}

func (x *ControlTransport_SetScaleModeControlType) GetMode() ControlTransport_SetScaleModeControlType_ScaleBehavior {
	if x != nil {
		return x.Mode
	}
	return ControlTransport_SetScaleModeControlType_SCALE_BEHAVIOR_FIT
}

func (x *ControlTransport_SetScaleModeControlType) GetAlignment() ControlTransport_SetScaleModeControlType_ScaleAlignment {
	if x != nil {
		return x.Alignment
	}
	return ControlTransport_SetScaleModeControlType_SCALE_ALIGNMENT_MIDDLE_CENTER
}

type ControlTransport_SetFlippedModeControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Horizontal bool `protobuf:"varint,1,opt,name=horizontal,proto3" json:"horizontal,omitempty"`
	Vertical   bool `protobuf:"varint,2,opt,name=vertical,proto3" json:"vertical,omitempty"`
}

func (x *ControlTransport_SetFlippedModeControlType) Reset() {
	*x = ControlTransport_SetFlippedModeControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SetFlippedModeControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SetFlippedModeControlType) ProtoMessage() {}

func (x *ControlTransport_SetFlippedModeControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SetFlippedModeControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SetFlippedModeControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 15}
}

func (x *ControlTransport_SetFlippedModeControlType) GetHorizontal() bool {
	if x != nil {
		return x.Horizontal
	}
	return false
}

func (x *ControlTransport_SetFlippedModeControlType) GetVertical() bool {
	if x != nil {
		return x.Vertical
	}
	return false
}

type ControlTransport_SetPlayRateControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayRate float64 `protobuf:"fixed64,1,opt,name=play_rate,json=playRate,proto3" json:"play_rate,omitempty"`
}

func (x *ControlTransport_SetPlayRateControlType) Reset() {
	*x = ControlTransport_SetPlayRateControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SetPlayRateControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SetPlayRateControlType) ProtoMessage() {}

func (x *ControlTransport_SetPlayRateControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SetPlayRateControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SetPlayRateControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 16}
}

func (x *ControlTransport_SetPlayRateControlType) GetPlayRate() float64 {
	if x != nil {
		return x.PlayRate
	}
	return 0
}

type ControlTransport_SetNativeRotationControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rotation ControlTransport_SetNativeRotationControlType_NativeRotationType `protobuf:"varint,1,opt,name=rotation,proto3,enum=rv.data.ControlTransport_SetNativeRotationControlType_NativeRotationType" json:"rotation,omitempty"`
}

func (x *ControlTransport_SetNativeRotationControlType) Reset() {
	*x = ControlTransport_SetNativeRotationControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SetNativeRotationControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SetNativeRotationControlType) ProtoMessage() {}

func (x *ControlTransport_SetNativeRotationControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SetNativeRotationControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SetNativeRotationControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 17}
}

func (x *ControlTransport_SetNativeRotationControlType) GetRotation() ControlTransport_SetNativeRotationControlType_NativeRotationType {
	if x != nil {
		return x.Rotation
	}
	return ControlTransport_SetNativeRotationControlType_NATIVE_ROTATION_TYPE_ROTATE_STANDARD
}

type ControlTransport_TogglePlaybackControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_TogglePlaybackControlType) Reset() {
	*x = ControlTransport_TogglePlaybackControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_TogglePlaybackControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_TogglePlaybackControlType) ProtoMessage() {}

func (x *ControlTransport_TogglePlaybackControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_TogglePlaybackControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_TogglePlaybackControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 18}
}

type ControlTransport_SetEffectsControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Effects []*Effect `protobuf:"bytes,1,rep,name=effects,proto3" json:"effects,omitempty"`
}

func (x *ControlTransport_SetEffectsControlType) Reset() {
	*x = ControlTransport_SetEffectsControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SetEffectsControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SetEffectsControlType) ProtoMessage() {}

func (x *ControlTransport_SetEffectsControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SetEffectsControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SetEffectsControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 19}
}

func (x *ControlTransport_SetEffectsControlType) GetEffects() []*Effect {
	if x != nil {
		return x.Effects
	}
	return nil
}

type ControlTransport_UpdateEffectControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Effect *Effect `protobuf:"bytes,1,opt,name=effect,proto3" json:"effect,omitempty"`
}

func (x *ControlTransport_UpdateEffectControlType) Reset() {
	*x = ControlTransport_UpdateEffectControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_UpdateEffectControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_UpdateEffectControlType) ProtoMessage() {}

func (x *ControlTransport_UpdateEffectControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_UpdateEffectControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_UpdateEffectControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 20}
}

func (x *ControlTransport_UpdateEffectControlType) GetEffect() *Effect {
	if x != nil {
		return x.Effect
	}
	return nil
}

type ControlTransport_BeginScrubControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_BeginScrubControlType) Reset() {
	*x = ControlTransport_BeginScrubControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_BeginScrubControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_BeginScrubControlType) ProtoMessage() {}

func (x *ControlTransport_BeginScrubControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_BeginScrubControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_BeginScrubControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 21}
}

type ControlTransport_EndScrubControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlTransport_EndScrubControlType) Reset() {
	*x = ControlTransport_EndScrubControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_EndScrubControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_EndScrubControlType) ProtoMessage() {}

func (x *ControlTransport_EndScrubControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_EndScrubControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_EndScrubControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 22}
}

type ControlTransport_ScrubToTimeControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ControlTransport_ScrubToTimeControlType) Reset() {
	*x = ControlTransport_ScrubToTimeControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_ScrubToTimeControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_ScrubToTimeControlType) ProtoMessage() {}

func (x *ControlTransport_ScrubToTimeControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_ScrubToTimeControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_ScrubToTimeControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 23}
}

func (x *ControlTransport_ScrubToTimeControlType) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ControlTransport_ScrubToPercentControlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percent float64 `protobuf:"fixed64,1,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *ControlTransport_ScrubToPercentControlType) Reset() {
	*x = ControlTransport_ScrubToPercentControlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_ScrubToPercentControlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_ScrubToPercentControlType) ProtoMessage() {}

func (x *ControlTransport_ScrubToPercentControlType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_ScrubToPercentControlType.ProtoReflect.Descriptor instead.
func (*ControlTransport_ScrubToPercentControlType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 24}
}

func (x *ControlTransport_ScrubToPercentControlType) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type ControlTransport_SetAudioFadeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FadeInDuration  float64 `protobuf:"fixed64,1,opt,name=fade_in_duration,json=fadeInDuration,proto3" json:"fade_in_duration,omitempty"`
	FadeOutDuration float64 `protobuf:"fixed64,2,opt,name=fade_out_duration,json=fadeOutDuration,proto3" json:"fade_out_duration,omitempty"`
	ShouldFadeIn    bool    `protobuf:"varint,3,opt,name=should_fade_in,json=shouldFadeIn,proto3" json:"should_fade_in,omitempty"`
	ShouldFadeOut   bool    `protobuf:"varint,4,opt,name=should_fade_out,json=shouldFadeOut,proto3" json:"should_fade_out,omitempty"`
}

func (x *ControlTransport_SetAudioFadeType) Reset() {
	*x = ControlTransport_SetAudioFadeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SetAudioFadeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SetAudioFadeType) ProtoMessage() {}

func (x *ControlTransport_SetAudioFadeType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SetAudioFadeType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SetAudioFadeType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 25}
}

func (x *ControlTransport_SetAudioFadeType) GetFadeInDuration() float64 {
	if x != nil {
		return x.FadeInDuration
	}
	return 0
}

func (x *ControlTransport_SetAudioFadeType) GetFadeOutDuration() float64 {
	if x != nil {
		return x.FadeOutDuration
	}
	return 0
}

func (x *ControlTransport_SetAudioFadeType) GetShouldFadeIn() bool {
	if x != nil {
		return x.ShouldFadeIn
	}
	return false
}

func (x *ControlTransport_SetAudioFadeType) GetShouldFadeOut() bool {
	if x != nil {
		return x.ShouldFadeOut
	}
	return false
}

type ControlTransport_SetAudioPropertiesType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioProperties *Media_AudioProperties `protobuf:"bytes,1,opt,name=audio_properties,json=audioProperties,proto3" json:"audio_properties,omitempty"`
	Solo            []bool                 `protobuf:"varint,2,rep,packed,name=solo,proto3" json:"solo,omitempty"`
}

func (x *ControlTransport_SetAudioPropertiesType) Reset() {
	*x = ControlTransport_SetAudioPropertiesType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlTransport_SetAudioPropertiesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlTransport_SetAudioPropertiesType) ProtoMessage() {}

func (x *ControlTransport_SetAudioPropertiesType) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlTransport_SetAudioPropertiesType.ProtoReflect.Descriptor instead.
func (*ControlTransport_SetAudioPropertiesType) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{3, 26}
}

func (x *ControlTransport_SetAudioPropertiesType) GetAudioProperties() *Media_AudioProperties {
	if x != nil {
		return x.AudioProperties
	}
	return nil
}

func (x *ControlTransport_SetAudioPropertiesType) GetSolo() []bool {
	if x != nil {
		return x.Solo
	}
	return nil
}

type RecordRequest_Resi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gop                uint32  `protobuf:"varint,1,opt,name=gop,proto3" json:"gop,omitempty"`
	SegmentSize        float64 `protobuf:"fixed64,2,opt,name=segmentSize,proto3" json:"segmentSize,omitempty"`
	DestinationGroupId string  `protobuf:"bytes,3,opt,name=destinationGroupId,proto3" json:"destinationGroupId,omitempty"`
	BufSize            uint32  `protobuf:"varint,4,opt,name=bufSize,proto3" json:"bufSize,omitempty"`
	MinRate            uint32  `protobuf:"varint,5,opt,name=minRate,proto3" json:"minRate,omitempty"`
	MaxRate            uint32  `protobuf:"varint,6,opt,name=maxRate,proto3" json:"maxRate,omitempty"`
	EventName          string  `protobuf:"bytes,7,opt,name=eventName,proto3" json:"eventName,omitempty"`
	SocialDescription  string  `protobuf:"bytes,8,opt,name=social_description,json=socialDescription,proto3" json:"social_description,omitempty"`
}

func (x *RecordRequest_Resi) Reset() {
	*x = RecordRequest_Resi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordRequest_Resi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRequest_Resi) ProtoMessage() {}

func (x *RecordRequest_Resi) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRequest_Resi.ProtoReflect.Descriptor instead.
func (*RecordRequest_Resi) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{6, 0}
}

func (x *RecordRequest_Resi) GetGop() uint32 {
	if x != nil {
		return x.Gop
	}
	return 0
}

func (x *RecordRequest_Resi) GetSegmentSize() float64 {
	if x != nil {
		return x.SegmentSize
	}
	return 0
}

func (x *RecordRequest_Resi) GetDestinationGroupId() string {
	if x != nil {
		return x.DestinationGroupId
	}
	return ""
}

func (x *RecordRequest_Resi) GetBufSize() uint32 {
	if x != nil {
		return x.BufSize
	}
	return 0
}

func (x *RecordRequest_Resi) GetMinRate() uint32 {
	if x != nil {
		return x.MinRate
	}
	return 0
}

func (x *RecordRequest_Resi) GetMaxRate() uint32 {
	if x != nil {
		return x.MaxRate
	}
	return 0
}

func (x *RecordRequest_Resi) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *RecordRequest_Resi) GetSocialDescription() string {
	if x != nil {
		return x.SocialDescription
	}
	return ""
}

type TextSegmentRequest_Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size  float64 `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *TextSegmentRequest_Segment) Reset() {
	*x = TextSegmentRequest_Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proCore_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextSegmentRequest_Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextSegmentRequest_Segment) ProtoMessage() {}

func (x *TextSegmentRequest_Segment) ProtoReflect() protoreflect.Message {
	mi := &file_proCore_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextSegmentRequest_Segment.ProtoReflect.Descriptor instead.
func (*TextSegmentRequest_Segment) Descriptor() ([]byte, []int) {
	return file_proCore_proto_rawDescGZIP(), []int{7, 0}
}

func (x *TextSegmentRequest_Segment) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TextSegmentRequest_Segment) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_proCore_proto protoreflect.FileDescriptor

var file_proCore_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x04, 0x0a, 0x18, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x0a, 0x63, 0x72, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x5d, 0x0a, 0x0f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31,
	0x0a, 0x14, 0x66, 0x6c, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f,
	0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x66, 0x6c,
	0x69, 0x70, 0x70, 0x65, 0x64, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x6c,
	0x79, 0x12, 0x2d, 0x0a, 0x12, 0x66, 0x6c, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x66,
	0x6c, 0x69, 0x70, 0x70, 0x65, 0x64, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79,
	0x22, 0xae, 0x01, 0x0a, 0x12, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x4e, 0x41, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x52, 0x4f, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x10,
	0x00, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x39, 0x30, 0x10, 0x5a, 0x12, 0x24, 0x0a, 0x1f, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f,
	0x52, 0x4f, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x31, 0x38, 0x30, 0x10, 0xb4, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x4e,
	0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x32, 0x37, 0x30, 0x10, 0x8e,
	0x02, 0x22, 0xd9, 0x05, 0x0a, 0x1c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x64,
	0x0a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x69, 0x74, 0x6d,
	0x61, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xca, 0x03, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x66, 0x70,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x5d, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x6f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10,
	0x03, 0x1a, 0x3a, 0x0a, 0x0a, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x8f, 0x04,
	0x0a, 0x0e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x5b, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x16, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x73,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x43, 0x68, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x68, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x22, 0x5b, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4e, 0x54,
	0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x4e, 0x54,
	0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x4e, 0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x01, 0x22,
	0xd0, 0x23, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x77,
	0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x76, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x77, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x77, 0x69, 0x6e, 0x64,
	0x12, 0x54, 0x0a, 0x0b, 0x66, 0x61, 0x73, 0x74, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x46, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x61, 0x73, 0x74, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x4c, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x72, 0x76, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x70,
	0x42, 0x61, 0x63, 0x6b, 0x12, 0x55, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x76, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x6b, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x4c, 0x0a, 0x09, 0x73,
	0x74, 0x65, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x42, 0x61,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x74, 0x65, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x55, 0x0a, 0x0c, 0x73, 0x74, 0x65,
	0x70, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x65, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x50, 0x0a, 0x0b, 0x67, 0x6f, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x47, 0x6f, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x67, 0x6f, 0x54, 0x6f, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x4a, 0x0a, 0x09, 0x67, 0x6f, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x6e, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x47, 0x6f, 0x54, 0x6f, 0x45, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x07, 0x67, 0x6f, 0x54, 0x6f, 0x45, 0x6e, 0x64, 0x12, 0x53,
	0x0a, 0x0c, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4a, 0x75, 0x6d, 0x70, 0x54, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x6f, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x54, 0x6f, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x6f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x49, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x12, 0x4e,
	0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x4f, 0x75, 0x74, 0x12, 0x59,
	0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x74,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x73, 0x65, 0x74,
	0x5f, 0x66, 0x6c, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x46,
	0x6c, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x73, 0x65,
	0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5e, 0x0a, 0x0f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x0e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x52, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x76, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x52, 0x0a,
	0x0b, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x63, 0x72, 0x75, 0x62, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x53, 0x63, 0x72, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x63, 0x72, 0x75,
	0x62, 0x12, 0x4c, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x72, 0x75, 0x62, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x45, 0x6e, 0x64, 0x53, 0x63, 0x72, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x53, 0x63, 0x72, 0x75, 0x62, 0x12,
	0x56, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x53, 0x63, 0x72, 0x75, 0x62, 0x54, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x75,
	0x62, 0x54, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x73, 0x63, 0x72, 0x75, 0x62,
	0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x63, 0x72,
	0x75, 0x62, 0x54, 0x6f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x75, 0x62, 0x54,
	0x6f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x66, 0x61, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x46, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x61, 0x64, 0x65, 0x12, 0x64, 0x0a, 0x14,
	0x73, 0x65, 0x74, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x76, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x12,
	0x73, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x1a, 0x11, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x12, 0x0a, 0x10, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x77,
	0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x18,
	0x0a, 0x16, 0x46, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x2d, 0x0a, 0x13, 0x53, 0x6b, 0x69, 0x70,
	0x42, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x30, 0x0a, 0x16, 0x53, 0x6b, 0x69, 0x70, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x65,
	0x70, 0x42, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0x18, 0x0a, 0x16, 0x53, 0x74, 0x65, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x2e, 0x0a, 0x14, 0x47, 0x6f,
	0x54, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x2c, 0x0a, 0x12, 0x47, 0x6f,
	0x54, 0x6f, 0x45, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x2b, 0x0a, 0x15, 0x4a, 0x75, 0x6d, 0x70,
	0x54, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x34, 0x0a, 0x18, 0x4a, 0x75, 0x6d, 0x70, 0x54, 0x6f, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x1a, 0x2c, 0x0a, 0x16, 0x4d,
	0x61, 0x72, 0x6b, 0x49, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x2d, 0x0a, 0x17, 0x4d, 0x61, 0x72,
	0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x83, 0x05, 0x0a, 0x17, 0x53, 0x65, 0x74,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x0d, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43,
	0x41, 0x4c, 0x45, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x46, 0x49, 0x54,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x42, 0x45, 0x48, 0x41,
	0x56, 0x49, 0x4f, 0x52, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53,
	0x43, 0x41, 0x4c, 0x45, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x53, 0x54,
	0x52, 0x45, 0x54, 0x43, 0x48, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x43, 0x41, 0x4c, 0x45,
	0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d,
	0x10, 0x03, 0x22, 0xb9, 0x02, 0x0a, 0x0e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x41, 0x6c, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x41,
	0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x5f,
	0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x43, 0x41, 0x4c,
	0x45, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x50, 0x5f,
	0x4c, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f,
	0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x50, 0x5f, 0x43, 0x45,
	0x4e, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f,
	0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x50, 0x5f, 0x52, 0x49,
	0x47, 0x48, 0x54, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x41,
	0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x5f,
	0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x43, 0x41, 0x4c, 0x45,
	0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x4f, 0x54, 0x54, 0x4f,
	0x4d, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x43, 0x41,
	0x4c, 0x45, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x4f, 0x54,
	0x54, 0x4f, 0x4d, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b,
	0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x42, 0x4f, 0x54, 0x54, 0x4f, 0x4d, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x07, 0x12, 0x1f, 0x0a,
	0x1b, 0x53, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x08, 0x1a, 0x57,
	0x0a, 0x19, 0x53, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x1a, 0x35, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x61, 0x74, 0x65, 0x1a, 0xb6,
	0x02, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x65, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x49, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x24, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x4e, 0x44, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x41, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x52, 0x4f, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x39, 0x30, 0x10, 0x5a, 0x12, 0x24, 0x0a, 0x1f, 0x4e,
	0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x31, 0x38, 0x30, 0x10, 0xb4,
	0x01, 0x12, 0x24, 0x0a, 0x1f, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x32, 0x37, 0x30, 0x10, 0x8e, 0x02, 0x1a, 0x1b, 0x0a, 0x19, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x42, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a,
	0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52,
	0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x42, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x1a, 0x17, 0x0a, 0x15,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x63, 0x72, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x15, 0x0a, 0x13, 0x45, 0x6e, 0x64, 0x53, 0x63, 0x72, 0x75,
	0x62, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x2c, 0x0a, 0x16,
	0x53, 0x63, 0x72, 0x75, 0x62, 0x54, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x35, 0x0a, 0x19, 0x53, 0x63,
	0x72, 0x75, 0x62, 0x54, 0x6f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x1a, 0xb6, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x61,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x66, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x66, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x66, 0x61, 0x64,
	0x65, 0x4f, 0x75, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x66, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x46, 0x61, 0x64, 0x65,
	0x49, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x66, 0x61, 0x64,
	0x65, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f,
	0x75, 0x6c, 0x64, 0x46, 0x61, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x1a, 0x77, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0f,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x08, 0x52, 0x04, 0x73,
	0x6f, 0x6c, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x69, 0x0a, 0x12, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x41, 0x0a,
	0x12, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x22, 0xb6, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x39, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x52, 0x10,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x2f, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x52, 0x04, 0x72, 0x65, 0x73,
	0x69, 0x1a, 0x85, 0x02, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x6f,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x6f, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x75, 0x66, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x62, 0x75, 0x66, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x54, 0x65,
	0x78, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x33, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xda, 0x01,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72,
	0x76, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x38, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x02, 0x42, 0x1c, 0x5a, 0x1a, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proCore_proto_rawDescOnce sync.Once
	file_proCore_proto_rawDescData = file_proCore_proto_rawDesc
)

func file_proCore_proto_rawDescGZIP() []byte {
	file_proCore_proto_rawDescOnce.Do(func() {
		file_proCore_proto_rawDescData = protoimpl.X.CompressGZIP(file_proCore_proto_rawDescData)
	})
	return file_proCore_proto_rawDescData
}

var file_proCore_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proCore_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_proCore_proto_goTypes = []interface{}{
	(MediaMetadataRequestInfo_NativeRotationType)(0),                      // 0: rv.data.MediaMetadataRequestInfo.NativeRotationType
	(MediaMetadataRequestResponse_Metadata_ContentType)(0),                // 1: rv.data.MediaMetadataRequestResponse.Metadata.ContentType
	(TriggerOptions_ContentDestination)(0),                                // 2: rv.data.TriggerOptions.ContentDestination
	(ControlTransport_SetScaleModeControlType_ScaleBehavior)(0),           // 3: rv.data.ControlTransport.SetScaleModeControlType.ScaleBehavior
	(ControlTransport_SetScaleModeControlType_ScaleAlignment)(0),          // 4: rv.data.ControlTransport.SetScaleModeControlType.ScaleAlignment
	(ControlTransport_SetNativeRotationControlType_NativeRotationType)(0), // 5: rv.data.ControlTransport.SetNativeRotationControlType.NativeRotationType
	(ProClockSource_Type)(0),                                              // 6: rv.data.ProClockSource.Type
	(*MediaMetadataRequestInfo)(nil),                                      // 7: rv.data.MediaMetadataRequestInfo
	(*MediaMetadataRequestResponse)(nil),                                  // 8: rv.data.MediaMetadataRequestResponse
	(*TriggerOptions)(nil),                                                // 9: rv.data.TriggerOptions
	(*ControlTransport)(nil),                                              // 10: rv.data.ControlTransport
	(*AudioInputSettings)(nil),                                            // 11: rv.data.AudioInputSettings
	(*VideoInputSettings)(nil),                                            // 12: rv.data.VideoInputSettings
	(*RecordRequest)(nil),                                                 // 13: rv.data.RecordRequest
	(*TextSegmentRequest)(nil),                                            // 14: rv.data.TextSegmentRequest
	(*ProClockSource)(nil),                                                // 15: rv.data.ProClockSource
	(*MediaMetadataRequestResponse_Metadata)(nil),                         // 16: rv.data.MediaMetadataRequestResponse.Metadata
	(*MediaMetadataRequestResponse_BitmapInfo)(nil),                       // 17: rv.data.MediaMetadataRequestResponse.BitmapInfo
	(*ControlTransport_PlayControlType)(nil),                              // 18: rv.data.ControlTransport.PlayControlType
	(*ControlTransport_PauseControlType)(nil),                             // 19: rv.data.ControlTransport.PauseControlType
	(*ControlTransport_RewindControlType)(nil),                            // 20: rv.data.ControlTransport.RewindControlType
	(*ControlTransport_FastForwardControlType)(nil),                       // 21: rv.data.ControlTransport.FastForwardControlType
	(*ControlTransport_SkipBackControlType)(nil),                          // 22: rv.data.ControlTransport.SkipBackControlType
	(*ControlTransport_SkipForwardControlType)(nil),                       // 23: rv.data.ControlTransport.SkipForwardControlType
	(*ControlTransport_StepBackControlType)(nil),                          // 24: rv.data.ControlTransport.StepBackControlType
	(*ControlTransport_StepForwardControlType)(nil),                       // 25: rv.data.ControlTransport.StepForwardControlType
	(*ControlTransport_GoToStartControlType)(nil),                         // 26: rv.data.ControlTransport.GoToStartControlType
	(*ControlTransport_GoToEndControlType)(nil),                           // 27: rv.data.ControlTransport.GoToEndControlType
	(*ControlTransport_JumpToTimeControlType)(nil),                        // 28: rv.data.ControlTransport.JumpToTimeControlType
	(*ControlTransport_JumpToPercentControlType)(nil),                     // 29: rv.data.ControlTransport.JumpToPercentControlType
	(*ControlTransport_MarkInPointControlType)(nil),                       // 30: rv.data.ControlTransport.MarkInPointControlType
	(*ControlTransport_MarkOutPointControlType)(nil),                      // 31: rv.data.ControlTransport.MarkOutPointControlType
	(*ControlTransport_SetScaleModeControlType)(nil),                      // 32: rv.data.ControlTransport.SetScaleModeControlType
	(*ControlTransport_SetFlippedModeControlType)(nil),                    // 33: rv.data.ControlTransport.SetFlippedModeControlType
	(*ControlTransport_SetPlayRateControlType)(nil),                       // 34: rv.data.ControlTransport.SetPlayRateControlType
	(*ControlTransport_SetNativeRotationControlType)(nil),                 // 35: rv.data.ControlTransport.SetNativeRotationControlType
	(*ControlTransport_TogglePlaybackControlType)(nil),                    // 36: rv.data.ControlTransport.TogglePlaybackControlType
	(*ControlTransport_SetEffectsControlType)(nil),                        // 37: rv.data.ControlTransport.SetEffectsControlType
	(*ControlTransport_UpdateEffectControlType)(nil),                      // 38: rv.data.ControlTransport.UpdateEffectControlType
	(*ControlTransport_BeginScrubControlType)(nil),                        // 39: rv.data.ControlTransport.BeginScrubControlType
	(*ControlTransport_EndScrubControlType)(nil),                          // 40: rv.data.ControlTransport.EndScrubControlType
	(*ControlTransport_ScrubToTimeControlType)(nil),                       // 41: rv.data.ControlTransport.ScrubToTimeControlType
	(*ControlTransport_ScrubToPercentControlType)(nil),                    // 42: rv.data.ControlTransport.ScrubToPercentControlType
	(*ControlTransport_SetAudioFadeType)(nil),                             // 43: rv.data.ControlTransport.SetAudioFadeType
	(*ControlTransport_SetAudioPropertiesType)(nil),                       // 44: rv.data.ControlTransport.SetAudioPropertiesType
	(*RecordRequest_Resi)(nil),                                            // 45: rv.data.RecordRequest.Resi
	(*TextSegmentRequest_Segment)(nil),                                    // 46: rv.data.TextSegmentRequest.Segment
	(*Effect)(nil),                                                        // 47: rv.data.Effect
	(*Graphics_EdgeInsets)(nil),                                           // 48: rv.data.Graphics.EdgeInsets
	(*AudioInput)(nil),                                                    // 49: rv.data.AudioInput
	(*VideoInput)(nil),                                                    // 50: rv.data.VideoInput
	(*Recording_Stream)(nil),                                              // 51: rv.data.Recording.Stream
	(*URL)(nil),                                                           // 52: rv.data.URL
	(*Media_AudioProperties)(nil),                                         // 53: rv.data.Media.AudioProperties
}
var file_proCore_proto_depIdxs = []int32{
	47, // 0: rv.data.MediaMetadataRequestInfo.effects:type_name -> rv.data.Effect
	48, // 1: rv.data.MediaMetadataRequestInfo.crop_insets:type_name -> rv.data.Graphics.EdgeInsets
	0,  // 2: rv.data.MediaMetadataRequestInfo.native_rotation:type_name -> rv.data.MediaMetadataRequestInfo.NativeRotationType
	16, // 3: rv.data.MediaMetadataRequestResponse.metadata:type_name -> rv.data.MediaMetadataRequestResponse.Metadata
	17, // 4: rv.data.MediaMetadataRequestResponse.generated_bitmap_info:type_name -> rv.data.MediaMetadataRequestResponse.BitmapInfo
	2,  // 5: rv.data.TriggerOptions.content_destination:type_name -> rv.data.TriggerOptions.ContentDestination
	18, // 6: rv.data.ControlTransport.play:type_name -> rv.data.ControlTransport.PlayControlType
	19, // 7: rv.data.ControlTransport.pause:type_name -> rv.data.ControlTransport.PauseControlType
	20, // 8: rv.data.ControlTransport.rewind:type_name -> rv.data.ControlTransport.RewindControlType
	21, // 9: rv.data.ControlTransport.fastforward:type_name -> rv.data.ControlTransport.FastForwardControlType
	22, // 10: rv.data.ControlTransport.skip_back:type_name -> rv.data.ControlTransport.SkipBackControlType
	23, // 11: rv.data.ControlTransport.skip_forward:type_name -> rv.data.ControlTransport.SkipForwardControlType
	24, // 12: rv.data.ControlTransport.step_back:type_name -> rv.data.ControlTransport.StepBackControlType
	25, // 13: rv.data.ControlTransport.step_forward:type_name -> rv.data.ControlTransport.StepForwardControlType
	26, // 14: rv.data.ControlTransport.go_to_start:type_name -> rv.data.ControlTransport.GoToStartControlType
	27, // 15: rv.data.ControlTransport.go_to_end:type_name -> rv.data.ControlTransport.GoToEndControlType
	28, // 16: rv.data.ControlTransport.jump_to_time:type_name -> rv.data.ControlTransport.JumpToTimeControlType
	29, // 17: rv.data.ControlTransport.jump_to_percent:type_name -> rv.data.ControlTransport.JumpToPercentControlType
	30, // 18: rv.data.ControlTransport.mark_in:type_name -> rv.data.ControlTransport.MarkInPointControlType
	31, // 19: rv.data.ControlTransport.mark_out:type_name -> rv.data.ControlTransport.MarkOutPointControlType
	32, // 20: rv.data.ControlTransport.set_scale_mode:type_name -> rv.data.ControlTransport.SetScaleModeControlType
	33, // 21: rv.data.ControlTransport.set_flipped_mode:type_name -> rv.data.ControlTransport.SetFlippedModeControlType
	34, // 22: rv.data.ControlTransport.set_play_rate:type_name -> rv.data.ControlTransport.SetPlayRateControlType
	35, // 23: rv.data.ControlTransport.set_rotation:type_name -> rv.data.ControlTransport.SetNativeRotationControlType
	36, // 24: rv.data.ControlTransport.toggle_playback:type_name -> rv.data.ControlTransport.TogglePlaybackControlType
	37, // 25: rv.data.ControlTransport.set_effects:type_name -> rv.data.ControlTransport.SetEffectsControlType
	38, // 26: rv.data.ControlTransport.update_effect:type_name -> rv.data.ControlTransport.UpdateEffectControlType
	39, // 27: rv.data.ControlTransport.begin_scrub:type_name -> rv.data.ControlTransport.BeginScrubControlType
	40, // 28: rv.data.ControlTransport.end_scrub:type_name -> rv.data.ControlTransport.EndScrubControlType
	41, // 29: rv.data.ControlTransport.scrub_to_time:type_name -> rv.data.ControlTransport.ScrubToTimeControlType
	42, // 30: rv.data.ControlTransport.scrub_to_percent:type_name -> rv.data.ControlTransport.ScrubToPercentControlType
	43, // 31: rv.data.ControlTransport.set_audio_fade:type_name -> rv.data.ControlTransport.SetAudioFadeType
	44, // 32: rv.data.ControlTransport.set_audio_properties:type_name -> rv.data.ControlTransport.SetAudioPropertiesType
	49, // 33: rv.data.AudioInputSettings.inputs:type_name -> rv.data.AudioInput
	50, // 34: rv.data.VideoInputSettings.inputs:type_name -> rv.data.VideoInput
	51, // 35: rv.data.RecordRequest.stream:type_name -> rv.data.Recording.Stream
	52, // 36: rv.data.RecordRequest.working_directory:type_name -> rv.data.URL
	45, // 37: rv.data.RecordRequest.resi:type_name -> rv.data.RecordRequest.Resi
	46, // 38: rv.data.TextSegmentRequest.segments:type_name -> rv.data.TextSegmentRequest.Segment
	6,  // 39: rv.data.ProClockSource.type:type_name -> rv.data.ProClockSource.Type
	1,  // 40: rv.data.MediaMetadataRequestResponse.Metadata.content_type:type_name -> rv.data.MediaMetadataRequestResponse.Metadata.ContentType
	3,  // 41: rv.data.ControlTransport.SetScaleModeControlType.mode:type_name -> rv.data.ControlTransport.SetScaleModeControlType.ScaleBehavior
	4,  // 42: rv.data.ControlTransport.SetScaleModeControlType.alignment:type_name -> rv.data.ControlTransport.SetScaleModeControlType.ScaleAlignment
	5,  // 43: rv.data.ControlTransport.SetNativeRotationControlType.rotation:type_name -> rv.data.ControlTransport.SetNativeRotationControlType.NativeRotationType
	47, // 44: rv.data.ControlTransport.SetEffectsControlType.effects:type_name -> rv.data.Effect
	47, // 45: rv.data.ControlTransport.UpdateEffectControlType.effect:type_name -> rv.data.Effect
	53, // 46: rv.data.ControlTransport.SetAudioPropertiesType.audio_properties:type_name -> rv.data.Media.AudioProperties
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_proCore_proto_init() }
func file_proCore_proto_init() {
	if File_proCore_proto != nil {
		return
	}
	file_effects_proto_init()
	file_action_proto_init()
	file_graphicsData_proto_init()
	file_input_proto_init()
	file_recording_proto_init()
	file_basicTypes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proCore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaMetadataRequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaMetadataRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioInputSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInputSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextSegmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProClockSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaMetadataRequestResponse_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaMetadataRequestResponse_BitmapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_PlayControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_PauseControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_RewindControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_FastForwardControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SkipBackControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SkipForwardControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_StepBackControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_StepForwardControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_GoToStartControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_GoToEndControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_JumpToTimeControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_JumpToPercentControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_MarkInPointControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_MarkOutPointControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SetScaleModeControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SetFlippedModeControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SetPlayRateControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SetNativeRotationControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_TogglePlaybackControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SetEffectsControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_UpdateEffectControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_BeginScrubControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_EndScrubControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_ScrubToTimeControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_ScrubToPercentControlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SetAudioFadeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlTransport_SetAudioPropertiesType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordRequest_Resi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proCore_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextSegmentRequest_Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proCore_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ControlTransport_Play)(nil),
		(*ControlTransport_Pause)(nil),
		(*ControlTransport_Rewind)(nil),
		(*ControlTransport_Fastforward)(nil),
		(*ControlTransport_SkipBack)(nil),
		(*ControlTransport_SkipForward)(nil),
		(*ControlTransport_StepBack)(nil),
		(*ControlTransport_StepForward)(nil),
		(*ControlTransport_GoToStart)(nil),
		(*ControlTransport_GoToEnd)(nil),
		(*ControlTransport_JumpToTime)(nil),
		(*ControlTransport_JumpToPercent)(nil),
		(*ControlTransport_MarkIn)(nil),
		(*ControlTransport_MarkOut)(nil),
		(*ControlTransport_SetScaleMode)(nil),
		(*ControlTransport_SetFlippedMode)(nil),
		(*ControlTransport_SetPlayRate)(nil),
		(*ControlTransport_SetRotation)(nil),
		(*ControlTransport_TogglePlayback)(nil),
		(*ControlTransport_SetEffects)(nil),
		(*ControlTransport_UpdateEffect)(nil),
		(*ControlTransport_BeginScrub)(nil),
		(*ControlTransport_EndScrub)(nil),
		(*ControlTransport_ScrubToTime)(nil),
		(*ControlTransport_ScrubToPercent)(nil),
		(*ControlTransport_SetAudioFade)(nil),
		(*ControlTransport_SetAudioProperties)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proCore_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proCore_proto_goTypes,
		DependencyIndexes: file_proCore_proto_depIdxs,
		EnumInfos:         file_proCore_proto_enumTypes,
		MessageInfos:      file_proCore_proto_msgTypes,
	}.Build()
	File_proCore_proto = out.File
	file_proCore_proto_rawDesc = nil
	file_proCore_proto_goTypes = nil
	file_proCore_proto_depIdxs = nil
}
